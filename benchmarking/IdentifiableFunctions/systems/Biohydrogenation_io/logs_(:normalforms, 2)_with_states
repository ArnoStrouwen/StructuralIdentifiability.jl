âŒœ # Computing specializations..  	 Time: 0:00:14[Kâœ“ # Computing specializations..  	 Time: 0:00:15[K
âŒœ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[Aâœ“ # Computing specializations.. 	 Time: 0:00:04[K
â”Œ Info: Processing Biohydrogenation_io
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
â”Œ Info: Averaging over 1 runs.
â”‚ Using keyword arguments:
â”‚ NamedTuple{(:strategy, :with_states), Tuple{Tuple{Symbol, Int64}, Bool}}
â”‚ (strategy = (:normalforms, 2), with_states = true)
â”‚ ID: (:normalforms, 2)_with_states
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
â”Œ Info: Computing IO-equations
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
â”Œ Info: IO-equations computed in 3.984603286 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
â”Œ Info: Simplifying identifiable functions
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:644
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”‚ Assess correctness: false
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
â”Œ Info: Given 43 functions in Rational Field(k5, k8, x7, k9, k6, k10, x6, x5, k7, y1, x4, y2)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, t]
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
â”Œ Info: Specializing at 3 points to guess the shape of the basis..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
â”Œ Info: Specializing at random points to guess the total degrees in parameters..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
â”Œ Info: Success! 34 points used.
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
â”Œ Info: The total degrees in the coefficients
â”‚   state.param_degrees = [[(0, 0), (0, 7)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1), (2, 1)], [(0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0), (2, 0)]]
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
â”Œ Info: Interpolating the exponents in parameters..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
â”Œ Info: Interpolating for degrees:
â”‚ Numerator: 2, Denominator: 3
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
â”Œ Info: Success! 28 points used.
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
â”Œ Info: Basis exponents summary:
â”‚     Maximal interpolated degrees are: 2 for num. and 1 for den.
â”‚     Maximal number of interpolated terms are: 2 for num. and 1 for den.
â”‚     
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
â”Œ Info: Recovering the coefficients..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
â”Œ Info: Groebner basis computed in 0.761314509 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
â”Œ Info: Checking two-sided inclusion modulo a prime
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
â”Œ Info: Inclusion checked in 0.009683759 seconds. Result: true
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
â”Œ Info: The coefficients of the Groebner basis are presented by 13 rational functions
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
â”Œ Info: The pool of fractions:
â”‚ -x4,
â”‚ -k7,
â”‚ -x5,
â”‚ -k6,
â”‚ -k5,
â”‚ -k10 + 2*x6,
â”‚ k10 - 2*x6,
â”‚ -k8 - x6,
â”‚ -k10*x6 + x6^2,
â”‚ (-2*k9)//k10,
â”‚ (-k9*k10 + 2*k9*x6)//k10
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
â”Œ Info: Computing normal forms of monomials in 12 variables up to degree 2
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:554
â”Œ Info: Reducing the normal forms of 90 monomials over QQ
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:570
â”Œ Info: Generators from normal forms
â”‚   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[k5, k6, x5, k7, x4, k5^2, k5*k6, k5*x5, k5*k7, k5*x4, k9^2, k9*k10, k6^2, k6*x5, k6*k7, k6*x4, k10^2, x5^2, x5*k7, x5*x4, k7^2, k7*x4, x4^2, 2*k8 + k10, -1//2*k10 + x6, 2*k5*k8 + k5*k10, -1//2*k5*k10 + k5*x6, k8^2 + k8*k10, 2*k8*k6 + k6*k10, -1//2*k6*k10 + k6*x6, 2*k8*x5 + k10*x5, 2*k8*k7 + k10*k7, 2*k8*x4 + k10*x4, -k10*x6 + x6^2, -1//2*k10*x5 + x6*x5, -1//2*k10*k7 + x6*k7, -1//2*k10*x4 + x6*x4]
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:573
â”Œ Info: Final cleaning and simplification of generators
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:697
â”Œ Info: The pool of fractions:
â”‚ x4,
â”‚ x4,
â”‚ k7,
â”‚ k7,
â”‚ x5,
â”‚ x5,
â”‚ k6,
â”‚ k6,
â”‚ k5,
â”‚ k5,
â”‚ x4^2,
â”‚ k7*x4,
â”‚ k7^2,
â”‚ x5*x4,
â”‚ x5*k7,
â”‚ x5^2,
â”‚ k10^2,
â”‚ k6*x4,
â”‚ k6*k7,
â”‚ k6*x5,
â”‚ k6^2,
â”‚ k9*k10,
â”‚ k9^2,
â”‚ k5*x4,
â”‚ k5*k7,
â”‚ k5*x5,
â”‚ k5*k6,
â”‚ k5^2,
â”‚ k10 - 2*x6,
â”‚ -1//2*k10 + x6,
â”‚ k8 + x6,
â”‚ 2*k8 + k10,
â”‚ -1//2*k10*x4 + x6*x4,
â”‚ -1//2*k10*k7 + x6*k7,
â”‚ -1//2*k10*x5 + x6*x5,
â”‚ k10*x6 - x6^2,
â”‚ -k10*x6 + x6^2,
â”‚ -1//2*k6*k10 + k6*x6,
â”‚ 2*k8*x4 + k10*x4,
â”‚ 2*k8*k7 + k10*k7,
â”‚ 2*k8*x5 + k10*x5,
â”‚ 2*k8*k6 + k6*k10,
â”‚ k8^2 + k8*k10,
â”‚ -1//2*k5*k10 + k5*x6,
â”‚ 2*k5*k8 + k5*k10,
â”‚ k9//k10
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
â”Œ Info: Checking inclusion with probability 0.99
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:700
â”Œ Info: Inclusion checked in 0.014181132 seconds. Result: true
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:703
â”Œ Info: Out of 42 initial generators there are 9 indepdendent
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:708
â”Œ Info: The ranking of the new set of generators is 57
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:711
â”Œ Info: The search for identifiable functions concluded in 6.457717677 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
â”Œ Info: Identifiable functions are
â”‚   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[x4, k7, x5, k6, k5, k10^2, k9*k10, k10 - 2*x6, k8 + x6]
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
