⌜ # Computing specializations..  	 Time: 0:00:09[K✓ # Computing specializations..  	 Time: 0:00:10[K
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  13[K[K[A✓ # Computing specializations.. 	 Time: 0:00:02[K
┌ Info: Processing SEIR 36 ref
└ @ Main /home/ademin/SI2/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
┌ Info: Averaging over 1 runs.
│ Using keyword arguments:
│ NamedTuple{(:strategy,), Tuple{Tuple{Symbol, Int64}}}
│ (strategy = (:normalforms, 2),)
│ ID: (:normalforms, 2)
└ @ Main /home/ademin/SI2/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
┌ Info: Computing IO-equations
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
┌ Info: IO-equations computed in 2.61091952 seconds
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
┌ Info: Simplifying identifiable functions
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:512
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 65 functions in Rational Field(gamma, phi, mu_0, s_d, mu_d, s, mu_i, beta, gamma_d, phi_e, beta_d)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, t]
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 34 points used.
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (0, 3)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0), (1, 0)]]
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 1, Denominator: 3
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 24 points used.
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 1 for num. and 0 for den.
│     Maximal number of interpolated terms are: 2 for num. and 1 for den.
│     
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.816882413 seconds
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:344
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:349
┌ Info: Inclusion checked in 0.008028488 seconds. Result: true
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:359
┌ Info: The coefficients of the Groebner basis are presented by 10 rational functions
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: The pool of fractions:
│ -beta_d,
│ -phi_e,
│ -beta,
│ -s,
│ -s_d,
│ -mu_0,
│ -phi,
│ -mu_d - gamma_d,
│ -gamma - mu_i
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:225
┌ Info: Computing linear relations of monomials up to degree 2
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:383
┌ Info: Generators from normal forms
│   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[phi, mu_0, s_d, s, beta, phi_e, beta_d, phi^2, phi*mu_0, phi*s_d, phi*s, phi*beta, phi*phi_e, phi*beta_d, mu_0^2, mu_0*s_d, mu_0*s, mu_0*beta, mu_0*phi_e, mu_0*beta_d, s_d^2, s_d*s, s_d*beta, s_d*phi_e, s_d*beta_d, s^2, s*beta, s*phi_e, s*beta_d, beta^2, beta*phi_e, beta*beta_d, phi_e^2, phi_e*beta_d, beta_d^2, mu_d + gamma_d, phi*mu_d + phi*gamma_d, mu_0*mu_d + mu_0*gamma_d, s_d*mu_d + s_d*gamma_d, mu_d*s + s*gamma_d, mu_d*beta + beta*gamma_d, mu_d*phi_e + gamma_d*phi_e, mu_d*beta_d + gamma_d*beta_d, gamma + mu_i, gamma*phi + phi*mu_i, gamma*mu_0 + mu_0*mu_i, gamma*s_d + s_d*mu_i, gamma*s + s*mu_i, gamma*beta + mu_i*beta, gamma*phi_e + mu_i*phi_e, gamma*beta_d + mu_i*beta_d]
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:455
┌ Info: Final cleaning and simplification of generators
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:555
┌ Info: The pool of fractions:
│ beta_d,
│ beta_d,
│ phi_e,
│ phi_e,
│ beta,
│ beta,
│ s,
│ s,
│ s_d,
│ s_d,
│ mu_0,
│ mu_0,
│ phi,
│ phi,
│ beta_d^2,
│ phi_e*beta_d,
│ phi_e^2,
│ beta*beta_d,
│ beta*phi_e,
│ beta^2,
│ s*beta_d,
│ s*phi_e,
│ s*beta,
│ s^2,
│ s_d*beta_d,
│ s_d*phi_e,
│ s_d*beta,
│ s_d*s,
│ s_d^2,
│ mu_0*beta_d,
│ mu_0*phi_e,
│ mu_0*beta,
│ mu_0*s,
│ mu_0*s_d,
│ mu_0^2,
│ phi*beta_d,
│ phi*phi_e,
│ phi*beta,
│ phi*s,
│ phi*s_d,
│ phi*mu_0,
│ phi^2,
│ mu_d + gamma_d,
│ mu_d + gamma_d,
│ gamma + mu_i,
│ gamma + mu_i,
│ mu_d*beta_d + gamma_d*beta_d,
│ mu_d*phi_e + gamma_d*phi_e,
│ mu_d*beta + beta*gamma_d,
│ mu_d*s + s*gamma_d,
│ s_d*mu_d + s_d*gamma_d,
│ mu_0*mu_d + mu_0*gamma_d,
│ phi*mu_d + phi*gamma_d,
│ gamma*beta_d + mu_i*beta_d,
│ gamma*phi_e + mu_i*phi_e,
│ gamma*beta + mu_i*beta,
│ gamma*s + s*mu_i,
│ gamma*s_d + s_d*mu_i,
│ gamma*mu_0 + mu_0*mu_i,
│ gamma*phi + phi*mu_i
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:225
┌ Info: Checking inclusion with probability 0.99
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:558
┌ Info: Inclusion checked in 0.02048621 seconds. Result: true
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:562
┌ Info: Out of 64 initial generators there are 9 indepdendent
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:567
┌ Info: The search for identifiable functions concluded in 4.7845195 seconds
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
┌ Info: Identifiable functions are
│   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[beta_d, phi_e, beta, s, s_d, mu_0, phi, mu_d + gamma_d, gamma + mu_i]
└ @ Main /home/ademin/SI2/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
