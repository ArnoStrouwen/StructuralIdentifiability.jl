⌜ # Computing specializations..  	 Time: 0:00:18[K✓ # Computing specializations..  	 Time: 0:00:19[K
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[A✓ # Computing specializations.. 	 Time: 0:00:03[K
⌜ # Computing specializations..  	 Time: 0:00:10[K✓ # Computing specializations..  	 Time: 0:00:10[K
┌ Info: Processing JAK-STAT 1
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
┌ Info: Averaging over 1 runs.
│ Using keyword arguments:
│ NamedTuple{(:strategy, :with_states), Tuple{Tuple{Symbol}, Bool}}
│ (strategy = (:hybrid,), with_states = true)
│ ID: (:hybrid,)_with_states
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
┌ Info: Computing IO-equations
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
┌ Info: IO-equations computed in 32.699521429 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
⌜ # Computing specializations..  	 Time: 0:00:12[K✓ # Computing specializations..  	 Time: 0:00:12[K
⌜ # Computing specializations..  	 Time: 0:00:00[K⌝ # Computing specializations..  	 Time: 0:00:00[K⌟ # Computing specializations..  	 Time: 0:00:01[K⌞ # Computing specializations..  	 Time: 0:00:01[K⌜ # Computing specializations..  	 Time: 0:00:01[K⌝ # Computing specializations..  	 Time: 0:00:02[K⌟ # Computing specializations..  	 Time: 0:00:02[K⌞ # Computing specializations..  	 Time: 0:00:03[K⌜ # Computing specializations..  	 Time: 0:00:03[K⌝ # Computing specializations..  	 Time: 0:00:03[K⌟ # Computing specializations..  	 Time: 0:00:04[K⌞ # Computing specializations..  	 Time: 0:00:04[K⌜ # Computing specializations..  	 Time: 0:00:04[K⌝ # Computing specializations..  	 Time: 0:00:05[K⌟ # Computing specializations..  	 Time: 0:00:05[K⌞ # Computing specializations..  	 Time: 0:00:05[K✓ # Computing specializations..  	 Time: 0:00:06[K
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  7[K[K[A✓ # Computing specializations.. 	 Time: 0:00:00[K
┌ Info: Simplifying identifiable functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:644
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 1326 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 130 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 21)], [(0, 0), (2, 0)], [(0, 0), (2, 0)], [(0, 0), (22, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 3, Denominator: 3
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 16 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 1 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 21.291089937 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 4.217919123 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 31 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: The pool of fractions:
│ -x4,
│ -t1,
│ -x2,
│ -t8,
│ -t13,
│ -t7,
│ -t2,
│ -t9,
│ -x10,
│ -x1,
│ -t12,
│ -t4,
│ -x3,
│ -t18,
│ -x5,
│ -x6,
│ -x9,
│ -t10,
│ -t14,
│ -t19,
│ -t20,
│ -t16,
│ -x7,
│ -t5,
│ -t6,
│ -t3,
│ -t22*t17,
│ -t21*t15,
│ -t11//t15,
│ -x8//t15
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
┌ Info: Computing normal forms of monomials in 41 variables up to degree 3
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:554
┌ Info: Reducing the normal forms of 13243 monomials over QQ
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:570
┌ Info: Generators from normal forms
│   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[t3, t6, t5, x7, t16, t20, t19, t14, t10, x9, x6, x5, t18, x3, t4, t12, x1, x10, t9, t2, t7, t13, t8, x2, t1, x4, t3^2, t3*t6, t3*t5, t3*x7, t3*t16, t3*t20, t3*t19, t3*t14, t3*t10, t3*x9, t3*x6, t3*x5, t3*t18, t3*x3, t3*t4, t3*t12, t3*x1, t3*x10, t3*t9, t3*t2, t3*t7, t3*t13, t3*t8, t3*x2, t3*t1, t3*x4, t6^2, t6*t5, t6*x7, t6*t16, t6*t20, t6*t19, t6*t14, t6*t10, t6*x9, t6*x6, t6*x5, t6*t18, t6*x3, t6*t4, t6*t12, t6*x1, t6*x10, t6*t9, t6*t2, t6*t7, t6*t13, t6*t8, t6*x2, t6*t1, t6*x4, x8*t21, t21*t11, t21*t15, t22*t17, t5^2, t5*x7, t5*t16, t5*t20, t5*t19, t5*t14, t5*t10, t5*x9, t5*x6, t5*x5, t5*t18, t5*x3, t5*t4, t5*t12, t5*x1, t5*x10, t5*t9, t5*t2, t5*t7, t5*t13, t5*t8, t5*x2, t5*t1, t5*x4, x7^2, x7*t16, x7*t20, x7*t19, x7*t14, x7*t10, x7*x9, x7*x6, x7*x5, x7*t18, x7*x3, x7*t4, x7*t12, x7*x1, x7*x10, x7*t9, x7*t2, x7*t7, x7*t13, x7*t8, x7*x2, x7*t1, x7*x4, t16^2, t16*t20, t16*t19, t16*t14, t16*t10, t16*x9, t16*x6, t16*x5, t16*t18, t16*x3, t16*t4, t16*t12, t16*x1, t16*x10, t16*t9, t16*t2, t16*t7, t16*t13, t16*t8, t16*x2, t16*t1, t16*x4, t20^2, t20*t19, t20*t14, t20*t10, t20*x9, t20*x6, t20*x5, t20*t18, t20*x3, t20*t4, t20*t12, t20*x1, t20*x10, t20*t9, t20*t2, t20*t7, t20*t13, t20*t8, t20*x2, t20*t1, t20*x4, t19^2, t19*t14, t19*t10, t19*x9, t19*x6, t19*x5, t19*t18, t19*x3, t19*t4, t19*t12, t19*x1, t19*x10, t19*t9, t19*t2, t19*t7, t19*t13, t19*t8, t19*x2, t19*t1, t19*x4, t14^2, t14*t10, t14*x9, t14*x6, t14*x5, t14*t18, t14*x3, t14*t4, t14*t12, t14*x1, t14*x10, t14*t9, t14*t2, t14*t7, t14*t13, t14*t8, t14*x2, t14*t1, t14*x4, t10^2, t10*x9, t10*x6, t10*x5, t10*t18, t10*x3, t10*t4, t10*t12, t10*x1, t10*x10, t10*t9, t10*t2, t10*t7, t10*t13, t10*t8, t10*x2, t10*t1, t10*x4, x9^2, x9*x6, x9*x5, x9*t18, x9*x3, x9*t4, x9*t12, x9*x1, x9*x10, x9*t9, x9*t2, x9*t7, x9*t13, x9*t8, x9*x2, x9*t1, x9*x4, x6^2, x6*x5, x6*t18, x6*x3, x6*t4, x6*t12, x6*x1, x6*x10, x6*t9, x6*t2, x6*t7, x6*t13, x6*t8, x6*x2, x6*t1, x6*x4, x5^2, x5*t18, x5*x3, x5*t4, x5*t12, x5*x1, x5*x10, x5*t9, x5*t2, x5*t7, x5*t13, x5*t8, x5*x2, x5*t1, x5*x4, t18^2, t18*x3, t18*t4, t18*t12, t18*x1, t18*x10, t18*t9, t18*t2, t18*t7, t18*t13, t18*t8, t18*x2, t18*t1, t18*x4, x3^2, x3*t4, x3*t12, x3*x1, x3*x10, x3*t9, x3*t2, x3*t7, x3*t13, x3*t8, x3*x2, x3*t1, x3*x4, t4^2, t4*t12, t4*x1, t4*x10, t4*t9, t4*t2, t4*t7, t4*t13, t4*t8, t4*x2, t4*t1, t4*x4, t12^2, t12*x1, t12*x10, t12*t9, t12*t2, t12*t7, t12*t13, t12*t8, t12*x2, t12*t1, t12*x4, x1^2, x1*x10, x1*t9, x1*t2, x1*t7, x1*t13, x1*t8, x1*x2, x1*t1, x1*x4, x10^2, x10*t9, x10*t2, x10*t7, x10*t13, x10*t8, x10*x2, x10*t1, x10*x4, t9^2, t9*t2, t9*t7, t9*t13, t9*t8, t9*x2, t9*t1, t9*x4, t2^2, t2*t7, t2*t13, t2*t8, t2*x2, t2*t1, t2*x4, t7^2, t7*t13, t7*t8, t7*x2, t7*t1, t7*x4, t13^2, t13*t8, t13*x2, t13*t1, t13*x4, t8^2, t8*x2, t8*t1, t8*x4, x2^2, x2*t1, x2*x4, t1^2, t1*x4, x4^2, t3^3, t3^2*t6, t3^2*t5, t3^2*x7, t3^2*t16, t3^2*t20, t3^2*t19, t3^2*t14, t3^2*t10, t3^2*x9, t3^2*x6, t3^2*x5, t3^2*t18, t3^2*x3, t3^2*t4, t3^2*t12, t3^2*x1, t3^2*x10, t3^2*t9, t3^2*t2, t3^2*t7, t3^2*t13, t3^2*t8, t3^2*x2, t3^2*t1, t3^2*x4, t3*t6^2, t3*t6*t5, t3*t6*x7, t3*t6*t16, t3*t6*t20, t3*t6*t19, t3*t6*t14, t3*t6*t10, t3*t6*x9, t3*t6*x6, t3*t6*x5, t3*t6*t18, t3*t6*x3, t3*t6*t4, t3*t6*t12, t3*t6*x1, t3*t6*x10, t3*t6*t9, t3*t6*t2, t3*t6*t7, t3*t6*t13, t3*t6*t8, t3*t6*x2, t3*t6*t1, t3*t6*x4, t3*x8*t21, t3*t21*t11, t3*t21*t15, t3*t22*t17, t3*t5^2, t3*t5*x7, t3*t5*t16, t3*t5*t20, t3*t5*t19, t3*t5*t14, t3*t5*t10, t3*t5*x9, t3*t5*x6, t3*t5*x5, t3*t5*t18, t3*t5*x3, t3*t5*t4, t3*t5*t12, t3*t5*x1, t3*t5*x10, t3*t5*t9, t3*t5*t2, t3*t5*t7, t3*t5*t13, t3*t5*t8, t3*t5*x2, t3*t5*t1, t3*t5*x4, t3*x7^2, t3*x7*t16, t3*x7*t20, t3*x7*t19, t3*x7*t14, t3*x7*t10, t3*x7*x9, t3*x7*x6, t3*x7*x5, t3*x7*t18, t3*x7*x3, t3*x7*t4, t3*x7*t12, t3*x7*x1, t3*x7*x10, t3*x7*t9, t3*x7*t2, t3*x7*t7, t3*x7*t13, t3*x7*t8, t3*x7*x2, t3*x7*t1, t3*x7*x4, t3*t16^2, t3*t16*t20, t3*t16*t19, t3*t16*t14, t3*t16*t10, t3*t16*x9, t3*t16*x6, t3*t16*x5, t3*t16*t18, t3*t16*x3, t3*t16*t4, t3*t16*t12, t3*t16*x1, t3*t16*x10, t3*t16*t9, t3*t16*t2, t3*t16*t7, t3*t16*t13, t3*t16*t8, t3*t16*x2, t3*t16*t1, t3*t16*x4, t3*t20^2, t3*t20*t19, t3*t20*t14, t3*t20*t10, t3*t20*x9, t3*t20*x6, t3*t20*x5, t3*t20*t18, t3*t20*x3, t3*t20*t4, t3*t20*t12, t3*t20*x1, t3*t20*x10, t3*t20*t9, t3*t20*t2, t3*t20*t7, t3*t20*t13, t3*t20*t8, t3*t20*x2, t3*t20*t1, t3*t20*x4, t3*t19^2, t3*t19*t14, t3*t19*t10, t3*t19*x9, t3*t19*x6, t3*t19*x5, t3*t19*t18, t3*t19*x3, t3*t19*t4, t3*t19*t12, t3*t19*x1, t3*t19*x10, t3*t19*t9, t3*t19*t2, t3*t19*t7, t3*t19*t13, t3*t19*t8, t3*t19*x2, t3*t19*t1, t3*t19*x4, t3*t14^2, t3*t14*t10, t3*t14*x9, t3*t14*x6, t3*t14*x5, t3*t14*t18, t3*t14*x3, t3*t14*t4, t3*t14*t12, t3*t14*x1, t3*t14*x10, t3*t14*t9, t3*t14*t2, t3*t14*t7, t3*t14*t13, t3*t14*t8, t3*t14*x2, t3*t14*t1, t3*t14*x4, t3*t10^2, t3*t10*x9, t3*t10*x6, t3*t10*x5, t3*t10*t18, t3*t10*x3, t3*t10*t4, t3*t10*t12, t3*t10*x1, t3*t10*x10, t3*t10*t9, t3*t10*t2, t3*t10*t7, t3*t10*t13, t3*t10*t8, t3*t10*x2, t3*t10*t1, t3*t10*x4, t3*x9^2, t3*x9*x6, t3*x9*x5, t3*x9*t18, t3*x9*x3, t3*x9*t4, t3*x9*t12, t3*x9*x1, t3*x9*x10, t3*x9*t9, t3*x9*t2, t3*x9*t7, t3*x9*t13, t3*x9*t8, t3*x9*x2, t3*x9*t1, t3*x9*x4, t3*x6^2, t3*x6*x5, t3*x6*t18, t3*x6*x3, t3*x6*t4, t3*x6*t12, t3*x6*x1, t3*x6*x10, t3*x6*t9, t3*x6*t2, t3*x6*t7, t3*x6*t13, t3*x6*t8, t3*x6*x2, t3*x6*t1, t3*x6*x4, t3*x5^2, t3*x5*t18, t3*x5*x3, t3*x5*t4, t3*x5*t12, t3*x5*x1, t3*x5*x10, t3*x5*t9, t3*x5*t2, t3*x5*t7, t3*x5*t13, t3*x5*t8, t3*x5*x2, t3*x5*t1, t3*x5*x4, t3*t18^2, t3*t18*x3, t3*t18*t4, t3*t18*t12, t3*t18*x1, t3*t18*x10, t3*t18*t9, t3*t18*t2, t3*t18*t7, t3*t18*t13, t3*t18*t8, t3*t18*x2, t3*t18*t1, t3*t18*x4, t3*x3^2, t3*x3*t4, t3*x3*t12, t3*x3*x1, t3*x3*x10, t3*x3*t9, t3*x3*t2, t3*x3*t7, t3*x3*t13, t3*x3*t8, t3*x3*x2, t3*x3*t1, t3*x3*x4, t3*t4^2, t3*t4*t12, t3*t4*x1, t3*t4*x10, t3*t4*t9, t3*t4*t2, t3*t4*t7, t3*t4*t13, t3*t4*t8, t3*t4*x2, t3*t4*t1, t3*t4*x4, t3*t12^2, t3*t12*x1, t3*t12*x10, t3*t12*t9, t3*t12*t2, t3*t12*t7, t3*t12*t13, t3*t12*t8, t3*t12*x2, t3*t12*t1, t3*t12*x4, t3*x1^2, t3*x1*x10, t3*x1*t9, t3*x1*t2, t3*x1*t7, t3*x1*t13, t3*x1*t8, t3*x1*x2, t3*x1*t1, t3*x1*x4, t3*x10^2, t3*x10*t9, t3*x10*t2, t3*x10*t7, t3*x10*t13, t3*x10*t8, t3*x10*x2, t3*x10*t1, t3*x10*x4, t3*t9^2, t3*t9*t2, t3*t9*t7, t3*t9*t13, t3*t9*t8, t3*t9*x2, t3*t9*t1, t3*t9*x4, t3*t2^2, t3*t2*t7, t3*t2*t13, t3*t2*t8, t3*t2*x2, t3*t2*t1, t3*t2*x4, t3*t7^2, t3*t7*t13, t3*t7*t8, t3*t7*x2, t3*t7*t1, t3*t7*x4, t3*t13^2, t3*t13*t8, t3*t13*x2, t3*t13*t1, t3*t13*x4, t3*t8^2, t3*t8*x2, t3*t8*t1, t3*t8*x4, t3*x2^2, t3*x2*t1, t3*x2*x4, t3*t1^2, t3*t1*x4, t3*x4^2, t6^3, t6^2*t5, t6^2*x7, t6^2*t16, t6^2*t20, t6^2*t19, t6^2*t14, t6^2*t10, t6^2*x9, t6^2*x6, t6^2*x5, t6^2*t18, t6^2*x3, t6^2*t4, t6^2*t12, t6^2*x1, t6^2*x10, t6^2*t9, t6^2*t2, t6^2*t7, t6^2*t13, t6^2*t8, t6^2*x2, t6^2*t1, t6^2*x4, t6*x8*t21, t6*t21*t11, t6*t21*t15, t6*t22*t17, t6*t5^2, t6*t5*x7, t6*t5*t16, t6*t5*t20, t6*t5*t19, t6*t5*t14, t6*t5*t10, t6*t5*x9, t6*t5*x6, t6*t5*x5, t6*t5*t18, t6*t5*x3, t6*t5*t4, t6*t5*t12, t6*t5*x1, t6*t5*x10, t6*t5*t9, t6*t5*t2, t6*t5*t7, t6*t5*t13, t6*t5*t8, t6*t5*x2, t6*t5*t1, t6*t5*x4, t6*x7^2, t6*x7*t16, t6*x7*t20, t6*x7*t19, t6*x7*t14, t6*x7*t10, t6*x7*x9, t6*x7*x6, t6*x7*x5, t6*x7*t18, t6*x7*x3, t6*x7*t4, t6*x7*t12, t6*x7*x1, t6*x7*x10, t6*x7*t9, t6*x7*t2, t6*x7*t7, t6*x7*t13, t6*x7*t8, t6*x7*x2, t6*x7*t1, t6*x7*x4, t6*t16^2, t6*t16*t20, t6*t16*t19, t6*t16*t14, t6*t16*t10, t6*t16*x9, t6*t16*x6, t6*t16*x5, t6*t16*t18, t6*t16*x3, t6*t16*t4, t6*t16*t12, t6*t16*x1, t6*t16*x10, t6*t16*t9, t6*t16*t2, t6*t16*t7, t6*t16*t13, t6*t16*t8, t6*t16*x2, t6*t16*t1, t6*t16*x4, t6*t20^2, t6*t20*t19, t6*t20*t14, t6*t20*t10, t6*t20*x9, t6*t20*x6, t6*t20*x5, t6*t20*t18, t6*t20*x3, t6*t20*t4, t6*t20*t12, t6*t20*x1, t6*t20*x10, t6*t20*t9, t6*t20*t2, t6*t20*t7, t6*t20*t13, t6*t20*t8, t6*t20*x2, t6*t20*t1, t6*t20*x4, t6*t19^2, t6*t19*t14, t6*t19*t10, t6*t19*x9, t6*t19*x6, t6*t19*x5, t6*t19*t18, t6*t19*x3, t6*t19*t4, t6*t19*t12, t6*t19*x1, t6*t19*x10, t6*t19*t9, t6*t19*t2, t6*t19*t7, t6*t19*t13, t6*t19*t8, t6*t19*x2, t6*t19*t1, t6*t19*x4, t6*t14^2, t6*t14*t10, t6*t14*x9, t6*t14*x6, t6*t14*x5, t6*t14*t18, t6*t14*x3, t6*t14*t4, t6*t14*t12, t6*t14*x1, t6*t14*x10, t6*t14*t9, t6*t14*t2, t6*t14*t7, t6*t14*t13, t6*t14*t8, t6*t14*x2, t6*t14*t1, t6*t14*x4, t6*t10^2, t6*t10*x9, t6*t10*x6, t6*t10*x5, t6*t10*t18, t6*t10*x3, t6*t10*t4, t6*t10*t12, t6*t10*x1, t6*t10*x10, t6*t10*t9, t6*t10*t2, t6*t10*t7, t6*t10*t13, t6*t10*t8, t6*t10*x2, t6*t10*t1, t6*t10*x4, t6*x9^2, t6*x9*x6, t6*x9*x5, t6*x9*t18, t6*x9*x3, t6*x9*t4, t6*x9*t12, t6*x9*x1, t6*x9*x10, t6*x9*t9, t6*x9*t2, t6*x9*t7, t6*x9*t13, t6*x9*t8, t6*x9*x2, t6*x9*t1, t6*x9*x4, t6*x6^2, t6*x6*x5, t6*x6*t18, t6*x6*x3, t6*x6*t4, t6*x6*t12, t6*x6*x1, t6*x6*x10, t6*x6*t9, t6*x6*t2, t6*x6*t7, t6*x6*t13, t6*x6*t8, t6*x6*x2, t6*x6*t1, t6*x6*x4, t6*x5^2, t6*x5*t18, t6*x5*x3, t6*x5*t4, t6*x5*t12, t6*x5*x1, t6*x5*x10, t6*x5*t9, t6*x5*t2, t6*x5*t7, t6*x5*t13, t6*x5*t8, t6*x5*x2, t6*x5*t1, t6*x5*x4, t6*t18^2, t6*t18*x3, t6*t18*t4, t6*t18*t12, t6*t18*x1, t6*t18*x10, t6*t18*t9, t6*t18*t2, t6*t18*t7, t6*t18*t13, t6*t18*t8, t6*t18*x2, t6*t18*t1, t6*t18*x4, t6*x3^2, t6*x3*t4, t6*x3*t12, t6*x3*x1, t6*x3*x10, t6*x3*t9, t6*x3*t2, t6*x3*t7, t6*x3*t13, t6*x3*t8, t6*x3*x2, t6*x3*t1, t6*x3*x4, t6*t4^2, t6*t4*t12, t6*t4*x1, t6*t4*x10, t6*t4*t9, t6*t4*t2, t6*t4*t7, t6*t4*t13, t6*t4*t8, t6*t4*x2, t6*t4*t1, t6*t4*x4, t6*t12^2, t6*t12*x1, t6*t12*x10, t6*t12*t9, t6*t12*t2, t6*t12*t7, t6*t12*t13, t6*t12*t8, t6*t12*x2, t6*t12*t1, t6*t12*x4, t6*x1^2, t6*x1*x10, t6*x1*t9, t6*x1*t2, t6*x1*t7, t6*x1*t13, t6*x1*t8, t6*x1*x2, t6*x1*t1, t6*x1*x4, t6*x10^2, t6*x10*t9, t6*x10*t2, t6*x10*t7, t6*x10*t13, t6*x10*t8, t6*x10*x2, t6*x10*t1, t6*x10*x4, t6*t9^2, t6*t9*t2, t6*t9*t7, t6*t9*t13, t6*t9*t8, t6*t9*x2, t6*t9*t1, t6*t9*x4, t6*t2^2, t6*t2*t7, t6*t2*t13, t6*t2*t8, t6*t2*x2, t6*t2*t1, t6*t2*x4, t6*t7^2, t6*t7*t13, t6*t7*t8, t6*t7*x2, t6*t7*t1, t6*t7*x4, t6*t13^2, t6*t13*t8, t6*t13*x2, t6*t13*t1, t6*t13*x4, t6*t8^2, t6*t8*x2, t6*t8*t1, t6*t8*x4, t6*x2^2, t6*x2*t1, t6*x2*x4, t6*t1^2, t6*t1*x4, t6*x4^2, x8*t21*t5, x8*t21*x7, x8*t21*t16, x8*t21*t20, x8*t21*t19, x8*t21*t14, x8*t21*t10, x8*t21*x9, x8*t21*x6, x8*t21*x5, x8*t21*t18, x8*t21*x3, x8*t21*t4, x8*t21*t12, x8*t21*x1, x8*t21*x10, x8*t21*t9, x8*t21*t2, x8*t21*t7, x8*t21*t13, x8*t21*t8, x8*t21*x2, x8*t21*t1, x8*t21*x4, t21*t5*t11, t21*t5*t15, t21*x7*t11, t21*x7*t15, t21*t16*t11, t21*t16*t15, t21*t20*t11, t21*t20*t15, t21*t19*t11, t21*t19*t15, t21*t14*t11, t21*t14*t15, t21*t10*t11, t21*t10*t15, t21*x9*t11, t21*x9*t15, t21*x6*t11, t21*x6*t15, t21*x5*t11, t21*x5*t15, t21*t18*t11, t21*t18*t15, t21*x3*t11, t21*x3*t15, t21*t4*t11, t21*t4*t15, t21*t12*t11, t21*t12*t15, t21*x1*t11, t21*x1*t15, t21*x10*t11, t21*x10*t15, t21*t11*t9, t21*t11*t2, t21*t11*t7, t21*t11*t13, t21*t11*t8, t21*t11*x2, t21*t11*t1, t21*t11*x4, t21*t9*t15, t21*t2*t15, t21*t7*t15, t21*t13*t15, t21*t8*t15, t21*t15*x2, t21*t15*t1, t21*t15*x4, t22*t5*t17, t22*t17*x7, t22*t17*t16, t22*t17*t20, t22*t17*t19, t22*t17*t14, t22*t17*t10, t22*t17*x9, t22*t17*x6, t22*t17*x5, t22*t17*t18, t22*t17*x3, t22*t17*t4, t22*t17*t12, t22*t17*x1, t22*t17*x10, t22*t17*t9, t22*t17*t2, t22*t17*t7, t22*t17*t13, t22*t17*t8, t22*t17*x2, t22*t17*t1, t22*t17*x4, t5^3, t5^2*x7, t5^2*t16, t5^2*t20, t5^2*t19, t5^2*t14, t5^2*t10, t5^2*x9, t5^2*x6, t5^2*x5, t5^2*t18, t5^2*x3, t5^2*t4, t5^2*t12, t5^2*x1, t5^2*x10, t5^2*t9, t5^2*t2, t5^2*t7, t5^2*t13, t5^2*t8, t5^2*x2, t5^2*t1, t5^2*x4, t5*x7^2, t5*x7*t16, t5*x7*t20, t5*x7*t19, t5*x7*t14, t5*x7*t10, t5*x7*x9, t5*x7*x6, t5*x7*x5, t5*x7*t18, t5*x7*x3, t5*x7*t4, t5*x7*t12, t5*x7*x1, t5*x7*x10, t5*x7*t9, t5*x7*t2, t5*x7*t7, t5*x7*t13, t5*x7*t8, t5*x7*x2, t5*x7*t1, t5*x7*x4, t5*t16^2, t5*t16*t20, t5*t16*t19, t5*t16*t14, t5*t16*t10, t5*t16*x9, t5*t16*x6, t5*t16*x5, t5*t16*t18, t5*t16*x3, t5*t16*t4, t5*t16*t12, t5*t16*x1, t5*t16*x10, t5*t16*t9, t5*t16*t2, t5*t16*t7, t5*t16*t13, t5*t16*t8, t5*t16*x2, t5*t16*t1, t5*t16*x4, t5*t20^2, t5*t20*t19, t5*t20*t14, t5*t20*t10, t5*t20*x9, t5*t20*x6, t5*t20*x5, t5*t20*t18, t5*t20*x3, t5*t20*t4, t5*t20*t12, t5*t20*x1, t5*t20*x10, t5*t20*t9, t5*t20*t2, t5*t20*t7, t5*t20*t13, t5*t20*t8, t5*t20*x2, t5*t20*t1, t5*t20*x4, t5*t19^2, t5*t19*t14, t5*t19*t10, t5*t19*x9, t5*t19*x6, t5*t19*x5, t5*t19*t18, t5*t19*x3, t5*t19*t4, t5*t19*t12, t5*t19*x1, t5*t19*x10, t5*t19*t9, t5*t19*t2, t5*t19*t7, t5*t19*t13, t5*t19*t8, t5*t19*x2, t5*t19*t1, t5*t19*x4, t5*t14^2, t5*t14*t10, t5*t14*x9, t5*t14*x6, t5*t14*x5, t5*t14*t18, t5*t14*x3, t5*t14*t4, t5*t14*t12, t5*t14*x1, t5*t14*x10, t5*t14*t9, t5*t14*t2, t5*t14*t7, t5*t14*t13, t5*t14*t8, t5*t14*x2, t5*t14*t1, t5*t14*x4, t5*t10^2, t5*t10*x9, t5*t10*x6, t5*t10*x5, t5*t10*t18, t5*t10*x3, t5*t10*t4, t5*t10*t12, t5*t10*x1, t5*t10*x10, t5*t10*t9, t5*t10*t2, t5*t10*t7, t5*t10*t13, t5*t10*t8, t5*t10*x2, t5*t10*t1, t5*t10*x4, t5*x9^2, t5*x9*x6, t5*x9*x5, t5*x9*t18, t5*x9*x3, t5*x9*t4, t5*x9*t12, t5*x9*x1, t5*x9*x10, t5*x9*t9, t5*x9*t2, t5*x9*t7, t5*x9*t13, t5*x9*t8, t5*x9*x2, t5*x9*t1, t5*x9*x4, t5*x6^2, t5*x6*x5, t5*x6*t18, t5*x6*x3, t5*x6*t4, t5*x6*t12, t5*x6*x1, t5*x6*x10, t5*x6*t9, t5*x6*t2, t5*x6*t7, t5*x6*t13, t5*x6*t8, t5*x6*x2, t5*x6*t1, t5*x6*x4, t5*x5^2, t5*x5*t18, t5*x5*x3, t5*x5*t4, t5*x5*t12, t5*x5*x1, t5*x5*x10, t5*x5*t9, t5*x5*t2, t5*x5*t7, t5*x5*t13, t5*x5*t8, t5*x5*x2, t5*x5*t1, t5*x5*x4, t5*t18^2, t5*t18*x3, t5*t18*t4, t5*t18*t12, t5*t18*x1, t5*t18*x10, t5*t18*t9, t5*t18*t2, t5*t18*t7, t5*t18*t13, t5*t18*t8, t5*t18*x2, t5*t18*t1, t5*t18*x4, t5*x3^2, t5*x3*t4, t5*x3*t12, t5*x3*x1, t5*x3*x10, t5*x3*t9, t5*x3*t2, t5*x3*t7, t5*x3*t13, t5*x3*t8, t5*x3*x2, t5*x3*t1, t5*x3*x4, t5*t4^2, t5*t4*t12, t5*t4*x1, t5*t4*x10, t5*t4*t9, t5*t4*t2, t5*t4*t7, t5*t4*t13, t5*t4*t8, t5*t4*x2, t5*t4*t1, t5*t4*x4, t5*t12^2, t5*t12*x1, t5*t12*x10, t5*t12*t9, t5*t12*t2, t5*t12*t7, t5*t12*t13, t5*t12*t8, t5*t12*x2, t5*t12*t1, t5*t12*x4, t5*x1^2, t5*x1*x10, t5*x1*t9, t5*x1*t2, t5*x1*t7, t5*x1*t13, t5*x1*t8, t5*x1*x2, t5*x1*t1, t5*x1*x4, t5*x10^2, t5*x10*t9, t5*x10*t2, t5*x10*t7, t5*x10*t13, t5*x10*t8, t5*x10*x2, t5*x10*t1, t5*x10*x4, t5*t9^2, t5*t9*t2, t5*t9*t7, t5*t9*t13, t5*t9*t8, t5*t9*x2, t5*t9*t1, t5*t9*x4, t5*t2^2, t5*t2*t7, t5*t2*t13, t5*t2*t8, t5*t2*x2, t5*t2*t1, t5*t2*x4, t5*t7^2, t5*t7*t13, t5*t7*t8, t5*t7*x2, t5*t7*t1, t5*t7*x4, t5*t13^2, t5*t13*t8, t5*t13*x2, t5*t13*t1, t5*t13*x4, t5*t8^2, t5*t8*x2, t5*t8*t1, t5*t8*x4, t5*x2^2, t5*x2*t1, t5*x2*x4, t5*t1^2, t5*t1*x4, t5*x4^2, x7^3, x7^2*t16, x7^2*t20, x7^2*t19, x7^2*t14, x7^2*t10, x7^2*x9, x7^2*x6, x7^2*x5, x7^2*t18, x7^2*x3, x7^2*t4, x7^2*t12, x7^2*x1, x7^2*x10, x7^2*t9, x7^2*t2, x7^2*t7, x7^2*t13, x7^2*t8, x7^2*x2, x7^2*t1, x7^2*x4, x7*t16^2, x7*t16*t20, x7*t16*t19, x7*t16*t14, x7*t16*t10, x7*t16*x9, x7*t16*x6, x7*t16*x5, x7*t16*t18, x7*t16*x3, x7*t16*t4, x7*t16*t12, x7*t16*x1, x7*t16*x10, x7*t16*t9, x7*t16*t2, x7*t16*t7, x7*t16*t13, x7*t16*t8, x7*t16*x2, x7*t16*t1, x7*t16*x4, x7*t20^2, x7*t20*t19, x7*t20*t14, x7*t20*t10, x7*t20*x9, x7*t20*x6, x7*t20*x5, x7*t20*t18, x7*t20*x3, x7*t20*t4, x7*t20*t12, x7*t20*x1, x7*t20*x10, x7*t20*t9, x7*t20*t2, x7*t20*t7, x7*t20*t13, x7*t20*t8, x7*t20*x2, x7*t20*t1, x7*t20*x4, x7*t19^2, x7*t19*t14, x7*t19*t10, x7*t19*x9, x7*t19*x6, x7*t19*x5, x7*t19*t18, x7*t19*x3, x7*t19*t4, x7*t19*t12, x7*t19*x1, x7*t19*x10, x7*t19*t9, x7*t19*t2, x7*t19*t7, x7*t19*t13, x7*t19*t8, x7*t19*x2, x7*t19*t1, x7*t19*x4, x7*t14^2, x7*t14*t10, x7*t14*x9, x7*t14*x6, x7*t14*x5, x7*t14*t18, x7*t14*x3, x7*t14*t4, x7*t14*t12, x7*t14*x1, x7*t14*x10, x7*t14*t9, x7*t14*t2, x7*t14*t7, x7*t14*t13, x7*t14*t8, x7*t14*x2, x7*t14*t1, x7*t14*x4, x7*t10^2, x7*t10*x9, x7*t10*x6, x7*t10*x5, x7*t10*t18, x7*t10*x3, x7*t10*t4, x7*t10*t12, x7*t10*x1, x7*t10*x10, x7*t10*t9, x7*t10*t2, x7*t10*t7, x7*t10*t13, x7*t10*t8, x7*t10*x2, x7*t10*t1, x7*t10*x4, x7*x9^2, x7*x9*x6, x7*x9*x5, x7*x9*t18, x7*x9*x3, x7*x9*t4, x7*x9*t12, x7*x9*x1, x7*x9*x10, x7*x9*t9, x7*x9*t2, x7*x9*t7, x7*x9*t13, x7*x9*t8, x7*x9*x2, x7*x9*t1, x7*x9*x4, x7*x6^2, x7*x6*x5, x7*x6*t18, x7*x6*x3, x7*x6*t4, x7*x6*t12, x7*x6*x1, x7*x6*x10, x7*x6*t9, x7*x6*t2, x7*x6*t7, x7*x6*t13, x7*x6*t8, x7*x6*x2, x7*x6*t1, x7*x6*x4, x7*x5^2, x7*x5*t18, x7*x5*x3, x7*x5*t4, x7*x5*t12, x7*x5*x1, x7*x5*x10, x7*x5*t9, x7*x5*t2, x7*x5*t7, x7*x5*t13, x7*x5*t8, x7*x5*x2, x7*x5*t1, x7*x5*x4, x7*t18^2, x7*t18*x3, x7*t18*t4, x7*t18*t12, x7*t18*x1, x7*t18*x10, x7*t18*t9, x7*t18*t2, x7*t18*t7, x7*t18*t13, x7*t18*t8, x7*t18*x2, x7*t18*t1, x7*t18*x4, x7*x3^2, x7*x3*t4, x7*x3*t12, x7*x3*x1, x7*x3*x10, x7*x3*t9, x7*x3*t2, x7*x3*t7, x7*x3*t13, x7*x3*t8, x7*x3*x2, x7*x3*t1, x7*x3*x4, x7*t4^2, x7*t4*t12, x7*t4*x1, x7*t4*x10, x7*t4*t9, x7*t4*t2, x7*t4*t7, x7*t4*t13, x7*t4*t8, x7*t4*x2, x7*t4*t1, x7*t4*x4, x7*t12^2, x7*t12*x1, x7*t12*x10, x7*t12*t9, x7*t12*t2, x7*t12*t7, x7*t12*t13, x7*t12*t8, x7*t12*x2, x7*t12*t1, x7*t12*x4, x7*x1^2, x7*x1*x10, x7*x1*t9, x7*x1*t2, x7*x1*t7, x7*x1*t13, x7*x1*t8, x7*x1*x2, x7*x1*t1, x7*x1*x4, x7*x10^2, x7*x10*t9, x7*x10*t2, x7*x10*t7, x7*x10*t13, x7*x10*t8, x7*x10*x2, x7*x10*t1, x7*x10*x4, x7*t9^2, x7*t9*t2, x7*t9*t7, x7*t9*t13, x7*t9*t8, x7*t9*x2, x7*t9*t1, x7*t9*x4, x7*t2^2, x7*t2*t7, x7*t2*t13, x7*t2*t8, x7*t2*x2, x7*t2*t1, x7*t2*x4, x7*t7^2, x7*t7*t13, x7*t7*t8, x7*t7*x2, x7*t7*t1, x7*t7*x4, x7*t13^2, x7*t13*t8, x7*t13*x2, x7*t13*t1, x7*t13*x4, x7*t8^2, x7*t8*x2, x7*t8*t1, x7*t8*x4, x7*x2^2, x7*x2*t1, x7*x2*x4, x7*t1^2, x7*t1*x4, x7*x4^2, t16^3, t16^2*t20, t16^2*t19, t16^2*t14, t16^2*t10, t16^2*x9, t16^2*x6, t16^2*x5, t16^2*t18, t16^2*x3, t16^2*t4, t16^2*t12, t16^2*x1, t16^2*x10, t16^2*t9, t16^2*t2, t16^2*t7, t16^2*t13, t16^2*t8, t16^2*x2, t16^2*t1, t16^2*x4, t16*t20^2, t16*t20*t19, t16*t20*t14, t16*t20*t10, t16*t20*x9, t16*t20*x6, t16*t20*x5, t16*t20*t18, t16*t20*x3, t16*t20*t4, t16*t20*t12, t16*t20*x1, t16*t20*x10, t16*t20*t9, t16*t20*t2, t16*t20*t7, t16*t20*t13, t16*t20*t8, t16*t20*x2, t16*t20*t1, t16*t20*x4, t16*t19^2, t16*t19*t14, t16*t19*t10, t16*t19*x9, t16*t19*x6, t16*t19*x5, t16*t19*t18, t16*t19*x3, t16*t19*t4, t16*t19*t12, t16*t19*x1, t16*t19*x10, t16*t19*t9, t16*t19*t2, t16*t19*t7, t16*t19*t13, t16*t19*t8, t16*t19*x2, t16*t19*t1, t16*t19*x4, t16*t14^2, t16*t14*t10, t16*t14*x9, t16*t14*x6, t16*t14*x5, t16*t14*t18, t16*t14*x3, t16*t14*t4, t16*t14*t12, t16*t14*x1, t16*t14*x10, t16*t14*t9, t16*t14*t2, t16*t14*t7, t16*t14*t13, t16*t14*t8, t16*t14*x2, t16*t14*t1, t16*t14*x4, t16*t10^2, t16*t10*x9, t16*t10*x6, t16*t10*x5, t16*t10*t18, t16*t10*x3, t16*t10*t4, t16*t10*t12, t16*t10*x1, t16*t10*x10, t16*t10*t9, t16*t10*t2, t16*t10*t7, t16*t10*t13, t16*t10*t8, t16*t10*x2, t16*t10*t1, t16*t10*x4, t16*x9^2, t16*x9*x6, t16*x9*x5, t16*x9*t18, t16*x9*x3, t16*x9*t4, t16*x9*t12, t16*x9*x1, t16*x9*x10, t16*x9*t9, t16*x9*t2, t16*x9*t7, t16*x9*t13, t16*x9*t8, t16*x9*x2, t16*x9*t1, t16*x9*x4, t16*x6^2, t16*x6*x5, t16*x6*t18, t16*x6*x3, t16*x6*t4, t16*x6*t12, t16*x6*x1, t16*x6*x10, t16*x6*t9, t16*x6*t2, t16*x6*t7, t16*x6*t13, t16*x6*t8, t16*x6*x2, t16*x6*t1, t16*x6*x4, t16*x5^2, t16*x5*t18, t16*x5*x3, t16*x5*t4, t16*x5*t12, t16*x5*x1, t16*x5*x10, t16*x5*t9, t16*x5*t2, t16*x5*t7, t16*x5*t13, t16*x5*t8, t16*x5*x2, t16*x5*t1, t16*x5*x4, t16*t18^2, t16*t18*x3, t16*t18*t4, t16*t18*t12, t16*t18*x1, t16*t18*x10, t16*t18*t9, t16*t18*t2, t16*t18*t7, t16*t18*t13, t16*t18*t8, t16*t18*x2, t16*t18*t1, t16*t18*x4, t16*x3^2, t16*x3*t4, t16*x3*t12, t16*x3*x1, t16*x3*x10, t16*x3*t9, t16*x3*t2, t16*x3*t7, t16*x3*t13, t16*x3*t8, t16*x3*x2, t16*x3*t1, t16*x3*x4, t16*t4^2, t16*t4*t12, t16*t4*x1, t16*t4*x10, t16*t4*t9, t16*t4*t2, t16*t4*t7, t16*t4*t13, t16*t4*t8, t16*t4*x2, t16*t4*t1, t16*t4*x4, t16*t12^2, t16*t12*x1, t16*t12*x10, t16*t12*t9, t16*t12*t2, t16*t12*t7, t16*t12*t13, t16*t12*t8, t16*t12*x2, t16*t12*t1, t16*t12*x4, t16*x1^2, t16*x1*x10, t16*x1*t9, t16*x1*t2, t16*x1*t7, t16*x1*t13, t16*x1*t8, t16*x1*x2, t16*x1*t1, t16*x1*x4, t16*x10^2, t16*x10*t9, t16*x10*t2, t16*x10*t7, t16*x10*t13, t16*x10*t8, t16*x10*x2, t16*x10*t1, t16*x10*x4, t16*t9^2, t16*t9*t2, t16*t9*t7, t16*t9*t13, t16*t9*t8, t16*t9*x2, t16*t9*t1, t16*t9*x4, t16*t2^2, t16*t2*t7, t16*t2*t13, t16*t2*t8, t16*t2*x2, t16*t2*t1, t16*t2*x4, t16*t7^2, t16*t7*t13, t16*t7*t8, t16*t7*x2, t16*t7*t1, t16*t7*x4, t16*t13^2, t16*t13*t8, t16*t13*x2, t16*t13*t1, t16*t13*x4, t16*t8^2, t16*t8*x2, t16*t8*t1, t16*t8*x4, t16*x2^2, t16*x2*t1, t16*x2*x4, t16*t1^2, t16*t1*x4, t16*x4^2, t20^3, t20^2*t19, t20^2*t14, t20^2*t10, t20^2*x9, t20^2*x6, t20^2*x5, t20^2*t18, t20^2*x3, t20^2*t4, t20^2*t12, t20^2*x1, t20^2*x10, t20^2*t9, t20^2*t2, t20^2*t7, t20^2*t13, t20^2*t8, t20^2*x2, t20^2*t1, t20^2*x4, t20*t19^2, t20*t19*t14, t20*t19*t10, t20*t19*x9, t20*t19*x6, t20*t19*x5, t20*t19*t18, t20*t19*x3, t20*t19*t4, t20*t19*t12, t20*t19*x1, t20*t19*x10, t20*t19*t9, t20*t19*t2, t20*t19*t7, t20*t19*t13, t20*t19*t8, t20*t19*x2, t20*t19*t1, t20*t19*x4, t20*t14^2, t20*t14*t10, t20*t14*x9, t20*t14*x6, t20*t14*x5, t20*t14*t18, t20*t14*x3, t20*t14*t4, t20*t14*t12, t20*t14*x1, t20*t14*x10, t20*t14*t9, t20*t14*t2, t20*t14*t7, t20*t14*t13, t20*t14*t8, t20*t14*x2, t20*t14*t1, t20*t14*x4, t20*t10^2, t20*t10*x9, t20*t10*x6, t20*t10*x5, t20*t10*t18, t20*t10*x3, t20*t10*t4, t20*t10*t12, t20*t10*x1, t20*t10*x10, t20*t10*t9, t20*t10*t2, t20*t10*t7, t20*t10*t13, t20*t10*t8, t20*t10*x2, t20*t10*t1, t20*t10*x4, t20*x9^2, t20*x9*x6, t20*x9*x5, t20*x9*t18, t20*x9*x3, t20*x9*t4, t20*x9*t12, t20*x9*x1, t20*x9*x10, t20*x9*t9, t20*x9*t2, t20*x9*t7, t20*x9*t13, t20*x9*t8, t20*x9*x2, t20*x9*t1, t20*x9*x4, t20*x6^2, t20*x6*x5, t20*x6*t18, t20*x6*x3, t20*x6*t4, t20*x6*t12, t20*x6*x1, t20*x6*x10, t20*x6*t9, t20*x6*t2, t20*x6*t7, t20*x6*t13, t20*x6*t8, t20*x6*x2, t20*x6*t1, t20*x6*x4, t20*x5^2, t20*x5*t18, t20*x5*x3, t20*x5*t4, t20*x5*t12, t20*x5*x1, t20*x5*x10, t20*x5*t9, t20*x5*t2, t20*x5*t7, t20*x5*t13, t20*x5*t8, t20*x5*x2, t20*x5*t1, t20*x5*x4, t20*t18^2, t20*t18*x3, t20*t18*t4, t20*t18*t12, t20*t18*x1, t20*t18*x10, t20*t18*t9, t20*t18*t2, t20*t18*t7, t20*t18*t13, t20*t18*t8, t20*t18*x2, t20*t18*t1, t20*t18*x4, t20*x3^2, t20*x3*t4, t20*x3*t12, t20*x3*x1, t20*x3*x10, t20*x3*t9, t20*x3*t2, t20*x3*t7, t20*x3*t13, t20*x3*t8, t20*x3*x2, t20*x3*t1, t20*x3*x4, t20*t4^2, t20*t4*t12, t20*t4*x1, t20*t4*x10, t20*t4*t9, t20*t4*t2, t20*t4*t7, t20*t4*t13, t20*t4*t8, t20*t4*x2, t20*t4*t1, t20*t4*x4, t20*t12^2, t20*t12*x1, t20*t12*x10, t20*t12*t9, t20*t12*t2, t20*t12*t7, t20*t12*t13, t20*t12*t8, t20*t12*x2, t20*t12*t1, t20*t12*x4, t20*x1^2, t20*x1*x10, t20*x1*t9, t20*x1*t2, t20*x1*t7, t20*x1*t13, t20*x1*t8, t20*x1*x2, t20*x1*t1, t20*x1*x4, t20*x10^2, t20*x10*t9, t20*x10*t2, t20*x10*t7, t20*x10*t13, t20*x10*t8, t20*x10*x2, t20*x10*t1, t20*x10*x4, t20*t9^2, t20*t9*t2, t20*t9*t7, t20*t9*t13, t20*t9*t8, t20*t9*x2, t20*t9*t1, t20*t9*x4, t20*t2^2, t20*t2*t7, t20*t2*t13, t20*t2*t8, t20*t2*x2, t20*t2*t1, t20*t2*x4, t20*t7^2, t20*t7*t13, t20*t7*t8, t20*t7*x2, t20*t7*t1, t20*t7*x4, t20*t13^2, t20*t13*t8, t20*t13*x2, t20*t13*t1, t20*t13*x4, t20*t8^2, t20*t8*x2, t20*t8*t1, t20*t8*x4, t20*x2^2, t20*x2*t1, t20*x2*x4, t20*t1^2, t20*t1*x4, t20*x4^2, t19^3, t19^2*t14, t19^2*t10, t19^2*x9, t19^2*x6, t19^2*x5, t19^2*t18, t19^2*x3, t19^2*t4, t19^2*t12, t19^2*x1, t19^2*x10, t19^2*t9, t19^2*t2, t19^2*t7, t19^2*t13, t19^2*t8, t19^2*x2, t19^2*t1, t19^2*x4, t19*t14^2, t19*t14*t10, t19*t14*x9, t19*t14*x6, t19*t14*x5, t19*t14*t18, t19*t14*x3, t19*t14*t4, t19*t14*t12, t19*t14*x1, t19*t14*x10, t19*t14*t9, t19*t14*t2, t19*t14*t7, t19*t14*t13, t19*t14*t8, t19*t14*x2, t19*t14*t1, t19*t14*x4, t19*t10^2, t19*t10*x9, t19*t10*x6, t19*t10*x5, t19*t10*t18, t19*t10*x3, t19*t10*t4, t19*t10*t12, t19*t10*x1, t19*t10*x10, t19*t10*t9, t19*t10*t2, t19*t10*t7, t19*t10*t13, t19*t10*t8, t19*t10*x2, t19*t10*t1, t19*t10*x4, t19*x9^2, t19*x9*x6, t19*x9*x5, t19*x9*t18, t19*x9*x3, t19*x9*t4, t19*x9*t12, t19*x9*x1, t19*x9*x10, t19*x9*t9, t19*x9*t2, t19*x9*t7, t19*x9*t13, t19*x9*t8, t19*x9*x2, t19*x9*t1, t19*x9*x4, t19*x6^2, t19*x6*x5, t19*x6*t18, t19*x6*x3, t19*x6*t4, t19*x6*t12, t19*x6*x1, t19*x6*x10, t19*x6*t9, t19*x6*t2, t19*x6*t7, t19*x6*t13, t19*x6*t8, t19*x6*x2, t19*x6*t1, t19*x6*x4, t19*x5^2, t19*x5*t18, t19*x5*x3, t19*x5*t4, t19*x5*t12, t19*x5*x1, t19*x5*x10, t19*x5*t9, t19*x5*t2, t19*x5*t7, t19*x5*t13, t19*x5*t8, t19*x5*x2, t19*x5*t1, t19*x5*x4, t19*t18^2, t19*t18*x3, t19*t18*t4, t19*t18*t12, t19*t18*x1, t19*t18*x10, t19*t18*t9, t19*t18*t2, t19*t18*t7, t19*t18*t13, t19*t18*t8, t19*t18*x2, t19*t18*t1, t19*t18*x4, t19*x3^2, t19*x3*t4, t19*x3*t12, t19*x3*x1, t19*x3*x10, t19*x3*t9, t19*x3*t2, t19*x3*t7, t19*x3*t13, t19*x3*t8, t19*x3*x2, t19*x3*t1, t19*x3*x4, t19*t4^2, t19*t4*t12, t19*t4*x1, t19*t4*x10, t19*t4*t9, t19*t4*t2, t19*t4*t7, t19*t4*t13, t19*t4*t8, t19*t4*x2, t19*t4*t1, t19*t4*x4, t19*t12^2, t19*t12*x1, t19*t12*x10, t19*t12*t9, t19*t12*t2, t19*t12*t7, t19*t12*t13, t19*t12*t8, t19*t12*x2, t19*t12*t1, t19*t12*x4, t19*x1^2, t19*x1*x10, t19*x1*t9, t19*x1*t2, t19*x1*t7, t19*x1*t13, t19*x1*t8, t19*x1*x2, t19*x1*t1, t19*x1*x4, t19*x10^2, t19*x10*t9, t19*x10*t2, t19*x10*t7, t19*x10*t13, t19*x10*t8, t19*x10*x2, t19*x10*t1, t19*x10*x4, t19*t9^2, t19*t9*t2, t19*t9*t7, t19*t9*t13, t19*t9*t8, t19*t9*x2, t19*t9*t1, t19*t9*x4, t19*t2^2, t19*t2*t7, t19*t2*t13, t19*t2*t8, t19*t2*x2, t19*t2*t1, t19*t2*x4, t19*t7^2, t19*t7*t13, t19*t7*t8, t19*t7*x2, t19*t7*t1, t19*t7*x4, t19*t13^2, t19*t13*t8, t19*t13*x2, t19*t13*t1, t19*t13*x4, t19*t8^2, t19*t8*x2, t19*t8*t1, t19*t8*x4, t19*x2^2, t19*x2*t1, t19*x2*x4, t19*t1^2, t19*t1*x4, t19*x4^2, t14^3, t14^2*t10, t14^2*x9, t14^2*x6, t14^2*x5, t14^2*t18, t14^2*x3, t14^2*t4, t14^2*t12, t14^2*x1, t14^2*x10, t14^2*t9, t14^2*t2, t14^2*t7, t14^2*t13, t14^2*t8, t14^2*x2, t14^2*t1, t14^2*x4, t14*t10^2, t14*t10*x9, t14*t10*x6, t14*t10*x5, t14*t10*t18, t14*t10*x3, t14*t10*t4, t14*t10*t12, t14*t10*x1, t14*t10*x10, t14*t10*t9, t14*t10*t2, t14*t10*t7, t14*t10*t13, t14*t10*t8, t14*t10*x2, t14*t10*t1, t14*t10*x4, t14*x9^2, t14*x9*x6, t14*x9*x5, t14*x9*t18, t14*x9*x3, t14*x9*t4, t14*x9*t12, t14*x9*x1, t14*x9*x10, t14*x9*t9, t14*x9*t2, t14*x9*t7, t14*x9*t13, t14*x9*t8, t14*x9*x2, t14*x9*t1, t14*x9*x4, t14*x6^2, t14*x6*x5, t14*x6*t18, t14*x6*x3, t14*x6*t4, t14*x6*t12, t14*x6*x1, t14*x6*x10, t14*x6*t9, t14*x6*t2, t14*x6*t7, t14*x6*t13, t14*x6*t8, t14*x6*x2, t14*x6*t1, t14*x6*x4, t14*x5^2, t14*x5*t18, t14*x5*x3, t14*x5*t4, t14*x5*t12, t14*x5*x1, t14*x5*x10, t14*x5*t9, t14*x5*t2, t14*x5*t7, t14*x5*t13, t14*x5*t8, t14*x5*x2, t14*x5*t1, t14*x5*x4, t14*t18^2, t14*t18*x3, t14*t18*t4, t14*t18*t12, t14*t18*x1, t14*t18*x10, t14*t18*t9, t14*t18*t2, t14*t18*t7, t14*t18*t13, t14*t18*t8, t14*t18*x2, t14*t18*t1, t14*t18*x4, t14*x3^2, t14*x3*t4, t14*x3*t12, t14*x3*x1, t14*x3*x10, t14*x3*t9, t14*x3*t2, t14*x3*t7, t14*x3*t13, t14*x3*t8, t14*x3*x2, t14*x3*t1, t14*x3*x4, t14*t4^2, t14*t4*t12, t14*t4*x1, t14*t4*x10, t14*t4*t9, t14*t4*t2, t14*t4*t7, t14*t4*t13, t14*t4*t8, t14*t4*x2, t14*t4*t1, t14*t4*x4, t14*t12^2, t14*t12*x1, t14*t12*x10, t14*t12*t9, t14*t12*t2, t14*t12*t7, t14*t12*t13, t14*t12*t8, t14*t12*x2, t14*t12*t1, t14*t12*x4, t14*x1^2, t14*x1*x10, t14*x1*t9, t14*x1*t2, t14*x1*t7, t14*x1*t13, t14*x1*t8, t14*x1*x2, t14*x1*t1, t14*x1*x4, t14*x10^2, t14*x10*t9, t14*x10*t2, t14*x10*t7, t14*x10*t13, t14*x10*t8, t14*x10*x2, t14*x10*t1, t14*x10*x4, t14*t9^2, t14*t9*t2, t14*t9*t7, t14*t9*t13, t14*t9*t8, t14*t9*x2, t14*t9*t1, t14*t9*x4, t14*t2^2, t14*t2*t7, t14*t2*t13, t14*t2*t8, t14*t2*x2, t14*t2*t1, t14*t2*x4, t14*t7^2, t14*t7*t13, t14*t7*t8, t14*t7*x2, t14*t7*t1, t14*t7*x4, t14*t13^2, t14*t13*t8, t14*t13*x2, t14*t13*t1, t14*t13*x4, t14*t8^2, t14*t8*x2, t14*t8*t1, t14*t8*x4, t14*x2^2, t14*x2*t1, t14*x2*x4, t14*t1^2, t14*t1*x4, t14*x4^2, t10^3, t10^2*x9, t10^2*x6, t10^2*x5, t10^2*t18, t10^2*x3, t10^2*t4, t10^2*t12, t10^2*x1, t10^2*x10, t10^2*t9, t10^2*t2, t10^2*t7, t10^2*t13, t10^2*t8, t10^2*x2, t10^2*t1, t10^2*x4, t10*x9^2, t10*x9*x6, t10*x9*x5, t10*x9*t18, t10*x9*x3, t10*x9*t4, t10*x9*t12, t10*x9*x1, t10*x9*x10, t10*x9*t9, t10*x9*t2, t10*x9*t7, t10*x9*t13, t10*x9*t8, t10*x9*x2, t10*x9*t1, t10*x9*x4, t10*x6^2, t10*x6*x5, t10*x6*t18, t10*x6*x3, t10*x6*t4, t10*x6*t12, t10*x6*x1, t10*x6*x10, t10*x6*t9, t10*x6*t2, t10*x6*t7, t10*x6*t13, t10*x6*t8, t10*x6*x2, t10*x6*t1, t10*x6*x4, t10*x5^2, t10*x5*t18, t10*x5*x3, t10*x5*t4, t10*x5*t12, t10*x5*x1, t10*x5*x10, t10*x5*t9, t10*x5*t2, t10*x5*t7, t10*x5*t13, t10*x5*t8, t10*x5*x2, t10*x5*t1, t10*x5*x4, t10*t18^2, t10*t18*x3, t10*t18*t4, t10*t18*t12, t10*t18*x1, t10*t18*x10, t10*t18*t9, t10*t18*t2, t10*t18*t7, t10*t18*t13, t10*t18*t8, t10*t18*x2, t10*t18*t1, t10*t18*x4, t10*x3^2, t10*x3*t4, t10*x3*t12, t10*x3*x1, t10*x3*x10, t10*x3*t9, t10*x3*t2, t10*x3*t7, t10*x3*t13, t10*x3*t8, t10*x3*x2, t10*x3*t1, t10*x3*x4, t10*t4^2, t10*t4*t12, t10*t4*x1, t10*t4*x10, t10*t4*t9, t10*t4*t2, t10*t4*t7, t10*t4*t13, t10*t4*t8, t10*t4*x2, t10*t4*t1, t10*t4*x4, t10*t12^2, t10*t12*x1, t10*t12*x10, t10*t12*t9, t10*t12*t2, t10*t12*t7, t10*t12*t13, t10*t12*t8, t10*t12*x2, t10*t12*t1, t10*t12*x4, t10*x1^2, t10*x1*x10, t10*x1*t9, t10*x1*t2, t10*x1*t7, t10*x1*t13, t10*x1*t8, t10*x1*x2, t10*x1*t1, t10*x1*x4, t10*x10^2, t10*x10*t9, t10*x10*t2, t10*x10*t7, t10*x10*t13, t10*x10*t8, t10*x10*x2, t10*x10*t1, t10*x10*x4, t10*t9^2, t10*t9*t2, t10*t9*t7, t10*t9*t13, t10*t9*t8, t10*t9*x2, t10*t9*t1, t10*t9*x4, t10*t2^2, t10*t2*t7, t10*t2*t13, t10*t2*t8, t10*t2*x2, t10*t2*t1, t10*t2*x4, t10*t7^2, t10*t7*t13, t10*t7*t8, t10*t7*x2, t10*t7*t1, t10*t7*x4, t10*t13^2, t10*t13*t8, t10*t13*x2, t10*t13*t1, t10*t13*x4, t10*t8^2, t10*t8*x2, t10*t8*t1, t10*t8*x4, t10*x2^2, t10*x2*t1, t10*x2*x4, t10*t1^2, t10*t1*x4, t10*x4^2, x9^3, x9^2*x6, x9^2*x5, x9^2*t18, x9^2*x3, x9^2*t4, x9^2*t12, x9^2*x1, x9^2*x10, x9^2*t9, x9^2*t2, x9^2*t7, x9^2*t13, x9^2*t8, x9^2*x2, x9^2*t1, x9^2*x4, x9*x6^2, x9*x6*x5, x9*x6*t18, x9*x6*x3, x9*x6*t4, x9*x6*t12, x9*x6*x1, x9*x6*x10, x9*x6*t9, x9*x6*t2, x9*x6*t7, x9*x6*t13, x9*x6*t8, x9*x6*x2, x9*x6*t1, x9*x6*x4, x9*x5^2, x9*x5*t18, x9*x5*x3, x9*x5*t4, x9*x5*t12, x9*x5*x1, x9*x5*x10, x9*x5*t9, x9*x5*t2, x9*x5*t7, x9*x5*t13, x9*x5*t8, x9*x5*x2, x9*x5*t1, x9*x5*x4, x9*t18^2, x9*t18*x3, x9*t18*t4, x9*t18*t12, x9*t18*x1, x9*t18*x10, x9*t18*t9, x9*t18*t2, x9*t18*t7, x9*t18*t13, x9*t18*t8, x9*t18*x2, x9*t18*t1, x9*t18*x4, x9*x3^2, x9*x3*t4, x9*x3*t12, x9*x3*x1, x9*x3*x10, x9*x3*t9, x9*x3*t2, x9*x3*t7, x9*x3*t13, x9*x3*t8, x9*x3*x2, x9*x3*t1, x9*x3*x4, x9*t4^2, x9*t4*t12, x9*t4*x1, x9*t4*x10, x9*t4*t9, x9*t4*t2, x9*t4*t7, x9*t4*t13, x9*t4*t8, x9*t4*x2, x9*t4*t1, x9*t4*x4, x9*t12^2, x9*t12*x1, x9*t12*x10, x9*t12*t9, x9*t12*t2, x9*t12*t7, x9*t12*t13, x9*t12*t8, x9*t12*x2, x9*t12*t1, x9*t12*x4, x9*x1^2, x9*x1*x10, x9*x1*t9, x9*x1*t2, x9*x1*t7, x9*x1*t13, x9*x1*t8, x9*x1*x2, x9*x1*t1, x9*x1*x4, x9*x10^2, x9*x10*t9, x9*x10*t2, x9*x10*t7, x9*x10*t13, x9*x10*t8, x9*x10*x2, x9*x10*t1, x9*x10*x4, x9*t9^2, x9*t9*t2, x9*t9*t7, x9*t9*t13, x9*t9*t8, x9*t9*x2, x9*t9*t1, x9*t9*x4, x9*t2^2, x9*t2*t7, x9*t2*t13, x9*t2*t8, x9*t2*x2, x9*t2*t1, x9*t2*x4, x9*t7^2, x9*t7*t13, x9*t7*t8, x9*t7*x2, x9*t7*t1, x9*t7*x4, x9*t13^2, x9*t13*t8, x9*t13*x2, x9*t13*t1, x9*t13*x4, x9*t8^2, x9*t8*x2, x9*t8*t1, x9*t8*x4, x9*x2^2, x9*x2*t1, x9*x2*x4, x9*t1^2, x9*t1*x4, x9*x4^2, x6^3, x6^2*x5, x6^2*t18, x6^2*x3, x6^2*t4, x6^2*t12, x6^2*x1, x6^2*x10, x6^2*t9, x6^2*t2, x6^2*t7, x6^2*t13, x6^2*t8, x6^2*x2, x6^2*t1, x6^2*x4, x6*x5^2, x6*x5*t18, x6*x5*x3, x6*x5*t4, x6*x5*t12, x6*x5*x1, x6*x5*x10, x6*x5*t9, x6*x5*t2, x6*x5*t7, x6*x5*t13, x6*x5*t8, x6*x5*x2, x6*x5*t1, x6*x5*x4, x6*t18^2, x6*t18*x3, x6*t18*t4, x6*t18*t12, x6*t18*x1, x6*t18*x10, x6*t18*t9, x6*t18*t2, x6*t18*t7, x6*t18*t13, x6*t18*t8, x6*t18*x2, x6*t18*t1, x6*t18*x4, x6*x3^2, x6*x3*t4, x6*x3*t12, x6*x3*x1, x6*x3*x10, x6*x3*t9, x6*x3*t2, x6*x3*t7, x6*x3*t13, x6*x3*t8, x6*x3*x2, x6*x3*t1, x6*x3*x4, x6*t4^2, x6*t4*t12, x6*t4*x1, x6*t4*x10, x6*t4*t9, x6*t4*t2, x6*t4*t7, x6*t4*t13, x6*t4*t8, x6*t4*x2, x6*t4*t1, x6*t4*x4, x6*t12^2, x6*t12*x1, x6*t12*x10, x6*t12*t9, x6*t12*t2, x6*t12*t7, x6*t12*t13, x6*t12*t8, x6*t12*x2, x6*t12*t1, x6*t12*x4, x6*x1^2, x6*x1*x10, x6*x1*t9, x6*x1*t2, x6*x1*t7, x6*x1*t13, x6*x1*t8, x6*x1*x2, x6*x1*t1, x6*x1*x4, x6*x10^2, x6*x10*t9, x6*x10*t2, x6*x10*t7, x6*x10*t13, x6*x10*t8, x6*x10*x2, x6*x10*t1, x6*x10*x4, x6*t9^2, x6*t9*t2, x6*t9*t7, x6*t9*t13, x6*t9*t8, x6*t9*x2, x6*t9*t1, x6*t9*x4, x6*t2^2, x6*t2*t7, x6*t2*t13, x6*t2*t8, x6*t2*x2, x6*t2*t1, x6*t2*x4, x6*t7^2, x6*t7*t13, x6*t7*t8, x6*t7*x2, x6*t7*t1, x6*t7*x4, x6*t13^2, x6*t13*t8, x6*t13*x2, x6*t13*t1, x6*t13*x4, x6*t8^2, x6*t8*x2, x6*t8*t1, x6*t8*x4, x6*x2^2, x6*x2*t1, x6*x2*x4, x6*t1^2, x6*t1*x4, x6*x4^2, x5^3, x5^2*t18, x5^2*x3, x5^2*t4, x5^2*t12, x5^2*x1, x5^2*x10, x5^2*t9, x5^2*t2, x5^2*t7, x5^2*t13, x5^2*t8, x5^2*x2, x5^2*t1, x5^2*x4, x5*t18^2, x5*t18*x3, x5*t18*t4, x5*t18*t12, x5*t18*x1, x5*t18*x10, x5*t18*t9, x5*t18*t2, x5*t18*t7, x5*t18*t13, x5*t18*t8, x5*t18*x2, x5*t18*t1, x5*t18*x4, x5*x3^2, x5*x3*t4, x5*x3*t12, x5*x3*x1, x5*x3*x10, x5*x3*t9, x5*x3*t2, x5*x3*t7, x5*x3*t13, x5*x3*t8, x5*x3*x2, x5*x3*t1, x5*x3*x4, x5*t4^2, x5*t4*t12, x5*t4*x1, x5*t4*x10, x5*t4*t9, x5*t4*t2, x5*t4*t7, x5*t4*t13, x5*t4*t8, x5*t4*x2, x5*t4*t1, x5*t4*x4, x5*t12^2, x5*t12*x1, x5*t12*x10, x5*t12*t9, x5*t12*t2, x5*t12*t7, x5*t12*t13, x5*t12*t8, x5*t12*x2, x5*t12*t1, x5*t12*x4, x5*x1^2, x5*x1*x10, x5*x1*t9, x5*x1*t2, x5*x1*t7, x5*x1*t13, x5*x1*t8, x5*x1*x2, x5*x1*t1, x5*x1*x4, x5*x10^2, x5*x10*t9, x5*x10*t2, x5*x10*t7, x5*x10*t13, x5*x10*t8, x5*x10*x2, x5*x10*t1, x5*x10*x4, x5*t9^2, x5*t9*t2, x5*t9*t7, x5*t9*t13, x5*t9*t8, x5*t9*x2, x5*t9*t1, x5*t9*x4, x5*t2^2, x5*t2*t7, x5*t2*t13, x5*t2*t8, x5*t2*x2, x5*t2*t1, x5*t2*x4, x5*t7^2, x5*t7*t13, x5*t7*t8, x5*t7*x2, x5*t7*t1, x5*t7*x4, x5*t13^2, x5*t13*t8, x5*t13*x2, x5*t13*t1, x5*t13*x4, x5*t8^2, x5*t8*x2, x5*t8*t1, x5*t8*x4, x5*x2^2, x5*x2*t1, x5*x2*x4, x5*t1^2, x5*t1*x4, x5*x4^2, t18^3, t18^2*x3, t18^2*t4, t18^2*t12, t18^2*x1, t18^2*x10, t18^2*t9, t18^2*t2, t18^2*t7, t18^2*t13, t18^2*t8, t18^2*x2, t18^2*t1, t18^2*x4, t18*x3^2, t18*x3*t4, t18*x3*t12, t18*x3*x1, t18*x3*x10, t18*x3*t9, t18*x3*t2, t18*x3*t7, t18*x3*t13, t18*x3*t8, t18*x3*x2, t18*x3*t1, t18*x3*x4, t18*t4^2, t18*t4*t12, t18*t4*x1, t18*t4*x10, t18*t4*t9, t18*t4*t2, t18*t4*t7, t18*t4*t13, t18*t4*t8, t18*t4*x2, t18*t4*t1, t18*t4*x4, t18*t12^2, t18*t12*x1, t18*t12*x10, t18*t12*t9, t18*t12*t2, t18*t12*t7, t18*t12*t13, t18*t12*t8, t18*t12*x2, t18*t12*t1, t18*t12*x4, t18*x1^2, t18*x1*x10, t18*x1*t9, t18*x1*t2, t18*x1*t7, t18*x1*t13, t18*x1*t8, t18*x1*x2, t18*x1*t1, t18*x1*x4, t18*x10^2, t18*x10*t9, t18*x10*t2, t18*x10*t7, t18*x10*t13, t18*x10*t8, t18*x10*x2, t18*x10*t1, t18*x10*x4, t18*t9^2, t18*t9*t2, t18*t9*t7, t18*t9*t13, t18*t9*t8, t18*t9*x2, t18*t9*t1, t18*t9*x4, t18*t2^2, t18*t2*t7, t18*t2*t13, t18*t2*t8, t18*t2*x2, t18*t2*t1, t18*t2*x4, t18*t7^2, t18*t7*t13, t18*t7*t8, t18*t7*x2, t18*t7*t1, t18*t7*x4, t18*t13^2, t18*t13*t8, t18*t13*x2, t18*t13*t1, t18*t13*x4, t18*t8^2, t18*t8*x2, t18*t8*t1, t18*t8*x4, t18*x2^2, t18*x2*t1, t18*x2*x4, t18*t1^2, t18*t1*x4, t18*x4^2, x3^3, x3^2*t4, x3^2*t12, x3^2*x1, x3^2*x10, x3^2*t9, x3^2*t2, x3^2*t7, x3^2*t13, x3^2*t8, x3^2*x2, x3^2*t1, x3^2*x4, x3*t4^2, x3*t4*t12, x3*t4*x1, x3*t4*x10, x3*t4*t9, x3*t4*t2, x3*t4*t7, x3*t4*t13, x3*t4*t8, x3*t4*x2, x3*t4*t1, x3*t4*x4, x3*t12^2, x3*t12*x1, x3*t12*x10, x3*t12*t9, x3*t12*t2, x3*t12*t7, x3*t12*t13, x3*t12*t8, x3*t12*x2, x3*t12*t1, x3*t12*x4, x3*x1^2, x3*x1*x10, x3*x1*t9, x3*x1*t2, x3*x1*t7, x3*x1*t13, x3*x1*t8, x3*x1*x2, x3*x1*t1, x3*x1*x4, x3*x10^2, x3*x10*t9, x3*x10*t2, x3*x10*t7, x3*x10*t13, x3*x10*t8, x3*x10*x2, x3*x10*t1, x3*x10*x4, x3*t9^2, x3*t9*t2, x3*t9*t7, x3*t9*t13, x3*t9*t8, x3*t9*x2, x3*t9*t1, x3*t9*x4, x3*t2^2, x3*t2*t7, x3*t2*t13, x3*t2*t8, x3*t2*x2, x3*t2*t1, x3*t2*x4, x3*t7^2, x3*t7*t13, x3*t7*t8, x3*t7*x2, x3*t7*t1, x3*t7*x4, x3*t13^2, x3*t13*t8, x3*t13*x2, x3*t13*t1, x3*t13*x4, x3*t8^2, x3*t8*x2, x3*t8*t1, x3*t8*x4, x3*x2^2, x3*x2*t1, x3*x2*x4, x3*t1^2, x3*t1*x4, x3*x4^2, t4^3, t4^2*t12, t4^2*x1, t4^2*x10, t4^2*t9, t4^2*t2, t4^2*t7, t4^2*t13, t4^2*t8, t4^2*x2, t4^2*t1, t4^2*x4, t4*t12^2, t4*t12*x1, t4*t12*x10, t4*t12*t9, t4*t12*t2, t4*t12*t7, t4*t12*t13, t4*t12*t8, t4*t12*x2, t4*t12*t1, t4*t12*x4, t4*x1^2, t4*x1*x10, t4*x1*t9, t4*x1*t2, t4*x1*t7, t4*x1*t13, t4*x1*t8, t4*x1*x2, t4*x1*t1, t4*x1*x4, t4*x10^2, t4*x10*t9, t4*x10*t2, t4*x10*t7, t4*x10*t13, t4*x10*t8, t4*x10*x2, t4*x10*t1, t4*x10*x4, t4*t9^2, t4*t9*t2, t4*t9*t7, t4*t9*t13, t4*t9*t8, t4*t9*x2, t4*t9*t1, t4*t9*x4, t4*t2^2, t4*t2*t7, t4*t2*t13, t4*t2*t8, t4*t2*x2, t4*t2*t1, t4*t2*x4, t4*t7^2, t4*t7*t13, t4*t7*t8, t4*t7*x2, t4*t7*t1, t4*t7*x4, t4*t13^2, t4*t13*t8, t4*t13*x2, t4*t13*t1, t4*t13*x4, t4*t8^2, t4*t8*x2, t4*t8*t1, t4*t8*x4, t4*x2^2, t4*x2*t1, t4*x2*x4, t4*t1^2, t4*t1*x4, t4*x4^2, t12^3, t12^2*x1, t12^2*x10, t12^2*t9, t12^2*t2, t12^2*t7, t12^2*t13, t12^2*t8, t12^2*x2, t12^2*t1, t12^2*x4, t12*x1^2, t12*x1*x10, t12*x1*t9, t12*x1*t2, t12*x1*t7, t12*x1*t13, t12*x1*t8, t12*x1*x2, t12*x1*t1, t12*x1*x4, t12*x10^2, t12*x10*t9, t12*x10*t2, t12*x10*t7, t12*x10*t13, t12*x10*t8, t12*x10*x2, t12*x10*t1, t12*x10*x4, t12*t9^2, t12*t9*t2, t12*t9*t7, t12*t9*t13, t12*t9*t8, t12*t9*x2, t12*t9*t1, t12*t9*x4, t12*t2^2, t12*t2*t7, t12*t2*t13, t12*t2*t8, t12*t2*x2, t12*t2*t1, t12*t2*x4, t12*t7^2, t12*t7*t13, t12*t7*t8, t12*t7*x2, t12*t7*t1, t12*t7*x4, t12*t13^2, t12*t13*t8, t12*t13*x2, t12*t13*t1, t12*t13*x4, t12*t8^2, t12*t8*x2, t12*t8*t1, t12*t8*x4, t12*x2^2, t12*x2*t1, t12*x2*x4, t12*t1^2, t12*t1*x4, t12*x4^2, x1^3, x1^2*x10, x1^2*t9, x1^2*t2, x1^2*t7, x1^2*t13, x1^2*t8, x1^2*x2, x1^2*t1, x1^2*x4, x1*x10^2, x1*x10*t9, x1*x10*t2, x1*x10*t7, x1*x10*t13, x1*x10*t8, x1*x10*x2, x1*x10*t1, x1*x10*x4, x1*t9^2, x1*t9*t2, x1*t9*t7, x1*t9*t13, x1*t9*t8, x1*t9*x2, x1*t9*t1, x1*t9*x4, x1*t2^2, x1*t2*t7, x1*t2*t13, x1*t2*t8, x1*t2*x2, x1*t2*t1, x1*t2*x4, x1*t7^2, x1*t7*t13, x1*t7*t8, x1*t7*x2, x1*t7*t1, x1*t7*x4, x1*t13^2, x1*t13*t8, x1*t13*x2, x1*t13*t1, x1*t13*x4, x1*t8^2, x1*t8*x2, x1*t8*t1, x1*t8*x4, x1*x2^2, x1*x2*t1, x1*x2*x4, x1*t1^2, x1*t1*x4, x1*x4^2, x10^3, x10^2*t9, x10^2*t2, x10^2*t7, x10^2*t13, x10^2*t8, x10^2*x2, x10^2*t1, x10^2*x4, x10*t9^2, x10*t9*t2, x10*t9*t7, x10*t9*t13, x10*t9*t8, x10*t9*x2, x10*t9*t1, x10*t9*x4, x10*t2^2, x10*t2*t7, x10*t2*t13, x10*t2*t8, x10*t2*x2, x10*t2*t1, x10*t2*x4, x10*t7^2, x10*t7*t13, x10*t7*t8, x10*t7*x2, x10*t7*t1, x10*t7*x4, x10*t13^2, x10*t13*t8, x10*t13*x2, x10*t13*t1, x10*t13*x4, x10*t8^2, x10*t8*x2, x10*t8*t1, x10*t8*x4, x10*x2^2, x10*x2*t1, x10*x2*x4, x10*t1^2, x10*t1*x4, x10*x4^2, t9^3, t9^2*t2, t9^2*t7, t9^2*t13, t9^2*t8, t9^2*x2, t9^2*t1, t9^2*x4, t9*t2^2, t9*t2*t7, t9*t2*t13, t9*t2*t8, t9*t2*x2, t9*t2*t1, t9*t2*x4, t9*t7^2, t9*t7*t13, t9*t7*t8, t9*t7*x2, t9*t7*t1, t9*t7*x4, t9*t13^2, t9*t13*t8, t9*t13*x2, t9*t13*t1, t9*t13*x4, t9*t8^2, t9*t8*x2, t9*t8*t1, t9*t8*x4, t9*x2^2, t9*x2*t1, t9*x2*x4, t9*t1^2, t9*t1*x4, t9*x4^2, t2^3, t2^2*t7, t2^2*t13, t2^2*t8, t2^2*x2, t2^2*t1, t2^2*x4, t2*t7^2, t2*t7*t13, t2*t7*t8, t2*t7*x2, t2*t7*t1, t2*t7*x4, t2*t13^2, t2*t13*t8, t2*t13*x2, t2*t13*t1, t2*t13*x4, t2*t8^2, t2*t8*x2, t2*t8*t1, t2*t8*x4, t2*x2^2, t2*x2*t1, t2*x2*x4, t2*t1^2, t2*t1*x4, t2*x4^2, t7^3, t7^2*t13, t7^2*t8, t7^2*x2, t7^2*t1, t7^2*x4, t7*t13^2, t7*t13*t8, t7*t13*x2, t7*t13*t1, t7*t13*x4, t7*t8^2, t7*t8*x2, t7*t8*t1, t7*t8*x4, t7*x2^2, t7*x2*t1, t7*x2*x4, t7*t1^2, t7*t1*x4, t7*x4^2, t13^3, t13^2*t8, t13^2*x2, t13^2*t1, t13^2*x4, t13*t8^2, t13*t8*x2, t13*t8*t1, t13*t8*x4, t13*x2^2, t13*x2*t1, t13*x2*x4, t13*t1^2, t13*t1*x4, t13*x4^2, t8^3, t8^2*x2, t8^2*t1, t8^2*x4, t8*x2^2, t8*x2*t1, t8*x2*x4, t8*t1^2, t8*t1*x4, t8*x4^2, x2^3, x2^2*t1, x2^2*x4, x2*t1^2, x2*t1*x4, x2*x4^2, t1^3, t1^2*x4, t1*x4^2, x4^3]
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:573
┌ Info: Computing 10 Groebner bases for each of the 10 block orderings
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:594
┌ Info: The pool of fractions:
│ -x4,
│ -t1,
│ -x2,
│ -t8,
│ -t13,
│ -t7,
│ -t2,
│ -t9,
│ -x10,
│ -x1,
│ -t12,
│ -t4,
│ -x3,
│ -t18,
│ -x5,
│ -x6,
│ -x9,
│ -t10,
│ -t14,
│ -t19,
│ -t20,
│ -t16,
│ -x7,
│ -t5,
│ -t6,
│ -t3,
│ -t22*t17,
│ -t21*t15,
│ -t11//t15,
│ -x8//t15
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y37, y16, y20, y29, y27, y28, y33, y24, y13, y4, y12, y9, y38, y15, y31, y26, y1, y19, y21, y41, y30], true), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y8, y22, y14, y18, y23, y10, y35, y36, y32, y3, y2, y11, y17, y34, y39, t, y25, y7, y40, y5, y6], true))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 2), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.076553893 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.066657204 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y35, y9, y31, y39, y12, t, y24, y21, y14, y13, y11, y19, y18, y17, y33, y30, y6, y16, y1, y29, y20], false), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y15, y41, y4, y32, y23, y37, y25, y34, y3, y8, y22, y40, y5, y10, y2, y7, y36, y28, y26, y38, y27], false))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 2), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.06846861 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.00618727 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y6, y8, y25, y7, y12, y23, y26, y1, y34, y18, y33, y29, t, y5, y38, y17, y30, y10, y16, y22, y20], false), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y27, y14, y32, y9, y36, y35, y19, y39, y2, y41, y3, y31, y11, y15, y40, y37, y13, y21, y28, y4, y24], false))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 2), (0, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.139788063 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.00619756 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y25, y12, y13, y24, y11, y9, y32, y26, y28, y23, y37, y7, y31, y1, y5, y4, y41, y21, y14, y36, y8], false), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y34, y3, y18, y40, y16, y17, y22, y19, y38, y33, y6, y15, y2, y27, y35, y39, y20, y30, y29, y10, t], true))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 1
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 10 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 1 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.133059225 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.006293311 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y12, y16, y38, y5, y27, y24, y14, y30, y11, y37, y3, y2, y7, y35, y13, y32, y4, y20, y28, y10, y1], true), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y26, y39, y31, t, y6, y29, y23, y19, y21, y17, y41, y36, y33, y34, y9, y40, y25, y18, y15, y22, y8], true))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 1
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 10 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 1 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.126677587 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.006185649 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y36, y38, y16, y18, y25, y24, y8, y31, y4, y40, y12, y7, y23, y34, y28, y41, y6, y10, y11, y14, y2], false), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y30, y15, y20, y5, y19, y13, y35, y9, y3, y27, y39, y33, y21, y1, y29, t, y26, y32, y22, y37, y17], false))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 1
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 10 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 1 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.125273051 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.006241744 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y25, y37, y3, y1, y27, y13, y40, y39, t, y29, y35, y22, y30, y8, y23, y14, y11, y34, y10, y28, y31], true), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y36, y21, y12, y20, y33, y18, y5, y19, y26, y17, y9, y32, y15, y4, y24, y41, y2, y7, y16, y38, y6], true))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 2), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(1, 1), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.126819541 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.00761837 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y28, y15, y38, y40, y37, t, y27, y30, y23, y25, y34, y1, y7, y4, y16, y11, y41, y13, y10, y17, y14], true), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y20, y9, y22, y3, y31, y8, y18, y5, y24, y32, y36, y35, y19, y12, y26, y6, y29, y33, y21, y2, y39], true))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 2), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.122083311 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.007333579 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y14, y36, y28, y15, t, y23, y34, y17, y2, y31, y18, y27, y29, y7, y6, y39, y10, y35, y9, y8, y4], false), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y26, y13, y30, y5, y24, y3, y40, y16, y33, y25, y20, y19, y32, y38, y21, y11, y1, y12, y41, y22, y37], false))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 2), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.120127255 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.007603485 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Computing GB for ordering
│   ord = ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}(DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y40, y18, y7, y19, y22, y16, y17, y35, y10, y23, y25, y3, y36, y2, y9, y39, y27, y14, y13, y5, y15], true), DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}(AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}[y28, y31, y24, y20, y41, y6, y29, y34, y4, y33, y26, y21, y37, y12, y1, y38, t, y32, y8, y11, y30], true))
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:614
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / ProductOrdering{DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}, DegRevLex{AbstractAlgebra.Generic.MPoly{Nemo.fmpq_mpoly}}}
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 31 functions in Rational Field(y2, t3, t6, x8, t21, y8, t22, t5, t17, x7, t16, t20, t19, y7, t14, t10, x9, x6, x5, t18, x3, t4, u, t12, x1, x10, t11, t9, t2, t7, t13, t8, t15, x2, y1, y6, y4, t1, x4, y5, y3)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, y17, y18, y19, y20, y21, y22, y23, y24, y25, y26, y27, y28, y29, y30, y31, y32, y33, y34, y35, y36, y37, y38, y39, y40, y41, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 18 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 1)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 0)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 2, Denominator: 1
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 10 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 1 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 0.115489268 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 0.007992832 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 32 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: Final cleaning and simplification of generators
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:697
┌ Info: The pool of fractions:
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ x4,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ t1,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ x2,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t8,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t13,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t7,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t2,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ t9,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x10,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ x1,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t12,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ t4,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ x3,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ t18,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x5,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x6,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ x9,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t10,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t14,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t19,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t20,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ t16,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ x7,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t5,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t6,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ t3,
│ x4^2,
│ t1*x4,
│ t1^2,
│ x2*x4,
│ x2*t1,
│ x2^2,
│ t8*x4,
│ t8*t1,
│ t8*x2,
│ t8^2,
│ t13*x4,
│ t13*t1,
│ t13*x2,
│ t13*t8,
│ t13^2,
│ t7*x4,
│ t7*t1,
│ t7*x2,
│ t7*t8,
│ t7*t13,
│ t7^2,
│ t2*x4,
│ t2*t1,
│ t2*x2,
│ t2*t8,
│ t2*t13,
│ t2*t7,
│ t2^2,
│ t9*x4,
│ t9*t1,
│ t9*x2,
│ t9*t8,
│ t9*t13,
│ t9*t7,
│ t9*t2,
│ t9^2,
│ x10*x4,
│ x10*t1,
│ x10*x2,
│ x10*t8,
│ x10*t13,
│ x10*t7,
│ x10*t2,
│ x10*t9,
│ x10^2,
│ x1*x4,
│ x1*t1,
│ x1*x2,
│ x1*t8,
│ x1*t13,
│ x1*t7,
│ x1*t2,
│ x1*t9,
│ x1*x10,
│ x1^2,
│ t12*x4,
│ t12*t1,
│ t12*x2,
│ t12*t8,
│ t12*t13,
│ t12*t7,
│ t12*t2,
│ t12*t9,
│ t12*x10,
│ t12*x1,
│ t12^2,
│ t4*x4,
│ t4*t1,
│ t4*x2,
│ t4*t8,
│ t4*t13,
│ t4*t7,
│ t4*t2,
│ t4*t9,
│ t4*x10,
│ t4*x1,
│ t4*t12,
│ t4^2,
│ x3*x4,
│ x3*t1,
│ x3*x2,
│ x3*t8,
│ x3*t13,
│ x3*t7,
│ x3*t2,
│ x3*t9,
│ x3*x10,
│ x3*x1,
│ x3*t12,
│ x3*t4,
│ x3^2,
│ t18*x4,
│ t18*t1,
│ t18*x2,
│ t18*t8,
│ t18*t13,
│ t18*t7,
│ t18*t2,
│ t18*t9,
│ t18*x10,
│ t18*x1,
│ t18*t12,
│ t18*t4,
│ t18*x3,
│ t18^2,
│ x5*x4,
│ x5*t1,
│ x5*x2,
│ x5*t8,
│ x5*t13,
│ x5*t7,
│ x5*t2,
│ x5*t9,
│ x5*x10,
│ x5*x1,
│ x5*t12,
│ x5*t4,
│ x5*x3,
│ x5*t18,
│ x5^2,
│ x6*x4,
│ x6*t1,
│ x6*x2,
│ x6*t8,
│ x6*t13,
│ x6*t7,
│ x6*t2,
│ x6*t9,
│ x6*x10,
│ x6*x1,
│ x6*t12,
│ x6*t4,
│ x6*x3,
│ x6*t18,
│ x6*x5,
│ x6^2,
│ x9*x4,
│ x9*t1,
│ x9*x2,
│ x9*t8,
│ x9*t13,
│ x9*t7,
│ x9*t2,
│ x9*t9,
│ x9*x10,
│ x9*x1,
│ x9*t12,
│ x9*t4,
│ x9*x3,
│ x9*t18,
│ x9*x5,
│ x9*x6,
│ x9^2,
│ t10*x4,
│ t10*t1,
│ t10*x2,
│ t10*t8,
│ t10*t13,
│ t10*t7,
│ t10*t2,
│ t10*t9,
│ t10*x10,
│ t10*x1,
│ t10*t12,
│ t10*t4,
│ t10*x3,
│ t10*t18,
│ t10*x5,
│ t10*x6,
│ t10*x9,
│ t10^2,
│ t14*x4,
│ t14*t1,
│ t14*x2,
│ t14*t8,
│ t14*t13,
│ t14*t7,
│ t14*t2,
│ t14*t9,
│ t14*x10,
│ t14*x1,
│ t14*t12,
│ t14*t4,
│ t14*x3,
│ t14*t18,
│ t14*x5,
│ t14*x6,
│ t14*x9,
│ t14*t10,
│ t14^2,
│ t19*x4,
│ t19*t1,
│ t19*x2,
│ t19*t8,
│ t19*t13,
│ t19*t7,
│ t19*t2,
│ t19*t9,
│ t19*x10,
│ t19*x1,
│ t19*t12,
│ t19*t4,
│ t19*x3,
│ t19*t18,
│ t19*x5,
│ t19*x6,
│ t19*x9,
│ t19*t10,
│ t19*t14,
│ t19^2,
│ t20*x4,
│ t20*t1,
│ t20*x2,
│ t20*t8,
│ t20*t13,
│ t20*t7,
│ t20*t2,
│ t20*t9,
│ t20*x10,
│ t20*x1,
│ t20*t12,
│ t20*t4,
│ t20*x3,
│ t20*t18,
│ t20*x5,
│ t20*x6,
│ t20*x9,
│ t20*t10,
│ t20*t14,
│ t20*t19,
│ t20^2,
│ t16*x4,
│ t16*t1,
│ t16*x2,
│ t16*t8,
│ t16*t13,
│ t16*t7,
│ t16*t2,
│ t16*t9,
│ t16*x10,
│ t16*x1,
│ t16*t12,
│ t16*t4,
│ t16*x3,
│ t16*t18,
│ t16*x5,
│ t16*x6,
│ t16*x9,
│ t16*t10,
│ t16*t14,
│ t16*t19,
│ t16*t20,
│ t16^2,
│ x7*x4,
│ x7*t1,
│ x7*x2,
│ x7*t8,
│ x7*t13,
│ x7*t7,
│ x7*t2,
│ x7*t9,
│ x7*x10,
│ x7*x1,
│ x7*t12,
│ x7*t4,
│ x7*x3,
│ x7*t18,
│ x7*x5,
│ x7*x6,
│ x7*x9,
│ x7*t10,
│ x7*t14,
│ x7*t19,
│ x7*t20,
│ x7*t16,
│ x7^2,
│ t5*x4,
│ t5*t1,
│ t5*x2,
│ t5*t8,
│ t5*t13,
│ t5*t7,
│ t5*t2,
│ t5*t9,
│ t5*x10,
│ t5*x1,
│ t5*t12,
│ t5*t4,
│ t5*x3,
│ t5*t18,
│ t5*x5,
│ t5*x6,
│ t5*x9,
│ t5*t10,
│ t5*t14,
│ t5*t19,
│ t5*t20,
│ t5*t16,
│ t5*x7,
│ t5^2,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t22*t17,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t15,
│ t21*t11,
│ t21*t11,
│ x8*t21,
│ x8*t21,
│ x8*t21,
│ x8*t21,
│ t6*x4,
│ t6*t1,
│ t6*x2,
│ t6*t8,
│ t6*t13,
│ t6*t7,
│ t6*t2,
│ t6*t9,
│ t6*x10,
│ t6*x1,
│ t6*t12,
│ t6*t4,
│ t6*x3,
│ t6*t18,
│ t6*x5,
│ t6*x6,
│ t6*x9,
│ t6*t10,
│ t6*t14,
│ t6*t19,
│ t6*t20,
│ t6*t16,
│ t6*x7,
│ t6*t5,
│ t6^2,
│ t3*x4,
│ t3*t1,
│ t3*x2,
│ t3*t8,
│ t3*t13,
│ t3*t7,
│ t3*t2,
│ t3*t9,
│ t3*x10,
│ t3*x1,
│ t3*t12,
│ t3*t4,
│ t3*x3,
│ t3*t18,
│ t3*x5,
│ t3*x6,
│ t3*x9,
│ t3*t10,
│ t3*t14,
│ t3*t19,
│ t3*t20,
│ t3*t16,
│ t3*x7,
│ t3*t5,
│ t3*t6,
│ t3^2,
│ x4^3,
│ t1*x4^2,
│ t1^2*x4,
│ t1^3,
│ x2*x4^2,
│ x2*t1*x4,
│ x2*t1^2,
│ x2^2*x4,
│ x2^2*t1,
│ x2^3,
│ t8*x4^2,
│ t8*t1*x4,
│ t8*t1^2,
│ t8*x2*x4,
│ t8*x2*t1,
│ t8*x2^2,
│ t8^2*x4,
│ t8^2*t1,
│ t8^2*x2,
│ t8^3,
│ t13*x4^2,
│ t13*t1*x4,
│ t13*t1^2,
│ t13*x2*x4,
│ t13*x2*t1,
│ t13*x2^2,
│ t13*t8*x4,
│ t13*t8*t1,
│ t13*t8*x2,
│ t13*t8^2,
│ t13^2*x4,
│ t13^2*t1,
│ t13^2*x2,
│ t13^2*t8,
│ t13^3,
│ t7*x4^2,
│ t7*t1*x4,
│ t7*t1^2,
│ t7*x2*x4,
│ t7*x2*t1,
│ t7*x2^2,
│ t7*t8*x4,
│ t7*t8*t1,
│ t7*t8*x2,
│ t7*t8^2,
│ t7*t13*x4,
│ t7*t13*t1,
│ t7*t13*x2,
│ t7*t13*t8,
│ t7*t13^2,
│ t7^2*x4,
│ t7^2*t1,
│ t7^2*x2,
│ t7^2*t8,
│ t7^2*t13,
│ t7^3,
│ t2*x4^2,
│ t2*t1*x4,
│ t2*t1^2,
│ t2*x2*x4,
│ t2*x2*t1,
│ t2*x2^2,
│ t2*t8*x4,
│ t2*t8*t1,
│ t2*t8*x2,
│ t2*t8^2,
│ t2*t13*x4,
│ t2*t13*t1,
│ t2*t13*x2,
│ t2*t13*t8,
│ t2*t13^2,
│ t2*t7*x4,
│ t2*t7*t1,
│ t2*t7*x2,
│ t2*t7*t8,
│ t2*t7*t13,
│ t2*t7^2,
│ t2^2*x4,
│ t2^2*t1,
│ t2^2*x2,
│ t2^2*t8,
│ t2^2*t13,
│ t2^2*t7,
│ t2^3,
│ t9*x4^2,
│ t9*t1*x4,
│ t9*t1^2,
│ t9*x2*x4,
│ t9*x2*t1,
│ t9*x2^2,
│ t9*t8*x4,
│ t9*t8*t1,
│ t9*t8*x2,
│ t9*t8^2,
│ t9*t13*x4,
│ t9*t13*t1,
│ t9*t13*x2,
│ t9*t13*t8,
│ t9*t13^2,
│ t9*t7*x4,
│ t9*t7*t1,
│ t9*t7*x2,
│ t9*t7*t8,
│ t9*t7*t13,
│ t9*t7^2,
│ t9*t2*x4,
│ t9*t2*t1,
│ t9*t2*x2,
│ t9*t2*t8,
│ t9*t2*t13,
│ t9*t2*t7,
│ t9*t2^2,
│ t9^2*x4,
│ t9^2*t1,
│ t9^2*x2,
│ t9^2*t8,
│ t9^2*t13,
│ t9^2*t7,
│ t9^2*t2,
│ t9^3,
│ x10*x4^2,
│ x10*t1*x4,
│ x10*t1^2,
│ x10*x2*x4,
│ x10*x2*t1,
│ x10*x2^2,
│ x10*t8*x4,
│ x10*t8*t1,
│ x10*t8*x2,
│ x10*t8^2,
│ x10*t13*x4,
│ x10*t13*t1,
│ x10*t13*x2,
│ x10*t13*t8,
│ x10*t13^2,
│ x10*t7*x4,
│ x10*t7*t1,
│ x10*t7*x2,
│ x10*t7*t8,
│ x10*t7*t13,
│ x10*t7^2,
│ x10*t2*x4,
│ x10*t2*t1,
│ x10*t2*x2,
│ x10*t2*t8,
│ x10*t2*t13,
│ x10*t2*t7,
│ x10*t2^2,
│ x10*t9*x4,
│ x10*t9*t1,
│ x10*t9*x2,
│ x10*t9*t8,
│ x10*t9*t13,
│ x10*t9*t7,
│ x10*t9*t2,
│ x10*t9^2,
│ x10^2*x4,
│ x10^2*t1,
│ x10^2*x2,
│ x10^2*t8,
│ x10^2*t13,
│ x10^2*t7,
│ x10^2*t2,
│ x10^2*t9,
│ x10^3,
│ x1*x4^2,
│ x1*t1*x4,
│ x1*t1^2,
│ x1*x2*x4,
│ x1*x2*t1,
│ x1*x2^2,
│ x1*t8*x4,
│ x1*t8*t1,
│ x1*t8*x2,
│ x1*t8^2,
│ x1*t13*x4,
│ x1*t13*t1,
│ x1*t13*x2,
│ x1*t13*t8,
│ x1*t13^2,
│ x1*t7*x4,
│ x1*t7*t1,
│ x1*t7*x2,
│ x1*t7*t8,
│ x1*t7*t13,
│ x1*t7^2,
│ x1*t2*x4,
│ x1*t2*t1,
│ x1*t2*x2,
│ x1*t2*t8,
│ x1*t2*t13,
│ x1*t2*t7,
│ x1*t2^2,
│ x1*t9*x4,
│ x1*t9*t1,
│ x1*t9*x2,
│ x1*t9*t8,
│ x1*t9*t13,
│ x1*t9*t7,
│ x1*t9*t2,
│ x1*t9^2,
│ x1*x10*x4,
│ x1*x10*t1,
│ x1*x10*x2,
│ x1*x10*t8,
│ x1*x10*t13,
│ x1*x10*t7,
│ x1*x10*t2,
│ x1*x10*t9,
│ x1*x10^2,
│ x1^2*x4,
│ x1^2*t1,
│ x1^2*x2,
│ x1^2*t8,
│ x1^2*t13,
│ x1^2*t7,
│ x1^2*t2,
│ x1^2*t9,
│ x1^2*x10,
│ x1^3,
│ t12*x4^2,
│ t12*t1*x4,
│ t12*t1^2,
│ t12*x2*x4,
│ t12*x2*t1,
│ t12*x2^2,
│ t12*t8*x4,
│ t12*t8*t1,
│ t12*t8*x2,
│ t12*t8^2,
│ t12*t13*x4,
│ t12*t13*t1,
│ t12*t13*x2,
│ t12*t13*t8,
│ t12*t13^2,
│ t12*t7*x4,
│ t12*t7*t1,
│ t12*t7*x2,
│ t12*t7*t8,
│ t12*t7*t13,
│ t12*t7^2,
│ t12*t2*x4,
│ t12*t2*t1,
│ t12*t2*x2,
│ t12*t2*t8,
│ t12*t2*t13,
│ t12*t2*t7,
│ t12*t2^2,
│ t12*t9*x4,
│ t12*t9*t1,
│ t12*t9*x2,
│ t12*t9*t8,
│ t12*t9*t13,
│ t12*t9*t7,
│ t12*t9*t2,
│ t12*t9^2,
│ t12*x10*x4,
│ t12*x10*t1,
│ t12*x10*x2,
│ t12*x10*t8,
│ t12*x10*t13,
│ t12*x10*t7,
│ t12*x10*t2,
│ t12*x10*t9,
│ t12*x10^2,
│ t12*x1*x4,
│ t12*x1*t1,
│ t12*x1*x2,
│ t12*x1*t8,
│ t12*x1*t13,
│ t12*x1*t7,
│ t12*x1*t2,
│ t12*x1*t9,
│ t12*x1*x10,
│ t12*x1^2,
│ t12^2*x4,
│ t12^2*t1,
│ t12^2*x2,
│ t12^2*t8,
│ t12^2*t13,
│ t12^2*t7,
│ t12^2*t2,
│ t12^2*t9,
│ t12^2*x10,
│ t12^2*x1,
│ t12^3,
│ t4*x4^2,
│ t4*t1*x4,
│ t4*t1^2,
│ t4*x2*x4,
│ t4*x2*t1,
│ t4*x2^2,
│ t4*t8*x4,
│ t4*t8*t1,
│ t4*t8*x2,
│ t4*t8^2,
│ t4*t13*x4,
│ t4*t13*t1,
│ t4*t13*x2,
│ t4*t13*t8,
│ t4*t13^2,
│ t4*t7*x4,
│ t4*t7*t1,
│ t4*t7*x2,
│ t4*t7*t8,
│ t4*t7*t13,
│ t4*t7^2,
│ t4*t2*x4,
│ t4*t2*t1,
│ t4*t2*x2,
│ t4*t2*t8,
│ t4*t2*t13,
│ t4*t2*t7,
│ t4*t2^2,
│ t4*t9*x4,
│ t4*t9*t1,
│ t4*t9*x2,
│ t4*t9*t8,
│ t4*t9*t13,
│ t4*t9*t7,
│ t4*t9*t2,
│ t4*t9^2,
│ t4*x10*x4,
│ t4*x10*t1,
│ t4*x10*x2,
│ t4*x10*t8,
│ t4*x10*t13,
│ t4*x10*t7,
│ t4*x10*t2,
│ t4*x10*t9,
│ t4*x10^2,
│ t4*x1*x4,
│ t4*x1*t1,
│ t4*x1*x2,
│ t4*x1*t8,
│ t4*x1*t13,
│ t4*x1*t7,
│ t4*x1*t2,
│ t4*x1*t9,
│ t4*x1*x10,
│ t4*x1^2,
│ t4*t12*x4,
│ t4*t12*t1,
│ t4*t12*x2,
│ t4*t12*t8,
│ t4*t12*t13,
│ t4*t12*t7,
│ t4*t12*t2,
│ t4*t12*t9,
│ t4*t12*x10,
│ t4*t12*x1,
│ t4*t12^2,
│ t4^2*x4,
│ t4^2*t1,
│ t4^2*x2,
│ t4^2*t8,
│ t4^2*t13,
│ t4^2*t7,
│ t4^2*t2,
│ t4^2*t9,
│ t4^2*x10,
│ t4^2*x1,
│ t4^2*t12,
│ t4^3,
│ x3*x4^2,
│ x3*t1*x4,
│ x3*t1^2,
│ x3*x2*x4,
│ x3*x2*t1,
│ x3*x2^2,
│ x3*t8*x4,
│ x3*t8*t1,
│ x3*t8*x2,
│ x3*t8^2,
│ x3*t13*x4,
│ x3*t13*t1,
│ x3*t13*x2,
│ x3*t13*t8,
│ x3*t13^2,
│ x3*t7*x4,
│ x3*t7*t1,
│ x3*t7*x2,
│ x3*t7*t8,
│ x3*t7*t13,
│ x3*t7^2,
│ x3*t2*x4,
│ x3*t2*t1,
│ x3*t2*x2,
│ x3*t2*t8,
│ x3*t2*t13,
│ x3*t2*t7,
│ x3*t2^2,
│ x3*t9*x4,
│ x3*t9*t1,
│ x3*t9*x2,
│ x3*t9*t8,
│ x3*t9*t13,
│ x3*t9*t7,
│ x3*t9*t2,
│ x3*t9^2,
│ x3*x10*x4,
│ x3*x10*t1,
│ x3*x10*x2,
│ x3*x10*t8,
│ x3*x10*t13,
│ x3*x10*t7,
│ x3*x10*t2,
│ x3*x10*t9,
│ x3*x10^2,
│ x3*x1*x4,
│ x3*x1*t1,
│ x3*x1*x2,
│ x3*x1*t8,
│ x3*x1*t13,
│ x3*x1*t7,
│ x3*x1*t2,
│ x3*x1*t9,
│ x3*x1*x10,
│ x3*x1^2,
│ x3*t12*x4,
│ x3*t12*t1,
│ x3*t12*x2,
│ x3*t12*t8,
│ x3*t12*t13,
│ x3*t12*t7,
│ x3*t12*t2,
│ x3*t12*t9,
│ x3*t12*x10,
│ x3*t12*x1,
│ x3*t12^2,
│ x3*t4*x4,
│ x3*t4*t1,
│ x3*t4*x2,
│ x3*t4*t8,
│ x3*t4*t13,
│ x3*t4*t7,
│ x3*t4*t2,
│ x3*t4*t9,
│ x3*t4*x10,
│ x3*t4*x1,
│ x3*t4*t12,
│ x3*t4^2,
│ x3^2*x4,
│ x3^2*t1,
│ x3^2*x2,
│ x3^2*t8,
│ x3^2*t13,
│ x3^2*t7,
│ x3^2*t2,
│ x3^2*t9,
│ x3^2*x10,
│ x3^2*x1,
│ x3^2*t12,
│ x3^2*t4,
│ x3^3,
│ t18*x4^2,
│ t18*t1*x4,
│ t18*t1^2,
│ t18*x2*x4,
│ t18*x2*t1,
│ t18*x2^2,
│ t18*t8*x4,
│ t18*t8*t1,
│ t18*t8*x2,
│ t18*t8^2,
│ t18*t13*x4,
│ t18*t13*t1,
│ t18*t13*x2,
│ t18*t13*t8,
│ t18*t13^2,
│ t18*t7*x4,
│ t18*t7*t1,
│ t18*t7*x2,
│ t18*t7*t8,
│ t18*t7*t13,
│ t18*t7^2,
│ t18*t2*x4,
│ t18*t2*t1,
│ t18*t2*x2,
│ t18*t2*t8,
│ t18*t2*t13,
│ t18*t2*t7,
│ t18*t2^2,
│ t18*t9*x4,
│ t18*t9*t1,
│ t18*t9*x2,
│ t18*t9*t8,
│ t18*t9*t13,
│ t18*t9*t7,
│ t18*t9*t2,
│ t18*t9^2,
│ t18*x10*x4,
│ t18*x10*t1,
│ t18*x10*x2,
│ t18*x10*t8,
│ t18*x10*t13,
│ t18*x10*t7,
│ t18*x10*t2,
│ t18*x10*t9,
│ t18*x10^2,
│ t18*x1*x4,
│ t18*x1*t1,
│ t18*x1*x2,
│ t18*x1*t8,
│ t18*x1*t13,
│ t18*x1*t7,
│ t18*x1*t2,
│ t18*x1*t9,
│ t18*x1*x10,
│ t18*x1^2,
│ t18*t12*x4,
│ t18*t12*t1,
│ t18*t12*x2,
│ t18*t12*t8,
│ t18*t12*t13,
│ t18*t12*t7,
│ t18*t12*t2,
│ t18*t12*t9,
│ t18*t12*x10,
│ t18*t12*x1,
│ t18*t12^2,
│ t18*t4*x4,
│ t18*t4*t1,
│ t18*t4*x2,
│ t18*t4*t8,
│ t18*t4*t13,
│ t18*t4*t7,
│ t18*t4*t2,
│ t18*t4*t9,
│ t18*t4*x10,
│ t18*t4*x1,
│ t18*t4*t12,
│ t18*t4^2,
│ t18*x3*x4,
│ t18*x3*t1,
│ t18*x3*x2,
│ t18*x3*t8,
│ t18*x3*t13,
│ t18*x3*t7,
│ t18*x3*t2,
│ t18*x3*t9,
│ t18*x3*x10,
│ t18*x3*x1,
│ t18*x3*t12,
│ t18*x3*t4,
│ t18*x3^2,
│ t18^2*x4,
│ t18^2*t1,
│ t18^2*x2,
│ t18^2*t8,
│ t18^2*t13,
│ t18^2*t7,
│ t18^2*t2,
│ t18^2*t9,
│ t18^2*x10,
│ t18^2*x1,
│ t18^2*t12,
│ t18^2*t4,
│ t18^2*x3,
│ t18^3,
│ x5*x4^2,
│ x5*t1*x4,
│ x5*t1^2,
│ x5*x2*x4,
│ x5*x2*t1,
│ x5*x2^2,
│ x5*t8*x4,
│ x5*t8*t1,
│ x5*t8*x2,
│ x5*t8^2,
│ x5*t13*x4,
│ x5*t13*t1,
│ x5*t13*x2,
│ x5*t13*t8,
│ x5*t13^2,
│ x5*t7*x4,
│ x5*t7*t1,
│ x5*t7*x2,
│ x5*t7*t8,
│ x5*t7*t13,
│ x5*t7^2,
│ x5*t2*x4,
│ x5*t2*t1,
│ x5*t2*x2,
│ x5*t2*t8,
│ x5*t2*t13,
│ x5*t2*t7,
│ x5*t2^2,
│ x5*t9*x4,
│ x5*t9*t1,
│ x5*t9*x2,
│ x5*t9*t8,
│ x5*t9*t13,
│ x5*t9*t7,
│ x5*t9*t2,
│ x5*t9^2,
│ x5*x10*x4,
│ x5*x10*t1,
│ x5*x10*x2,
│ x5*x10*t8,
│ x5*x10*t13,
│ x5*x10*t7,
│ x5*x10*t2,
│ x5*x10*t9,
│ x5*x10^2,
│ x5*x1*x4,
│ x5*x1*t1,
│ x5*x1*x2,
│ x5*x1*t8,
│ x5*x1*t13,
│ x5*x1*t7,
│ x5*x1*t2,
│ x5*x1*t9,
│ x5*x1*x10,
│ x5*x1^2,
│ x5*t12*x4,
│ x5*t12*t1,
│ x5*t12*x2,
│ x5*t12*t8,
│ x5*t12*t13,
│ x5*t12*t7,
│ x5*t12*t2,
│ x5*t12*t9,
│ x5*t12*x10,
│ x5*t12*x1,
│ x5*t12^2,
│ x5*t4*x4,
│ x5*t4*t1,
│ x5*t4*x2,
│ x5*t4*t8,
│ x5*t4*t13,
│ x5*t4*t7,
│ x5*t4*t2,
│ x5*t4*t9,
│ x5*t4*x10,
│ x5*t4*x1,
│ x5*t4*t12,
│ x5*t4^2,
│ x5*x3*x4,
│ x5*x3*t1,
│ x5*x3*x2,
│ x5*x3*t8,
│ x5*x3*t13,
│ x5*x3*t7,
│ x5*x3*t2,
│ x5*x3*t9,
│ x5*x3*x10,
│ x5*x3*x1,
│ x5*x3*t12,
│ x5*x3*t4,
│ x5*x3^2,
│ x5*t18*x4,
│ x5*t18*t1,
│ x5*t18*x2,
│ x5*t18*t8,
│ x5*t18*t13,
│ x5*t18*t7,
│ x5*t18*t2,
│ x5*t18*t9,
│ x5*t18*x10,
│ x5*t18*x1,
│ x5*t18*t12,
│ x5*t18*t4,
│ x5*t18*x3,
│ x5*t18^2,
│ x5^2*x4,
│ x5^2*t1,
│ x5^2*x2,
│ x5^2*t8,
│ x5^2*t13,
│ x5^2*t7,
│ x5^2*t2,
│ x5^2*t9,
│ x5^2*x10,
│ x5^2*x1,
│ x5^2*t12,
│ x5^2*t4,
│ x5^2*x3,
│ x5^2*t18,
│ x5^3,
│ x6*x4^2,
│ x6*t1*x4,
│ x6*t1^2,
│ x6*x2*x4,
│ x6*x2*t1,
│ x6*x2^2,
│ x6*t8*x4,
│ x6*t8*t1,
│ x6*t8*x2,
│ x6*t8^2,
│ x6*t13*x4,
│ x6*t13*t1,
│ x6*t13*x2,
│ x6*t13*t8,
│ x6*t13^2,
│ x6*t7*x4,
│ x6*t7*t1,
│ x6*t7*x2,
│ x6*t7*t8,
│ x6*t7*t13,
│ x6*t7^2,
│ x6*t2*x4,
│ x6*t2*t1,
│ x6*t2*x2,
│ x6*t2*t8,
│ x6*t2*t13,
│ x6*t2*t7,
│ x6*t2^2,
│ x6*t9*x4,
│ x6*t9*t1,
│ x6*t9*x2,
│ x6*t9*t8,
│ x6*t9*t13,
│ x6*t9*t7,
│ x6*t9*t2,
│ x6*t9^2,
│ x6*x10*x4,
│ x6*x10*t1,
│ x6*x10*x2,
│ x6*x10*t8,
│ x6*x10*t13,
│ x6*x10*t7,
│ x6*x10*t2,
│ x6*x10*t9,
│ x6*x10^2,
│ x6*x1*x4,
│ x6*x1*t1,
│ x6*x1*x2,
│ x6*x1*t8,
│ x6*x1*t13,
│ x6*x1*t7,
│ x6*x1*t2,
│ x6*x1*t9,
│ x6*x1*x10,
│ x6*x1^2,
│ x6*t12*x4,
│ x6*t12*t1,
│ x6*t12*x2,
│ x6*t12*t8,
│ x6*t12*t13,
│ x6*t12*t7,
│ x6*t12*t2,
│ x6*t12*t9,
│ x6*t12*x10,
│ x6*t12*x1,
│ x6*t12^2,
│ x6*t4*x4,
│ x6*t4*t1,
│ x6*t4*x2,
│ x6*t4*t8,
│ x6*t4*t13,
│ x6*t4*t7,
│ x6*t4*t2,
│ x6*t4*t9,
│ x6*t4*x10,
│ x6*t4*x1,
│ x6*t4*t12,
│ x6*t4^2,
│ x6*x3*x4,
│ x6*x3*t1,
│ x6*x3*x2,
│ x6*x3*t8,
│ x6*x3*t13,
│ x6*x3*t7,
│ x6*x3*t2,
│ x6*x3*t9,
│ x6*x3*x10,
│ x6*x3*x1,
│ x6*x3*t12,
│ x6*x3*t4,
│ x6*x3^2,
│ x6*t18*x4,
│ x6*t18*t1,
│ x6*t18*x2,
│ x6*t18*t8,
│ x6*t18*t13,
│ x6*t18*t7,
│ x6*t18*t2,
│ x6*t18*t9,
│ x6*t18*x10,
│ x6*t18*x1,
│ x6*t18*t12,
│ x6*t18*t4,
│ x6*t18*x3,
│ x6*t18^2,
│ x6*x5*x4,
│ x6*x5*t1,
│ x6*x5*x2,
│ x6*x5*t8,
│ x6*x5*t13,
│ x6*x5*t7,
│ x6*x5*t2,
│ x6*x5*t9,
│ x6*x5*x10,
│ x6*x5*x1,
│ x6*x5*t12,
│ x6*x5*t4,
│ x6*x5*x3,
│ x6*x5*t18,
│ x6*x5^2,
│ x6^2*x4,
│ x6^2*t1,
│ x6^2*x2,
│ x6^2*t8,
│ x6^2*t13,
│ x6^2*t7,
│ x6^2*t2,
│ x6^2*t9,
│ x6^2*x10,
│ x6^2*x1,
│ x6^2*t12,
│ x6^2*t4,
│ x6^2*x3,
│ x6^2*t18,
│ x6^2*x5,
│ x6^3,
│ x9*x4^2,
│ x9*t1*x4,
│ x9*t1^2,
│ x9*x2*x4,
│ x9*x2*t1,
│ x9*x2^2,
│ x9*t8*x4,
│ x9*t8*t1,
│ x9*t8*x2,
│ x9*t8^2,
│ x9*t13*x4,
│ x9*t13*t1,
│ x9*t13*x2,
│ x9*t13*t8,
│ x9*t13^2,
│ x9*t7*x4,
│ x9*t7*t1,
│ x9*t7*x2,
│ x9*t7*t8,
│ x9*t7*t13,
│ x9*t7^2,
│ x9*t2*x4,
│ x9*t2*t1,
│ x9*t2*x2,
│ x9*t2*t8,
│ x9*t2*t13,
│ x9*t2*t7,
│ x9*t2^2,
│ x9*t9*x4,
│ x9*t9*t1,
│ x9*t9*x2,
│ x9*t9*t8,
│ x9*t9*t13,
│ x9*t9*t7,
│ x9*t9*t2,
│ x9*t9^2,
│ x9*x10*x4,
│ x9*x10*t1,
│ x9*x10*x2,
│ x9*x10*t8,
│ x9*x10*t13,
│ x9*x10*t7,
│ x9*x10*t2,
│ x9*x10*t9,
│ x9*x10^2,
│ x9*x1*x4,
│ x9*x1*t1,
│ x9*x1*x2,
│ x9*x1*t8,
│ x9*x1*t13,
│ x9*x1*t7,
│ x9*x1*t2,
│ x9*x1*t9,
│ x9*x1*x10,
│ x9*x1^2,
│ x9*t12*x4,
│ x9*t12*t1,
│ x9*t12*x2,
│ x9*t12*t8,
│ x9*t12*t13,
│ x9*t12*t7,
│ x9*t12*t2,
│ x9*t12*t9,
│ x9*t12*x10,
│ x9*t12*x1,
│ x9*t12^2,
│ x9*t4*x4,
│ x9*t4*t1,
│ x9*t4*x2,
│ x9*t4*t8,
│ x9*t4*t13,
│ x9*t4*t7,
│ x9*t4*t2,
│ x9*t4*t9,
│ x9*t4*x10,
│ x9*t4*x1,
│ x9*t4*t12,
│ x9*t4^2,
│ x9*x3*x4,
│ x9*x3*t1,
│ x9*x3*x2,
│ x9*x3*t8,
│ x9*x3*t13,
│ x9*x3*t7,
│ x9*x3*t2,
│ x9*x3*t9,
│ x9*x3*x10,
│ x9*x3*x1,
│ x9*x3*t12,
│ x9*x3*t4,
│ x9*x3^2,
│ x9*t18*x4,
│ x9*t18*t1,
│ x9*t18*x2,
│ x9*t18*t8,
│ x9*t18*t13,
│ x9*t18*t7,
│ x9*t18*t2,
│ x9*t18*t9,
│ x9*t18*x10,
│ x9*t18*x1,
│ x9*t18*t12,
│ x9*t18*t4,
│ x9*t18*x3,
│ x9*t18^2,
│ x9*x5*x4,
│ x9*x5*t1,
│ x9*x5*x2,
│ x9*x5*t8,
│ x9*x5*t13,
│ x9*x5*t7,
│ x9*x5*t2,
│ x9*x5*t9,
│ x9*x5*x10,
│ x9*x5*x1,
│ x9*x5*t12,
│ x9*x5*t4,
│ x9*x5*x3,
│ x9*x5*t18,
│ x9*x5^2,
│ x9*x6*x4,
│ x9*x6*t1,
│ x9*x6*x2,
│ x9*x6*t8,
│ x9*x6*t13,
│ x9*x6*t7,
│ x9*x6*t2,
│ x9*x6*t9,
│ x9*x6*x10,
│ x9*x6*x1,
│ x9*x6*t12,
│ x9*x6*t4,
│ x9*x6*x3,
│ x9*x6*t18,
│ x9*x6*x5,
│ x9*x6^2,
│ x9^2*x4,
│ x9^2*t1,
│ x9^2*x2,
│ x9^2*t8,
│ x9^2*t13,
│ x9^2*t7,
│ x9^2*t2,
│ x9^2*t9,
│ x9^2*x10,
│ x9^2*x1,
│ x9^2*t12,
│ x9^2*t4,
│ x9^2*x3,
│ x9^2*t18,
│ x9^2*x5,
│ x9^2*x6,
│ x9^3,
│ t10*x4^2,
│ t10*t1*x4,
│ t10*t1^2,
│ t10*x2*x4,
│ t10*x2*t1,
│ t10*x2^2,
│ t10*t8*x4,
│ t10*t8*t1,
│ t10*t8*x2,
│ t10*t8^2,
│ t10*t13*x4,
│ t10*t13*t1,
│ t10*t13*x2,
│ t10*t13*t8,
│ t10*t13^2,
│ t10*t7*x4,
│ t10*t7*t1,
│ t10*t7*x2,
│ t10*t7*t8,
│ t10*t7*t13,
│ t10*t7^2,
│ t10*t2*x4,
│ t10*t2*t1,
│ t10*t2*x2,
│ t10*t2*t8,
│ t10*t2*t13,
│ t10*t2*t7,
│ t10*t2^2,
│ t10*t9*x4,
│ t10*t9*t1,
│ t10*t9*x2,
│ t10*t9*t8,
│ t10*t9*t13,
│ t10*t9*t7,
│ t10*t9*t2,
│ t10*t9^2,
│ t10*x10*x4,
│ t10*x10*t1,
│ t10*x10*x2,
│ t10*x10*t8,
│ t10*x10*t13,
│ t10*x10*t7,
│ t10*x10*t2,
│ t10*x10*t9,
│ t10*x10^2,
│ t10*x1*x4,
│ t10*x1*t1,
│ t10*x1*x2,
│ t10*x1*t8,
│ t10*x1*t13,
│ t10*x1*t7,
│ t10*x1*t2,
│ t10*x1*t9,
│ t10*x1*x10,
│ t10*x1^2,
│ t10*t12*x4,
│ t10*t12*t1,
│ t10*t12*x2,
│ t10*t12*t8,
│ t10*t12*t13,
│ t10*t12*t7,
│ t10*t12*t2,
│ t10*t12*t9,
│ t10*t12*x10,
│ t10*t12*x1,
│ t10*t12^2,
│ t10*t4*x4,
│ t10*t4*t1,
│ t10*t4*x2,
│ t10*t4*t8,
│ t10*t4*t13,
│ t10*t4*t7,
│ t10*t4*t2,
│ t10*t4*t9,
│ t10*t4*x10,
│ t10*t4*x1,
│ t10*t4*t12,
│ t10*t4^2,
│ t10*x3*x4,
│ t10*x3*t1,
│ t10*x3*x2,
│ t10*x3*t8,
│ t10*x3*t13,
│ t10*x3*t7,
│ t10*x3*t2,
│ t10*x3*t9,
│ t10*x3*x10,
│ t10*x3*x1,
│ t10*x3*t12,
│ t10*x3*t4,
│ t10*x3^2,
│ t10*t18*x4,
│ t10*t18*t1,
│ t10*t18*x2,
│ t10*t18*t8,
│ t10*t18*t13,
│ t10*t18*t7,
│ t10*t18*t2,
│ t10*t18*t9,
│ t10*t18*x10,
│ t10*t18*x1,
│ t10*t18*t12,
│ t10*t18*t4,
│ t10*t18*x3,
│ t10*t18^2,
│ t10*x5*x4,
│ t10*x5*t1,
│ t10*x5*x2,
│ t10*x5*t8,
│ t10*x5*t13,
│ t10*x5*t7,
│ t10*x5*t2,
│ t10*x5*t9,
│ t10*x5*x10,
│ t10*x5*x1,
│ t10*x5*t12,
│ t10*x5*t4,
│ t10*x5*x3,
│ t10*x5*t18,
│ t10*x5^2,
│ t10*x6*x4,
│ t10*x6*t1,
│ t10*x6*x2,
│ t10*x6*t8,
│ t10*x6*t13,
│ t10*x6*t7,
│ t10*x6*t2,
│ t10*x6*t9,
│ t10*x6*x10,
│ t10*x6*x1,
│ t10*x6*t12,
│ t10*x6*t4,
│ t10*x6*x3,
│ t10*x6*t18,
│ t10*x6*x5,
│ t10*x6^2,
│ t10*x9*x4,
│ t10*x9*t1,
│ t10*x9*x2,
│ t10*x9*t8,
│ t10*x9*t13,
│ t10*x9*t7,
│ t10*x9*t2,
│ t10*x9*t9,
│ t10*x9*x10,
│ t10*x9*x1,
│ t10*x9*t12,
│ t10*x9*t4,
│ t10*x9*x3,
│ t10*x9*t18,
│ t10*x9*x5,
│ t10*x9*x6,
│ t10*x9^2,
│ t10^2*x4,
│ t10^2*t1,
│ t10^2*x2,
│ t10^2*t8,
│ t10^2*t13,
│ t10^2*t7,
│ t10^2*t2,
│ t10^2*t9,
│ t10^2*x10,
│ t10^2*x1,
│ t10^2*t12,
│ t10^2*t4,
│ t10^2*x3,
│ t10^2*t18,
│ t10^2*x5,
│ t10^2*x6,
│ t10^2*x9,
│ t10^3,
│ t14*x4^2,
│ t14*t1*x4,
│ t14*t1^2,
│ t14*x2*x4,
│ t14*x2*t1,
│ t14*x2^2,
│ t14*t8*x4,
│ t14*t8*t1,
│ t14*t8*x2,
│ t14*t8^2,
│ t14*t13*x4,
│ t14*t13*t1,
│ t14*t13*x2,
│ t14*t13*t8,
│ t14*t13^2,
│ t14*t7*x4,
│ t14*t7*t1,
│ t14*t7*x2,
│ t14*t7*t8,
│ t14*t7*t13,
│ t14*t7^2,
│ t14*t2*x4,
│ t14*t2*t1,
│ t14*t2*x2,
│ t14*t2*t8,
│ t14*t2*t13,
│ t14*t2*t7,
│ t14*t2^2,
│ t14*t9*x4,
│ t14*t9*t1,
│ t14*t9*x2,
│ t14*t9*t8,
│ t14*t9*t13,
│ t14*t9*t7,
│ t14*t9*t2,
│ t14*t9^2,
│ t14*x10*x4,
│ t14*x10*t1,
│ t14*x10*x2,
│ t14*x10*t8,
│ t14*x10*t13,
│ t14*x10*t7,
│ t14*x10*t2,
│ t14*x10*t9,
│ t14*x10^2,
│ t14*x1*x4,
│ t14*x1*t1,
│ t14*x1*x2,
│ t14*x1*t8,
│ t14*x1*t13,
│ t14*x1*t7,
│ t14*x1*t2,
│ t14*x1*t9,
│ t14*x1*x10,
│ t14*x1^2,
│ t14*t12*x4,
│ t14*t12*t1,
│ t14*t12*x2,
│ t14*t12*t8,
│ t14*t12*t13,
│ t14*t12*t7,
│ t14*t12*t2,
│ t14*t12*t9,
│ t14*t12*x10,
│ t14*t12*x1,
│ t14*t12^2,
│ t14*t4*x4,
│ t14*t4*t1,
│ t14*t4*x2,
│ t14*t4*t8,
│ t14*t4*t13,
│ t14*t4*t7,
│ t14*t4*t2,
│ t14*t4*t9,
│ t14*t4*x10,
│ t14*t4*x1,
│ t14*t4*t12,
│ t14*t4^2,
│ t14*x3*x4,
│ t14*x3*t1,
│ t14*x3*x2,
│ t14*x3*t8,
│ t14*x3*t13,
│ t14*x3*t7,
│ t14*x3*t2,
│ t14*x3*t9,
│ t14*x3*x10,
│ t14*x3*x1,
│ t14*x3*t12,
│ t14*x3*t4,
│ t14*x3^2,
│ t14*t18*x4,
│ t14*t18*t1,
│ t14*t18*x2,
│ t14*t18*t8,
│ t14*t18*t13,
│ t14*t18*t7,
│ t14*t18*t2,
│ t14*t18*t9,
│ t14*t18*x10,
│ t14*t18*x1,
│ t14*t18*t12,
│ t14*t18*t4,
│ t14*t18*x3,
│ t14*t18^2,
│ t14*x5*x4,
│ t14*x5*t1,
│ t14*x5*x2,
│ t14*x5*t8,
│ t14*x5*t13,
│ t14*x5*t7,
│ t14*x5*t2,
│ t14*x5*t9,
│ t14*x5*x10,
│ t14*x5*x1,
│ t14*x5*t12,
│ t14*x5*t4,
│ t14*x5*x3,
│ t14*x5*t18,
│ t14*x5^2,
│ t14*x6*x4,
│ t14*x6*t1,
│ t14*x6*x2,
│ t14*x6*t8,
│ t14*x6*t13,
│ t14*x6*t7,
│ t14*x6*t2,
│ t14*x6*t9,
│ t14*x6*x10,
│ t14*x6*x1,
│ t14*x6*t12,
│ t14*x6*t4,
│ t14*x6*x3,
│ t14*x6*t18,
│ t14*x6*x5,
│ t14*x6^2,
│ t14*x9*x4,
│ t14*x9*t1,
│ t14*x9*x2,
│ t14*x9*t8,
│ t14*x9*t13,
│ t14*x9*t7,
│ t14*x9*t2,
│ t14*x9*t9,
│ t14*x9*x10,
│ t14*x9*x1,
│ t14*x9*t12,
│ t14*x9*t4,
│ t14*x9*x3,
│ t14*x9*t18,
│ t14*x9*x5,
│ t14*x9*x6,
│ t14*x9^2,
│ t14*t10*x4,
│ t14*t10*t1,
│ t14*t10*x2,
│ t14*t10*t8,
│ t14*t10*t13,
│ t14*t10*t7,
│ t14*t10*t2,
│ t14*t10*t9,
│ t14*t10*x10,
│ t14*t10*x1,
│ t14*t10*t12,
│ t14*t10*t4,
│ t14*t10*x3,
│ t14*t10*t18,
│ t14*t10*x5,
│ t14*t10*x6,
│ t14*t10*x9,
│ t14*t10^2,
│ t14^2*x4,
│ t14^2*t1,
│ t14^2*x2,
│ t14^2*t8,
│ t14^2*t13,
│ t14^2*t7,
│ t14^2*t2,
│ t14^2*t9,
│ t14^2*x10,
│ t14^2*x1,
│ t14^2*t12,
│ t14^2*t4,
│ t14^2*x3,
│ t14^2*t18,
│ t14^2*x5,
│ t14^2*x6,
│ t14^2*x9,
│ t14^2*t10,
│ t14^3,
│ t19*x4^2,
│ t19*t1*x4,
│ t19*t1^2,
│ t19*x2*x4,
│ t19*x2*t1,
│ t19*x2^2,
│ t19*t8*x4,
│ t19*t8*t1,
│ t19*t8*x2,
│ t19*t8^2,
│ t19*t13*x4,
│ t19*t13*t1,
│ t19*t13*x2,
│ t19*t13*t8,
│ t19*t13^2,
│ t19*t7*x4,
│ t19*t7*t1,
│ t19*t7*x2,
│ t19*t7*t8,
│ t19*t7*t13,
│ t19*t7^2,
│ t19*t2*x4,
│ t19*t2*t1,
│ t19*t2*x2,
│ t19*t2*t8,
│ t19*t2*t13,
│ t19*t2*t7,
│ t19*t2^2,
│ t19*t9*x4,
│ t19*t9*t1,
│ t19*t9*x2,
│ t19*t9*t8,
│ t19*t9*t13,
│ t19*t9*t7,
│ t19*t9*t2,
│ t19*t9^2,
│ t19*x10*x4,
│ t19*x10*t1,
│ t19*x10*x2,
│ t19*x10*t8,
│ t19*x10*t13,
│ t19*x10*t7,
│ t19*x10*t2,
│ t19*x10*t9,
│ t19*x10^2,
│ t19*x1*x4,
│ t19*x1*t1,
│ t19*x1*x2,
│ t19*x1*t8,
│ t19*x1*t13,
│ t19*x1*t7,
│ t19*x1*t2,
│ t19*x1*t9,
│ t19*x1*x10,
│ t19*x1^2,
│ t19*t12*x4,
│ t19*t12*t1,
│ t19*t12*x2,
│ t19*t12*t8,
│ t19*t12*t13,
│ t19*t12*t7,
│ t19*t12*t2,
│ t19*t12*t9,
│ t19*t12*x10,
│ t19*t12*x1,
│ t19*t12^2,
│ t19*t4*x4,
│ t19*t4*t1,
│ t19*t4*x2,
│ t19*t4*t8,
│ t19*t4*t13,
│ t19*t4*t7,
│ t19*t4*t2,
│ t19*t4*t9,
│ t19*t4*x10,
│ t19*t4*x1,
│ t19*t4*t12,
│ t19*t4^2,
│ t19*x3*x4,
│ t19*x3*t1,
│ t19*x3*x2,
│ t19*x3*t8,
│ t19*x3*t13,
│ t19*x3*t7,
│ t19*x3*t2,
│ t19*x3*t9,
│ t19*x3*x10,
│ t19*x3*x1,
│ t19*x3*t12,
│ t19*x3*t4,
│ t19*x3^2,
│ t19*t18*x4,
│ t19*t18*t1,
│ t19*t18*x2,
│ t19*t18*t8,
│ t19*t18*t13,
│ t19*t18*t7,
│ t19*t18*t2,
│ t19*t18*t9,
│ t19*t18*x10,
│ t19*t18*x1,
│ t19*t18*t12,
│ t19*t18*t4,
│ t19*t18*x3,
│ t19*t18^2,
│ t19*x5*x4,
│ t19*x5*t1,
│ t19*x5*x2,
│ t19*x5*t8,
│ t19*x5*t13,
│ t19*x5*t7,
│ t19*x5*t2,
│ t19*x5*t9,
│ t19*x5*x10,
│ t19*x5*x1,
│ t19*x5*t12,
│ t19*x5*t4,
│ t19*x5*x3,
│ t19*x5*t18,
│ t19*x5^2,
│ t19*x6*x4,
│ t19*x6*t1,
│ t19*x6*x2,
│ t19*x6*t8,
│ t19*x6*t13,
│ t19*x6*t7,
│ t19*x6*t2,
│ t19*x6*t9,
│ t19*x6*x10,
│ t19*x6*x1,
│ t19*x6*t12,
│ t19*x6*t4,
│ t19*x6*x3,
│ t19*x6*t18,
│ t19*x6*x5,
│ t19*x6^2,
│ t19*x9*x4,
│ t19*x9*t1,
│ t19*x9*x2,
│ t19*x9*t8,
│ t19*x9*t13,
│ t19*x9*t7,
│ t19*x9*t2,
│ t19*x9*t9,
│ t19*x9*x10,
│ t19*x9*x1,
│ t19*x9*t12,
│ t19*x9*t4,
│ t19*x9*x3,
│ t19*x9*t18,
│ t19*x9*x5,
│ t19*x9*x6,
│ t19*x9^2,
│ t19*t10*x4,
│ t19*t10*t1,
│ t19*t10*x2,
│ t19*t10*t8,
│ t19*t10*t13,
│ t19*t10*t7,
│ t19*t10*t2,
│ t19*t10*t9,
│ t19*t10*x10,
│ t19*t10*x1,
│ t19*t10*t12,
│ t19*t10*t4,
│ t19*t10*x3,
│ t19*t10*t18,
│ t19*t10*x5,
│ t19*t10*x6,
│ t19*t10*x9,
│ t19*t10^2,
│ t19*t14*x4,
│ t19*t14*t1,
│ t19*t14*x2,
│ t19*t14*t8,
│ t19*t14*t13,
│ t19*t14*t7,
│ t19*t14*t2,
│ t19*t14*t9,
│ t19*t14*x10,
│ t19*t14*x1,
│ t19*t14*t12,
│ t19*t14*t4,
│ t19*t14*x3,
│ t19*t14*t18,
│ t19*t14*x5,
│ t19*t14*x6,
│ t19*t14*x9,
│ t19*t14*t10,
│ t19*t14^2,
│ t19^2*x4,
│ t19^2*t1,
│ t19^2*x2,
│ t19^2*t8,
│ t19^2*t13,
│ t19^2*t7,
│ t19^2*t2,
│ t19^2*t9,
│ t19^2*x10,
│ t19^2*x1,
│ t19^2*t12,
│ t19^2*t4,
│ t19^2*x3,
│ t19^2*t18,
│ t19^2*x5,
│ t19^2*x6,
│ t19^2*x9,
│ t19^2*t10,
│ t19^2*t14,
│ t19^3,
│ t20*x4^2,
│ t20*t1*x4,
│ t20*t1^2,
│ t20*x2*x4,
│ t20*x2*t1,
│ t20*x2^2,
│ t20*t8*x4,
│ t20*t8*t1,
│ t20*t8*x2,
│ t20*t8^2,
│ t20*t13*x4,
│ t20*t13*t1,
│ t20*t13*x2,
│ t20*t13*t8,
│ t20*t13^2,
│ t20*t7*x4,
│ t20*t7*t1,
│ t20*t7*x2,
│ t20*t7*t8,
│ t20*t7*t13,
│ t20*t7^2,
│ t20*t2*x4,
│ t20*t2*t1,
│ t20*t2*x2,
│ t20*t2*t8,
│ t20*t2*t13,
│ t20*t2*t7,
│ t20*t2^2,
│ t20*t9*x4,
│ t20*t9*t1,
│ t20*t9*x2,
│ t20*t9*t8,
│ t20*t9*t13,
│ t20*t9*t7,
│ t20*t9*t2,
│ t20*t9^2,
│ t20*x10*x4,
│ t20*x10*t1,
│ t20*x10*x2,
│ t20*x10*t8,
│ t20*x10*t13,
│ t20*x10*t7,
│ t20*x10*t2,
│ t20*x10*t9,
│ t20*x10^2,
│ t20*x1*x4,
│ t20*x1*t1,
│ t20*x1*x2,
│ t20*x1*t8,
│ t20*x1*t13,
│ t20*x1*t7,
│ t20*x1*t2,
│ t20*x1*t9,
│ t20*x1*x10,
│ t20*x1^2,
│ t20*t12*x4,
│ t20*t12*t1,
│ t20*t12*x2,
│ t20*t12*t8,
│ t20*t12*t13,
│ t20*t12*t7,
│ t20*t12*t2,
│ t20*t12*t9,
│ t20*t12*x10,
│ t20*t12*x1,
│ t20*t12^2,
│ t20*t4*x4,
│ t20*t4*t1,
│ t20*t4*x2,
│ t20*t4*t8,
│ t20*t4*t13,
│ t20*t4*t7,
│ t20*t4*t2,
│ t20*t4*t9,
│ t20*t4*x10,
│ t20*t4*x1,
│ t20*t4*t12,
│ t20*t4^2,
│ t20*x3*x4,
│ t20*x3*t1,
│ t20*x3*x2,
│ t20*x3*t8,
│ t20*x3*t13,
│ t20*x3*t7,
│ t20*x3*t2,
│ t20*x3*t9,
│ t20*x3*x10,
│ t20*x3*x1,
│ t20*x3*t12,
│ t20*x3*t4,
│ t20*x3^2,
│ t20*t18*x4,
│ t20*t18*t1,
│ t20*t18*x2,
│ t20*t18*t8,
│ t20*t18*t13,
│ t20*t18*t7,
│ t20*t18*t2,
│ t20*t18*t9,
│ t20*t18*x10,
│ t20*t18*x1,
│ t20*t18*t12,
│ t20*t18*t4,
│ t20*t18*x3,
│ t20*t18^2,
│ t20*x5*x4,
│ t20*x5*t1,
│ t20*x5*x2,
│ t20*x5*t8,
│ t20*x5*t13,
│ t20*x5*t7,
│ t20*x5*t2,
│ t20*x5*t9,
│ t20*x5*x10,
│ t20*x5*x1,
│ t20*x5*t12,
│ t20*x5*t4,
│ t20*x5*x3,
│ t20*x5*t18,
│ t20*x5^2,
│ t20*x6*x4,
│ t20*x6*t1,
│ t20*x6*x2,
│ t20*x6*t8,
│ t20*x6*t13,
│ t20*x6*t7,
│ t20*x6*t2,
│ t20*x6*t9,
│ t20*x6*x10,
│ t20*x6*x1,
│ t20*x6*t12,
│ t20*x6*t4,
│ t20*x6*x3,
│ t20*x6*t18,
│ t20*x6*x5,
│ t20*x6^2,
│ t20*x9*x4,
│ t20*x9*t1,
│ t20*x9*x2,
│ t20*x9*t8,
│ t20*x9*t13,
│ t20*x9*t7,
│ t20*x9*t2,
│ t20*x9*t9,
│ t20*x9*x10,
│ t20*x9*x1,
│ t20*x9*t12,
│ t20*x9*t4,
│ t20*x9*x3,
│ t20*x9*t18,
│ t20*x9*x5,
│ t20*x9*x6,
│ t20*x9^2,
│ t20*t10*x4,
│ t20*t10*t1,
│ t20*t10*x2,
│ t20*t10*t8,
│ t20*t10*t13,
│ t20*t10*t7,
│ t20*t10*t2,
│ t20*t10*t9,
│ t20*t10*x10,
│ t20*t10*x1,
│ t20*t10*t12,
│ t20*t10*t4,
│ t20*t10*x3,
│ t20*t10*t18,
│ t20*t10*x5,
│ t20*t10*x6,
│ t20*t10*x9,
│ t20*t10^2,
│ t20*t14*x4,
│ t20*t14*t1,
│ t20*t14*x2,
│ t20*t14*t8,
│ t20*t14*t13,
│ t20*t14*t7,
│ t20*t14*t2,
│ t20*t14*t9,
│ t20*t14*x10,
│ t20*t14*x1,
│ t20*t14*t12,
│ t20*t14*t4,
│ t20*t14*x3,
│ t20*t14*t18,
│ t20*t14*x5,
│ t20*t14*x6,
│ t20*t14*x9,
│ t20*t14*t10,
│ t20*t14^2,
│ t20*t19*x4,
│ t20*t19*t1,
│ t20*t19*x2,
│ t20*t19*t8,
│ t20*t19*t13,
│ t20*t19*t7,
│ t20*t19*t2,
│ t20*t19*t9,
│ t20*t19*x10,
│ t20*t19*x1,
│ t20*t19*t12,
│ t20*t19*t4,
│ t20*t19*x3,
│ t20*t19*t18,
│ t20*t19*x5,
│ t20*t19*x6,
│ t20*t19*x9,
│ t20*t19*t10,
│ t20*t19*t14,
│ t20*t19^2,
│ t20^2*x4,
│ t20^2*t1,
│ t20^2*x2,
│ t20^2*t8,
│ t20^2*t13,
│ t20^2*t7,
│ t20^2*t2,
│ t20^2*t9,
│ t20^2*x10,
│ t20^2*x1,
│ t20^2*t12,
│ t20^2*t4,
│ t20^2*x3,
│ t20^2*t18,
│ t20^2*x5,
│ t20^2*x6,
│ t20^2*x9,
│ t20^2*t10,
│ t20^2*t14,
│ t20^2*t19,
│ t20^3,
│ t16*x4^2,
│ t16*t1*x4,
│ t16*t1^2,
│ t16*x2*x4,
│ t16*x2*t1,
│ t16*x2^2,
│ t16*t8*x4,
│ t16*t8*t1,
│ t16*t8*x2,
│ t16*t8^2,
│ t16*t13*x4,
│ t16*t13*t1,
│ t16*t13*x2,
│ t16*t13*t8,
│ t16*t13^2,
│ t16*t7*x4,
│ t16*t7*t1,
│ t16*t7*x2,
│ t16*t7*t8,
│ t16*t7*t13,
│ t16*t7^2,
│ t16*t2*x4,
│ t16*t2*t1,
│ t16*t2*x2,
│ t16*t2*t8,
│ t16*t2*t13,
│ t16*t2*t7,
│ t16*t2^2,
│ t16*t9*x4,
│ t16*t9*t1,
│ t16*t9*x2,
│ t16*t9*t8,
│ t16*t9*t13,
│ t16*t9*t7,
│ t16*t9*t2,
│ t16*t9^2,
│ t16*x10*x4,
│ t16*x10*t1,
│ t16*x10*x2,
│ t16*x10*t8,
│ t16*x10*t13,
│ t16*x10*t7,
│ t16*x10*t2,
│ t16*x10*t9,
│ t16*x10^2,
│ t16*x1*x4,
│ t16*x1*t1,
│ t16*x1*x2,
│ t16*x1*t8,
│ t16*x1*t13,
│ t16*x1*t7,
│ t16*x1*t2,
│ t16*x1*t9,
│ t16*x1*x10,
│ t16*x1^2,
│ t16*t12*x4,
│ t16*t12*t1,
│ t16*t12*x2,
│ t16*t12*t8,
│ t16*t12*t13,
│ t16*t12*t7,
│ t16*t12*t2,
│ t16*t12*t9,
│ t16*t12*x10,
│ t16*t12*x1,
│ t16*t12^2,
│ t16*t4*x4,
│ t16*t4*t1,
│ t16*t4*x2,
│ t16*t4*t8,
│ t16*t4*t13,
│ t16*t4*t7,
│ t16*t4*t2,
│ t16*t4*t9,
│ t16*t4*x10,
│ t16*t4*x1,
│ t16*t4*t12,
│ t16*t4^2,
│ t16*x3*x4,
│ t16*x3*t1,
│ t16*x3*x2,
│ t16*x3*t8,
│ t16*x3*t13,
│ t16*x3*t7,
│ t16*x3*t2,
│ t16*x3*t9,
│ t16*x3*x10,
│ t16*x3*x1,
│ t16*x3*t12,
│ t16*x3*t4,
│ t16*x3^2,
│ t16*t18*x4,
│ t16*t18*t1,
│ t16*t18*x2,
│ t16*t18*t8,
│ t16*t18*t13,
│ t16*t18*t7,
│ t16*t18*t2,
│ t16*t18*t9,
│ t16*t18*x10,
│ t16*t18*x1,
│ t16*t18*t12,
│ t16*t18*t4,
│ t16*t18*x3,
│ t16*t18^2,
│ t16*x5*x4,
│ t16*x5*t1,
│ t16*x5*x2,
│ t16*x5*t8,
│ t16*x5*t13,
│ t16*x5*t7,
│ t16*x5*t2,
│ t16*x5*t9,
│ t16*x5*x10,
│ t16*x5*x1,
│ t16*x5*t12,
│ t16*x5*t4,
│ t16*x5*x3,
│ t16*x5*t18,
│ t16*x5^2,
│ t16*x6*x4,
│ t16*x6*t1,
│ t16*x6*x2,
│ t16*x6*t8,
│ t16*x6*t13,
│ t16*x6*t7,
│ t16*x6*t2,
│ t16*x6*t9,
│ t16*x6*x10,
│ t16*x6*x1,
│ t16*x6*t12,
│ t16*x6*t4,
│ t16*x6*x3,
│ t16*x6*t18,
│ t16*x6*x5,
│ t16*x6^2,
│ t16*x9*x4,
│ t16*x9*t1,
│ t16*x9*x2,
│ t16*x9*t8,
│ t16*x9*t13,
│ t16*x9*t7,
│ t16*x9*t2,
│ t16*x9*t9,
│ t16*x9*x10,
│ t16*x9*x1,
│ t16*x9*t12,
│ t16*x9*t4,
│ t16*x9*x3,
│ t16*x9*t18,
│ t16*x9*x5,
│ t16*x9*x6,
│ t16*x9^2,
│ t16*t10*x4,
│ t16*t10*t1,
│ t16*t10*x2,
│ t16*t10*t8,
│ t16*t10*t13,
│ t16*t10*t7,
│ t16*t10*t2,
│ t16*t10*t9,
│ t16*t10*x10,
│ t16*t10*x1,
│ t16*t10*t12,
│ t16*t10*t4,
│ t16*t10*x3,
│ t16*t10*t18,
│ t16*t10*x5,
│ t16*t10*x6,
│ t16*t10*x9,
│ t16*t10^2,
│ t16*t14*x4,
│ t16*t14*t1,
│ t16*t14*x2,
│ t16*t14*t8,
│ t16*t14*t13,
│ t16*t14*t7,
│ t16*t14*t2,
│ t16*t14*t9,
│ t16*t14*x10,
│ t16*t14*x1,
│ t16*t14*t12,
│ t16*t14*t4,
│ t16*t14*x3,
│ t16*t14*t18,
│ t16*t14*x5,
│ t16*t14*x6,
│ t16*t14*x9,
│ t16*t14*t10,
│ t16*t14^2,
│ t16*t19*x4,
│ t16*t19*t1,
│ t16*t19*x2,
│ t16*t19*t8,
│ t16*t19*t13,
│ t16*t19*t7,
│ t16*t19*t2,
│ t16*t19*t9,
│ t16*t19*x10,
│ t16*t19*x1,
│ t16*t19*t12,
│ t16*t19*t4,
│ t16*t19*x3,
│ t16*t19*t18,
│ t16*t19*x5,
│ t16*t19*x6,
│ t16*t19*x9,
│ t16*t19*t10,
│ t16*t19*t14,
│ t16*t19^2,
│ t16*t20*x4,
│ t16*t20*t1,
│ t16*t20*x2,
│ t16*t20*t8,
│ t16*t20*t13,
│ t16*t20*t7,
│ t16*t20*t2,
│ t16*t20*t9,
│ t16*t20*x10,
│ t16*t20*x1,
│ t16*t20*t12,
│ t16*t20*t4,
│ t16*t20*x3,
│ t16*t20*t18,
│ t16*t20*x5,
│ t16*t20*x6,
│ t16*t20*x9,
│ t16*t20*t10,
│ t16*t20*t14,
│ t16*t20*t19,
│ t16*t20^2,
│ t16^2*x4,
│ t16^2*t1,
│ t16^2*x2,
│ t16^2*t8,
│ t16^2*t13,
│ t16^2*t7,
│ t16^2*t2,
│ t16^2*t9,
│ t16^2*x10,
│ t16^2*x1,
│ t16^2*t12,
│ t16^2*t4,
│ t16^2*x3,
│ t16^2*t18,
│ t16^2*x5,
│ t16^2*x6,
│ t16^2*x9,
│ t16^2*t10,
│ t16^2*t14,
│ t16^2*t19,
│ t16^2*t20,
│ t16^3,
│ x7*x4^2,
│ x7*t1*x4,
│ x7*t1^2,
│ x7*x2*x4,
│ x7*x2*t1,
│ x7*x2^2,
│ x7*t8*x4,
│ x7*t8*t1,
│ x7*t8*x2,
│ x7*t8^2,
│ x7*t13*x4,
│ x7*t13*t1,
│ x7*t13*x2,
│ x7*t13*t8,
│ x7*t13^2,
│ x7*t7*x4,
│ x7*t7*t1,
│ x7*t7*x2,
│ x7*t7*t8,
│ x7*t7*t13,
│ x7*t7^2,
│ x7*t2*x4,
│ x7*t2*t1,
│ x7*t2*x2,
│ x7*t2*t8,
│ x7*t2*t13,
│ x7*t2*t7,
│ x7*t2^2,
│ x7*t9*x4,
│ x7*t9*t1,
│ x7*t9*x2,
│ x7*t9*t8,
│ x7*t9*t13,
│ x7*t9*t7,
│ x7*t9*t2,
│ x7*t9^2,
│ x7*x10*x4,
│ x7*x10*t1,
│ x7*x10*x2,
│ x7*x10*t8,
│ x7*x10*t13,
│ x7*x10*t7,
│ x7*x10*t2,
│ x7*x10*t9,
│ x7*x10^2,
│ x7*x1*x4,
│ x7*x1*t1,
│ x7*x1*x2,
│ x7*x1*t8,
│ x7*x1*t13,
│ x7*x1*t7,
│ x7*x1*t2,
│ x7*x1*t9,
│ x7*x1*x10,
│ x7*x1^2,
│ x7*t12*x4,
│ x7*t12*t1,
│ x7*t12*x2,
│ x7*t12*t8,
│ x7*t12*t13,
│ x7*t12*t7,
│ x7*t12*t2,
│ x7*t12*t9,
│ x7*t12*x10,
│ x7*t12*x1,
│ x7*t12^2,
│ x7*t4*x4,
│ x7*t4*t1,
│ x7*t4*x2,
│ x7*t4*t8,
│ x7*t4*t13,
│ x7*t4*t7,
│ x7*t4*t2,
│ x7*t4*t9,
│ x7*t4*x10,
│ x7*t4*x1,
│ x7*t4*t12,
│ x7*t4^2,
│ x7*x3*x4,
│ x7*x3*t1,
│ x7*x3*x2,
│ x7*x3*t8,
│ x7*x3*t13,
│ x7*x3*t7,
│ x7*x3*t2,
│ x7*x3*t9,
│ x7*x3*x10,
│ x7*x3*x1,
│ x7*x3*t12,
│ x7*x3*t4,
│ x7*x3^2,
│ x7*t18*x4,
│ x7*t18*t1,
│ x7*t18*x2,
│ x7*t18*t8,
│ x7*t18*t13,
│ x7*t18*t7,
│ x7*t18*t2,
│ x7*t18*t9,
│ x7*t18*x10,
│ x7*t18*x1,
│ x7*t18*t12,
│ x7*t18*t4,
│ x7*t18*x3,
│ x7*t18^2,
│ x7*x5*x4,
│ x7*x5*t1,
│ x7*x5*x2,
│ x7*x5*t8,
│ x7*x5*t13,
│ x7*x5*t7,
│ x7*x5*t2,
│ x7*x5*t9,
│ x7*x5*x10,
│ x7*x5*x1,
│ x7*x5*t12,
│ x7*x5*t4,
│ x7*x5*x3,
│ x7*x5*t18,
│ x7*x5^2,
│ x7*x6*x4,
│ x7*x6*t1,
│ x7*x6*x2,
│ x7*x6*t8,
│ x7*x6*t13,
│ x7*x6*t7,
│ x7*x6*t2,
│ x7*x6*t9,
│ x7*x6*x10,
│ x7*x6*x1,
│ x7*x6*t12,
│ x7*x6*t4,
│ x7*x6*x3,
│ x7*x6*t18,
│ x7*x6*x5,
│ x7*x6^2,
│ x7*x9*x4,
│ x7*x9*t1,
│ x7*x9*x2,
│ x7*x9*t8,
│ x7*x9*t13,
│ x7*x9*t7,
│ x7*x9*t2,
│ x7*x9*t9,
│ x7*x9*x10,
│ x7*x9*x1,
│ x7*x9*t12,
│ x7*x9*t4,
│ x7*x9*x3,
│ x7*x9*t18,
│ x7*x9*x5,
│ x7*x9*x6,
│ x7*x9^2,
│ x7*t10*x4,
│ x7*t10*t1,
│ x7*t10*x2,
│ x7*t10*t8,
│ x7*t10*t13,
│ x7*t10*t7,
│ x7*t10*t2,
│ x7*t10*t9,
│ x7*t10*x10,
│ x7*t10*x1,
│ x7*t10*t12,
│ x7*t10*t4,
│ x7*t10*x3,
│ x7*t10*t18,
│ x7*t10*x5,
│ x7*t10*x6,
│ x7*t10*x9,
│ x7*t10^2,
│ x7*t14*x4,
│ x7*t14*t1,
│ x7*t14*x2,
│ x7*t14*t8,
│ x7*t14*t13,
│ x7*t14*t7,
│ x7*t14*t2,
│ x7*t14*t9,
│ x7*t14*x10,
│ x7*t14*x1,
│ x7*t14*t12,
│ x7*t14*t4,
│ x7*t14*x3,
│ x7*t14*t18,
│ x7*t14*x5,
│ x7*t14*x6,
│ x7*t14*x9,
│ x7*t14*t10,
│ x7*t14^2,
│ x7*t19*x4,
│ x7*t19*t1,
│ x7*t19*x2,
│ x7*t19*t8,
│ x7*t19*t13,
│ x7*t19*t7,
│ x7*t19*t2,
│ x7*t19*t9,
│ x7*t19*x10,
│ x7*t19*x1,
│ x7*t19*t12,
│ x7*t19*t4,
│ x7*t19*x3,
│ x7*t19*t18,
│ x7*t19*x5,
│ x7*t19*x6,
│ x7*t19*x9,
│ x7*t19*t10,
│ x7*t19*t14,
│ x7*t19^2,
│ x7*t20*x4,
│ x7*t20*t1,
│ x7*t20*x2,
│ x7*t20*t8,
│ x7*t20*t13,
│ x7*t20*t7,
│ x7*t20*t2,
│ x7*t20*t9,
│ x7*t20*x10,
│ x7*t20*x1,
│ x7*t20*t12,
│ x7*t20*t4,
│ x7*t20*x3,
│ x7*t20*t18,
│ x7*t20*x5,
│ x7*t20*x6,
│ x7*t20*x9,
│ x7*t20*t10,
│ x7*t20*t14,
│ x7*t20*t19,
│ x7*t20^2,
│ x7*t16*x4,
│ x7*t16*t1,
│ x7*t16*x2,
│ x7*t16*t8,
│ x7*t16*t13,
│ x7*t16*t7,
│ x7*t16*t2,
│ x7*t16*t9,
│ x7*t16*x10,
│ x7*t16*x1,
│ x7*t16*t12,
│ x7*t16*t4,
│ x7*t16*x3,
│ x7*t16*t18,
│ x7*t16*x5,
│ x7*t16*x6,
│ x7*t16*x9,
│ x7*t16*t10,
│ x7*t16*t14,
│ x7*t16*t19,
│ x7*t16*t20,
│ x7*t16^2,
│ x7^2*x4,
│ x7^2*t1,
│ x7^2*x2,
│ x7^2*t8,
│ x7^2*t13,
│ x7^2*t7,
│ x7^2*t2,
│ x7^2*t9,
│ x7^2*x10,
│ x7^2*x1,
│ x7^2*t12,
│ x7^2*t4,
│ x7^2*x3,
│ x7^2*t18,
│ x7^2*x5,
│ x7^2*x6,
│ x7^2*x9,
│ x7^2*t10,
│ x7^2*t14,
│ x7^2*t19,
│ x7^2*t20,
│ x7^2*t16,
│ x7^3,
│ t5*x4^2,
│ t5*t1*x4,
│ t5*t1^2,
│ t5*x2*x4,
│ t5*x2*t1,
│ t5*x2^2,
│ t5*t8*x4,
│ t5*t8*t1,
│ t5*t8*x2,
│ t5*t8^2,
│ t5*t13*x4,
│ t5*t13*t1,
│ t5*t13*x2,
│ t5*t13*t8,
│ t5*t13^2,
│ t5*t7*x4,
│ t5*t7*t1,
│ t5*t7*x2,
│ t5*t7*t8,
│ t5*t7*t13,
│ t5*t7^2,
│ t5*t2*x4,
│ t5*t2*t1,
│ t5*t2*x2,
│ t5*t2*t8,
│ t5*t2*t13,
│ t5*t2*t7,
│ t5*t2^2,
│ t5*t9*x4,
│ t5*t9*t1,
│ t5*t9*x2,
│ t5*t9*t8,
│ t5*t9*t13,
│ t5*t9*t7,
│ t5*t9*t2,
│ t5*t9^2,
│ t5*x10*x4,
│ t5*x10*t1,
│ t5*x10*x2,
│ t5*x10*t8,
│ t5*x10*t13,
│ t5*x10*t7,
│ t5*x10*t2,
│ t5*x10*t9,
│ t5*x10^2,
│ t5*x1*x4,
│ t5*x1*t1,
│ t5*x1*x2,
│ t5*x1*t8,
│ t5*x1*t13,
│ t5*x1*t7,
│ t5*x1*t2,
│ t5*x1*t9,
│ t5*x1*x10,
│ t5*x1^2,
│ t5*t12*x4,
│ t5*t12*t1,
│ t5*t12*x2,
│ t5*t12*t8,
│ t5*t12*t13,
│ t5*t12*t7,
│ t5*t12*t2,
│ t5*t12*t9,
│ t5*t12*x10,
│ t5*t12*x1,
│ t5*t12^2,
│ t5*t4*x4,
│ t5*t4*t1,
│ t5*t4*x2,
│ t5*t4*t8,
│ t5*t4*t13,
│ t5*t4*t7,
│ t5*t4*t2,
│ t5*t4*t9,
│ t5*t4*x10,
│ t5*t4*x1,
│ t5*t4*t12,
│ t5*t4^2,
│ t5*x3*x4,
│ t5*x3*t1,
│ t5*x3*x2,
│ t5*x3*t8,
│ t5*x3*t13,
│ t5*x3*t7,
│ t5*x3*t2,
│ t5*x3*t9,
│ t5*x3*x10,
│ t5*x3*x1,
│ t5*x3*t12,
│ t5*x3*t4,
│ t5*x3^2,
│ t5*t18*x4,
│ t5*t18*t1,
│ t5*t18*x2,
│ t5*t18*t8,
│ t5*t18*t13,
│ t5*t18*t7,
│ t5*t18*t2,
│ t5*t18*t9,
│ t5*t18*x10,
│ t5*t18*x1,
│ t5*t18*t12,
│ t5*t18*t4,
│ t5*t18*x3,
│ t5*t18^2,
│ t5*x5*x4,
│ t5*x5*t1,
│ t5*x5*x2,
│ t5*x5*t8,
│ t5*x5*t13,
│ t5*x5*t7,
│ t5*x5*t2,
│ t5*x5*t9,
│ t5*x5*x10,
│ t5*x5*x1,
│ t5*x5*t12,
│ t5*x5*t4,
│ t5*x5*x3,
│ t5*x5*t18,
│ t5*x5^2,
│ t5*x6*x4,
│ t5*x6*t1,
│ t5*x6*x2,
│ t5*x6*t8,
│ t5*x6*t13,
│ t5*x6*t7,
│ t5*x6*t2,
│ t5*x6*t9,
│ t5*x6*x10,
│ t5*x6*x1,
│ t5*x6*t12,
│ t5*x6*t4,
│ t5*x6*x3,
│ t5*x6*t18,
│ t5*x6*x5,
│ t5*x6^2,
│ t5*x9*x4,
│ t5*x9*t1,
│ t5*x9*x2,
│ t5*x9*t8,
│ t5*x9*t13,
│ t5*x9*t7,
│ t5*x9*t2,
│ t5*x9*t9,
│ t5*x9*x10,
│ t5*x9*x1,
│ t5*x9*t12,
│ t5*x9*t4,
│ t5*x9*x3,
│ t5*x9*t18,
│ t5*x9*x5,
│ t5*x9*x6,
│ t5*x9^2,
│ t5*t10*x4,
│ t5*t10*t1,
│ t5*t10*x2,
│ t5*t10*t8,
│ t5*t10*t13,
│ t5*t10*t7,
│ t5*t10*t2,
│ t5*t10*t9,
│ t5*t10*x10,
│ t5*t10*x1,
│ t5*t10*t12,
│ t5*t10*t4,
│ t5*t10*x3,
│ t5*t10*t18,
│ t5*t10*x5,
│ t5*t10*x6,
│ t5*t10*x9,
│ t5*t10^2,
│ t5*t14*x4,
│ t5*t14*t1,
│ t5*t14*x2,
│ t5*t14*t8,
│ t5*t14*t13,
│ t5*t14*t7,
│ t5*t14*t2,
│ t5*t14*t9,
│ t5*t14*x10,
│ t5*t14*x1,
│ t5*t14*t12,
│ t5*t14*t4,
│ t5*t14*x3,
│ t5*t14*t18,
│ t5*t14*x5,
│ t5*t14*x6,
│ t5*t14*x9,
│ t5*t14*t10,
│ t5*t14^2,
│ t5*t19*x4,
│ t5*t19*t1,
│ t5*t19*x2,
│ t5*t19*t8,
│ t5*t19*t13,
│ t5*t19*t7,
│ t5*t19*t2,
│ t5*t19*t9,
│ t5*t19*x10,
│ t5*t19*x1,
│ t5*t19*t12,
│ t5*t19*t4,
│ t5*t19*x3,
│ t5*t19*t18,
│ t5*t19*x5,
│ t5*t19*x6,
│ t5*t19*x9,
│ t5*t19*t10,
│ t5*t19*t14,
│ t5*t19^2,
│ t5*t20*x4,
│ t5*t20*t1,
│ t5*t20*x2,
│ t5*t20*t8,
│ t5*t20*t13,
│ t5*t20*t7,
│ t5*t20*t2,
│ t5*t20*t9,
│ t5*t20*x10,
│ t5*t20*x1,
│ t5*t20*t12,
│ t5*t20*t4,
│ t5*t20*x3,
│ t5*t20*t18,
│ t5*t20*x5,
│ t5*t20*x6,
│ t5*t20*x9,
│ t5*t20*t10,
│ t5*t20*t14,
│ t5*t20*t19,
│ t5*t20^2,
│ t5*t16*x4,
│ t5*t16*t1,
│ t5*t16*x2,
│ t5*t16*t8,
│ t5*t16*t13,
│ t5*t16*t7,
│ t5*t16*t2,
│ t5*t16*t9,
│ t5*t16*x10,
│ t5*t16*x1,
│ t5*t16*t12,
│ t5*t16*t4,
│ t5*t16*x3,
│ t5*t16*t18,
│ t5*t16*x5,
│ t5*t16*x6,
│ t5*t16*x9,
│ t5*t16*t10,
│ t5*t16*t14,
│ t5*t16*t19,
│ t5*t16*t20,
│ t5*t16^2,
│ t5*x7*x4,
│ t5*x7*t1,
│ t5*x7*x2,
│ t5*x7*t8,
│ t5*x7*t13,
│ t5*x7*t7,
│ t5*x7*t2,
│ t5*x7*t9,
│ t5*x7*x10,
│ t5*x7*x1,
│ t5*x7*t12,
│ t5*x7*t4,
│ t5*x7*x3,
│ t5*x7*t18,
│ t5*x7*x5,
│ t5*x7*x6,
│ t5*x7*x9,
│ t5*x7*t10,
│ t5*x7*t14,
│ t5*x7*t19,
│ t5*x7*t20,
│ t5*x7*t16,
│ t5*x7^2,
│ t5^2*x4,
│ t5^2*t1,
│ t5^2*x2,
│ t5^2*t8,
│ t5^2*t13,
│ t5^2*t7,
│ t5^2*t2,
│ t5^2*t9,
│ t5^2*x10,
│ t5^2*x1,
│ t5^2*t12,
│ t5^2*t4,
│ t5^2*x3,
│ t5^2*t18,
│ t5^2*x5,
│ t5^2*x6,
│ t5^2*x9,
│ t5^2*t10,
│ t5^2*t14,
│ t5^2*t19,
│ t5^2*t20,
│ t5^2*t16,
│ t5^2*x7,
│ t5^3,
│ t22*t17*x4,
│ t22*t17*t1,
│ t22*t17*x2,
│ t22*t17*t8,
│ t22*t17*t13,
│ t22*t17*t7,
│ t22*t17*t2,
│ t22*t17*t9,
│ t22*t17*x10,
│ t22*t17*x1,
│ t22*t17*t12,
│ t22*t17*t4,
│ t22*t17*x3,
│ t22*t17*t18,
│ t22*t17*x5,
│ t22*t17*x6,
│ t22*t17*x9,
│ t22*t17*t10,
│ t22*t17*t14,
│ t22*t17*t19,
│ t22*t17*t20,
│ t22*t17*t16,
│ t22*t17*x7,
│ t22*t5*t17,
│ t21*t15*x4,
│ t21*t15*t1,
│ t21*t15*x2,
│ t21*t8*t15,
│ t21*t13*t15,
│ t21*t7*t15,
│ t21*t2*t15,
│ t21*t9*t15,
│ t21*t11*x4,
│ t21*t11*t1,
│ t21*t11*x2,
│ t21*t11*t8,
│ t21*t11*t13,
│ t21*t11*t7,
│ t21*t11*t2,
│ t21*t11*t9,
│ t21*x10*t15,
│ t21*x10*t11,
│ t21*x1*t15,
│ t21*x1*t11,
│ t21*t12*t15,
│ t21*t12*t11,
│ t21*t4*t15,
│ t21*t4*t11,
│ t21*x3*t15,
│ t21*x3*t11,
│ t21*t18*t15,
│ t21*t18*t11,
│ t21*x5*t15,
│ t21*x5*t11,
│ t21*x6*t15,
│ t21*x6*t11,
│ t21*x9*t15,
│ t21*x9*t11,
│ t21*t10*t15,
│ t21*t10*t11,
│ t21*t14*t15,
│ t21*t14*t11,
│ t21*t19*t15,
│ t21*t19*t11,
│ t21*t20*t15,
│ t21*t20*t11,
│ t21*t16*t15,
│ t21*t16*t11,
│ t21*x7*t15,
│ t21*x7*t11,
│ t21*t5*t15,
│ t21*t5*t11,
│ x8*t21*x4,
│ x8*t21*t1,
│ x8*t21*x2,
│ x8*t21*t8,
│ x8*t21*t13,
│ x8*t21*t7,
│ x8*t21*t2,
│ x8*t21*t9,
│ x8*t21*x10,
│ x8*t21*x1,
│ x8*t21*t12,
│ x8*t21*t4,
│ x8*t21*x3,
│ x8*t21*t18,
│ x8*t21*x5,
│ x8*t21*x6,
│ x8*t21*x9,
│ x8*t21*t10,
│ x8*t21*t14,
│ x8*t21*t19,
│ x8*t21*t20,
│ x8*t21*t16,
│ x8*t21*x7,
│ x8*t21*t5,
│ t6*x4^2,
│ t6*t1*x4,
│ t6*t1^2,
│ t6*x2*x4,
│ t6*x2*t1,
│ t6*x2^2,
│ t6*t8*x4,
│ t6*t8*t1,
│ t6*t8*x2,
│ t6*t8^2,
│ t6*t13*x4,
│ t6*t13*t1,
│ t6*t13*x2,
│ t6*t13*t8,
│ t6*t13^2,
│ t6*t7*x4,
│ t6*t7*t1,
│ t6*t7*x2,
│ t6*t7*t8,
│ t6*t7*t13,
│ t6*t7^2,
│ t6*t2*x4,
│ t6*t2*t1,
│ t6*t2*x2,
│ t6*t2*t8,
│ t6*t2*t13,
│ t6*t2*t7,
│ t6*t2^2,
│ t6*t9*x4,
│ t6*t9*t1,
│ t6*t9*x2,
│ t6*t9*t8,
│ t6*t9*t13,
│ t6*t9*t7,
│ t6*t9*t2,
│ t6*t9^2,
│ t6*x10*x4,
│ t6*x10*t1,
│ t6*x10*x2,
│ t6*x10*t8,
│ t6*x10*t13,
│ t6*x10*t7,
│ t6*x10*t2,
│ t6*x10*t9,
│ t6*x10^2,
│ t6*x1*x4,
│ t6*x1*t1,
│ t6*x1*x2,
│ t6*x1*t8,
│ t6*x1*t13,
│ t6*x1*t7,
│ t6*x1*t2,
│ t6*x1*t9,
│ t6*x1*x10,
│ t6*x1^2,
│ t6*t12*x4,
│ t6*t12*t1,
│ t6*t12*x2,
│ t6*t12*t8,
│ t6*t12*t13,
│ t6*t12*t7,
│ t6*t12*t2,
│ t6*t12*t9,
│ t6*t12*x10,
│ t6*t12*x1,
│ t6*t12^2,
│ t6*t4*x4,
│ t6*t4*t1,
│ t6*t4*x2,
│ t6*t4*t8,
│ t6*t4*t13,
│ t6*t4*t7,
│ t6*t4*t2,
│ t6*t4*t9,
│ t6*t4*x10,
│ t6*t4*x1,
│ t6*t4*t12,
│ t6*t4^2,
│ t6*x3*x4,
│ t6*x3*t1,
│ t6*x3*x2,
│ t6*x3*t8,
│ t6*x3*t13,
│ t6*x3*t7,
│ t6*x3*t2,
│ t6*x3*t9,
│ t6*x3*x10,
│ t6*x3*x1,
│ t6*x3*t12,
│ t6*x3*t4,
│ t6*x3^2,
│ t6*t18*x4,
│ t6*t18*t1,
│ t6*t18*x2,
│ t6*t18*t8,
│ t6*t18*t13,
│ t6*t18*t7,
│ t6*t18*t2,
│ t6*t18*t9,
│ t6*t18*x10,
│ t6*t18*x1,
│ t6*t18*t12,
│ t6*t18*t4,
│ t6*t18*x3,
│ t6*t18^2,
│ t6*x5*x4,
│ t6*x5*t1,
│ t6*x5*x2,
│ t6*x5*t8,
│ t6*x5*t13,
│ t6*x5*t7,
│ t6*x5*t2,
│ t6*x5*t9,
│ t6*x5*x10,
│ t6*x5*x1,
│ t6*x5*t12,
│ t6*x5*t4,
│ t6*x5*x3,
│ t6*x5*t18,
│ t6*x5^2,
│ t6*x6*x4,
│ t6*x6*t1,
│ t6*x6*x2,
│ t6*x6*t8,
│ t6*x6*t13,
│ t6*x6*t7,
│ t6*x6*t2,
│ t6*x6*t9,
│ t6*x6*x10,
│ t6*x6*x1,
│ t6*x6*t12,
│ t6*x6*t4,
│ t6*x6*x3,
│ t6*x6*t18,
│ t6*x6*x5,
│ t6*x6^2,
│ t6*x9*x4,
│ t6*x9*t1,
│ t6*x9*x2,
│ t6*x9*t8,
│ t6*x9*t13,
│ t6*x9*t7,
│ t6*x9*t2,
│ t6*x9*t9,
│ t6*x9*x10,
│ t6*x9*x1,
│ t6*x9*t12,
│ t6*x9*t4,
│ t6*x9*x3,
│ t6*x9*t18,
│ t6*x9*x5,
│ t6*x9*x6,
│ t6*x9^2,
│ t6*t10*x4,
│ t6*t10*t1,
│ t6*t10*x2,
│ t6*t10*t8,
│ t6*t10*t13,
│ t6*t10*t7,
│ t6*t10*t2,
│ t6*t10*t9,
│ t6*t10*x10,
│ t6*t10*x1,
│ t6*t10*t12,
│ t6*t10*t4,
│ t6*t10*x3,
│ t6*t10*t18,
│ t6*t10*x5,
│ t6*t10*x6,
│ t6*t10*x9,
│ t6*t10^2,
│ t6*t14*x4,
│ t6*t14*t1,
│ t6*t14*x2,
│ t6*t14*t8,
│ t6*t14*t13,
│ t6*t14*t7,
│ t6*t14*t2,
│ t6*t14*t9,
│ t6*t14*x10,
│ t6*t14*x1,
│ t6*t14*t12,
│ t6*t14*t4,
│ t6*t14*x3,
│ t6*t14*t18,
│ t6*t14*x5,
│ t6*t14*x6,
│ t6*t14*x9,
│ t6*t14*t10,
│ t6*t14^2,
│ t6*t19*x4,
│ t6*t19*t1,
│ t6*t19*x2,
│ t6*t19*t8,
│ t6*t19*t13,
│ t6*t19*t7,
│ t6*t19*t2,
│ t6*t19*t9,
│ t6*t19*x10,
│ t6*t19*x1,
│ t6*t19*t12,
│ t6*t19*t4,
│ t6*t19*x3,
│ t6*t19*t18,
│ t6*t19*x5,
│ t6*t19*x6,
│ t6*t19*x9,
│ t6*t19*t10,
│ t6*t19*t14,
│ t6*t19^2,
│ t6*t20*x4,
│ t6*t20*t1,
│ t6*t20*x2,
│ t6*t20*t8,
│ t6*t20*t13,
│ t6*t20*t7,
│ t6*t20*t2,
│ t6*t20*t9,
│ t6*t20*x10,
│ t6*t20*x1,
│ t6*t20*t12,
│ t6*t20*t4,
│ t6*t20*x3,
│ t6*t20*t18,
│ t6*t20*x5,
│ t6*t20*x6,
│ t6*t20*x9,
│ t6*t20*t10,
│ t6*t20*t14,
│ t6*t20*t19,
│ t6*t20^2,
│ t6*t16*x4,
│ t6*t16*t1,
│ t6*t16*x2,
│ t6*t16*t8,
│ t6*t16*t13,
│ t6*t16*t7,
│ t6*t16*t2,
│ t6*t16*t9,
│ t6*t16*x10,
│ t6*t16*x1,
│ t6*t16*t12,
│ t6*t16*t4,
│ t6*t16*x3,
│ t6*t16*t18,
│ t6*t16*x5,
│ t6*t16*x6,
│ t6*t16*x9,
│ t6*t16*t10,
│ t6*t16*t14,
│ t6*t16*t19,
│ t6*t16*t20,
│ t6*t16^2,
│ t6*x7*x4,
│ t6*x7*t1,
│ t6*x7*x2,
│ t6*x7*t8,
│ t6*x7*t13,
│ t6*x7*t7,
│ t6*x7*t2,
│ t6*x7*t9,
│ t6*x7*x10,
│ t6*x7*x1,
│ t6*x7*t12,
│ t6*x7*t4,
│ t6*x7*x3,
│ t6*x7*t18,
│ t6*x7*x5,
│ t6*x7*x6,
│ t6*x7*x9,
│ t6*x7*t10,
│ t6*x7*t14,
│ t6*x7*t19,
│ t6*x7*t20,
│ t6*x7*t16,
│ t6*x7^2,
│ t6*t5*x4,
│ t6*t5*t1,
│ t6*t5*x2,
│ t6*t5*t8,
│ t6*t5*t13,
│ t6*t5*t7,
│ t6*t5*t2,
│ t6*t5*t9,
│ t6*t5*x10,
│ t6*t5*x1,
│ t6*t5*t12,
│ t6*t5*t4,
│ t6*t5*x3,
│ t6*t5*t18,
│ t6*t5*x5,
│ t6*t5*x6,
│ t6*t5*x9,
│ t6*t5*t10,
│ t6*t5*t14,
│ t6*t5*t19,
│ t6*t5*t20,
│ t6*t5*t16,
│ t6*t5*x7,
│ t6*t5^2,
│ t6*t22*t17,
│ t6*t21*t15,
│ t6*t21*t11,
│ t6*x8*t21,
│ t6^2*x4,
│ t6^2*t1,
│ t6^2*x2,
│ t6^2*t8,
│ t6^2*t13,
│ t6^2*t7,
│ t6^2*t2,
│ t6^2*t9,
│ t6^2*x10,
│ t6^2*x1,
│ t6^2*t12,
│ t6^2*t4,
│ t6^2*x3,
│ t6^2*t18,
│ t6^2*x5,
│ t6^2*x6,
│ t6^2*x9,
│ t6^2*t10,
│ t6^2*t14,
│ t6^2*t19,
│ t6^2*t20,
│ t6^2*t16,
│ t6^2*x7,
│ t6^2*t5,
│ t6^3,
│ t3*x4^2,
│ t3*t1*x4,
│ t3*t1^2,
│ t3*x2*x4,
│ t3*x2*t1,
│ t3*x2^2,
│ t3*t8*x4,
│ t3*t8*t1,
│ t3*t8*x2,
│ t3*t8^2,
│ t3*t13*x4,
│ t3*t13*t1,
│ t3*t13*x2,
│ t3*t13*t8,
│ t3*t13^2,
│ t3*t7*x4,
│ t3*t7*t1,
│ t3*t7*x2,
│ t3*t7*t8,
│ t3*t7*t13,
│ t3*t7^2,
│ t3*t2*x4,
│ t3*t2*t1,
│ t3*t2*x2,
│ t3*t2*t8,
│ t3*t2*t13,
│ t3*t2*t7,
│ t3*t2^2,
│ t3*t9*x4,
│ t3*t9*t1,
│ t3*t9*x2,
│ t3*t9*t8,
│ t3*t9*t13,
│ t3*t9*t7,
│ t3*t9*t2,
│ t3*t9^2,
│ t3*x10*x4,
│ t3*x10*t1,
│ t3*x10*x2,
│ t3*x10*t8,
│ t3*x10*t13,
│ t3*x10*t7,
│ t3*x10*t2,
│ t3*x10*t9,
│ t3*x10^2,
│ t3*x1*x4,
│ t3*x1*t1,
│ t3*x1*x2,
│ t3*x1*t8,
│ t3*x1*t13,
│ t3*x1*t7,
│ t3*x1*t2,
│ t3*x1*t9,
│ t3*x1*x10,
│ t3*x1^2,
│ t3*t12*x4,
│ t3*t12*t1,
│ t3*t12*x2,
│ t3*t12*t8,
│ t3*t12*t13,
│ t3*t12*t7,
│ t3*t12*t2,
│ t3*t12*t9,
│ t3*t12*x10,
│ t3*t12*x1,
│ t3*t12^2,
│ t3*t4*x4,
│ t3*t4*t1,
│ t3*t4*x2,
│ t3*t4*t8,
│ t3*t4*t13,
│ t3*t4*t7,
│ t3*t4*t2,
│ t3*t4*t9,
│ t3*t4*x10,
│ t3*t4*x1,
│ t3*t4*t12,
│ t3*t4^2,
│ t3*x3*x4,
│ t3*x3*t1,
│ t3*x3*x2,
│ t3*x3*t8,
│ t3*x3*t13,
│ t3*x3*t7,
│ t3*x3*t2,
│ t3*x3*t9,
│ t3*x3*x10,
│ t3*x3*x1,
│ t3*x3*t12,
│ t3*x3*t4,
│ t3*x3^2,
│ t3*t18*x4,
│ t3*t18*t1,
│ t3*t18*x2,
│ t3*t18*t8,
│ t3*t18*t13,
│ t3*t18*t7,
│ t3*t18*t2,
│ t3*t18*t9,
│ t3*t18*x10,
│ t3*t18*x1,
│ t3*t18*t12,
│ t3*t18*t4,
│ t3*t18*x3,
│ t3*t18^2,
│ t3*x5*x4,
│ t3*x5*t1,
│ t3*x5*x2,
│ t3*x5*t8,
│ t3*x5*t13,
│ t3*x5*t7,
│ t3*x5*t2,
│ t3*x5*t9,
│ t3*x5*x10,
│ t3*x5*x1,
│ t3*x5*t12,
│ t3*x5*t4,
│ t3*x5*x3,
│ t3*x5*t18,
│ t3*x5^2,
│ t3*x6*x4,
│ t3*x6*t1,
│ t3*x6*x2,
│ t3*x6*t8,
│ t3*x6*t13,
│ t3*x6*t7,
│ t3*x6*t2,
│ t3*x6*t9,
│ t3*x6*x10,
│ t3*x6*x1,
│ t3*x6*t12,
│ t3*x6*t4,
│ t3*x6*x3,
│ t3*x6*t18,
│ t3*x6*x5,
│ t3*x6^2,
│ t3*x9*x4,
│ t3*x9*t1,
│ t3*x9*x2,
│ t3*x9*t8,
│ t3*x9*t13,
│ t3*x9*t7,
│ t3*x9*t2,
│ t3*x9*t9,
│ t3*x9*x10,
│ t3*x9*x1,
│ t3*x9*t12,
│ t3*x9*t4,
│ t3*x9*x3,
│ t3*x9*t18,
│ t3*x9*x5,
│ t3*x9*x6,
│ t3*x9^2,
│ t3*t10*x4,
│ t3*t10*t1,
│ t3*t10*x2,
│ t3*t10*t8,
│ t3*t10*t13,
│ t3*t10*t7,
│ t3*t10*t2,
│ t3*t10*t9,
│ t3*t10*x10,
│ t3*t10*x1,
│ t3*t10*t12,
│ t3*t10*t4,
│ t3*t10*x3,
│ t3*t10*t18,
│ t3*t10*x5,
│ t3*t10*x6,
│ t3*t10*x9,
│ t3*t10^2,
│ t3*t14*x4,
│ t3*t14*t1,
│ t3*t14*x2,
│ t3*t14*t8,
│ t3*t14*t13,
│ t3*t14*t7,
│ t3*t14*t2,
│ t3*t14*t9,
│ t3*t14*x10,
│ t3*t14*x1,
│ t3*t14*t12,
│ t3*t14*t4,
│ t3*t14*x3,
│ t3*t14*t18,
│ t3*t14*x5,
│ t3*t14*x6,
│ t3*t14*x9,
│ t3*t14*t10,
│ t3*t14^2,
│ t3*t19*x4,
│ t3*t19*t1,
│ t3*t19*x2,
│ t3*t19*t8,
│ t3*t19*t13,
│ t3*t19*t7,
│ t3*t19*t2,
│ t3*t19*t9,
│ t3*t19*x10,
│ t3*t19*x1,
│ t3*t19*t12,
│ t3*t19*t4,
│ t3*t19*x3,
│ t3*t19*t18,
│ t3*t19*x5,
│ t3*t19*x6,
│ t3*t19*x9,
│ t3*t19*t10,
│ t3*t19*t14,
│ t3*t19^2,
│ t3*t20*x4,
│ t3*t20*t1,
│ t3*t20*x2,
│ t3*t20*t8,
│ t3*t20*t13,
│ t3*t20*t7,
│ t3*t20*t2,
│ t3*t20*t9,
│ t3*t20*x10,
│ t3*t20*x1,
│ t3*t20*t12,
│ t3*t20*t4,
│ t3*t20*x3,
│ t3*t20*t18,
│ t3*t20*x5,
│ t3*t20*x6,
│ t3*t20*x9,
│ t3*t20*t10,
│ t3*t20*t14,
│ t3*t20*t19,
│ t3*t20^2,
│ t3*t16*x4,
│ t3*t16*t1,
│ t3*t16*x2,
│ t3*t16*t8,
│ t3*t16*t13,
│ t3*t16*t7,
│ t3*t16*t2,
│ t3*t16*t9,
│ t3*t16*x10,
│ t3*t16*x1,
│ t3*t16*t12,
│ t3*t16*t4,
│ t3*t16*x3,
│ t3*t16*t18,
│ t3*t16*x5,
│ t3*t16*x6,
│ t3*t16*x9,
│ t3*t16*t10,
│ t3*t16*t14,
│ t3*t16*t19,
│ t3*t16*t20,
│ t3*t16^2,
│ t3*x7*x4,
│ t3*x7*t1,
│ t3*x7*x2,
│ t3*x7*t8,
│ t3*x7*t13,
│ t3*x7*t7,
│ t3*x7*t2,
│ t3*x7*t9,
│ t3*x7*x10,
│ t3*x7*x1,
│ t3*x7*t12,
│ t3*x7*t4,
│ t3*x7*x3,
│ t3*x7*t18,
│ t3*x7*x5,
│ t3*x7*x6,
│ t3*x7*x9,
│ t3*x7*t10,
│ t3*x7*t14,
│ t3*x7*t19,
│ t3*x7*t20,
│ t3*x7*t16,
│ t3*x7^2,
│ t3*t5*x4,
│ t3*t5*t1,
│ t3*t5*x2,
│ t3*t5*t8,
│ t3*t5*t13,
│ t3*t5*t7,
│ t3*t5*t2,
│ t3*t5*t9,
│ t3*t5*x10,
│ t3*t5*x1,
│ t3*t5*t12,
│ t3*t5*t4,
│ t3*t5*x3,
│ t3*t5*t18,
│ t3*t5*x5,
│ t3*t5*x6,
│ t3*t5*x9,
│ t3*t5*t10,
│ t3*t5*t14,
│ t3*t5*t19,
│ t3*t5*t20,
│ t3*t5*t16,
│ t3*t5*x7,
│ t3*t5^2,
│ t3*t22*t17,
│ t3*t21*t15,
│ t3*t21*t11,
│ t3*x8*t21,
│ t3*t6*x4,
│ t3*t6*t1,
│ t3*t6*x2,
│ t3*t6*t8,
│ t3*t6*t13,
│ t3*t6*t7,
│ t3*t6*t2,
│ t3*t6*t9,
│ t3*t6*x10,
│ t3*t6*x1,
│ t3*t6*t12,
│ t3*t6*t4,
│ t3*t6*x3,
│ t3*t6*t18,
│ t3*t6*x5,
│ t3*t6*x6,
│ t3*t6*x9,
│ t3*t6*t10,
│ t3*t6*t14,
│ t3*t6*t19,
│ t3*t6*t20,
│ t3*t6*t16,
│ t3*t6*x7,
│ t3*t6*t5,
│ t3*t6^2,
│ t3^2*x4,
│ t3^2*t1,
│ t3^2*x2,
│ t3^2*t8,
│ t3^2*t13,
│ t3^2*t7,
│ t3^2*t2,
│ t3^2*t9,
│ t3^2*x10,
│ t3^2*x1,
│ t3^2*t12,
│ t3^2*t4,
│ t3^2*x3,
│ t3^2*t18,
│ t3^2*x5,
│ t3^2*x6,
│ t3^2*x9,
│ t3^2*t10,
│ t3^2*t14,
│ t3^2*t19,
│ t3^2*t20,
│ t3^2*t16,
│ t3^2*x7,
│ t3^2*t5,
│ t3^2*t6,
│ t3^3,
│ t15//t11,
│ t15//t11,
│ t15//x8,
│ t15//x8,
│ t15//x8,
│ t11//t15,
│ t11//t15,
│ t11//t15,
│ t11//t15,
│ t11//t15,
│ t11//t15,
│ t11//t15,
│ t11//t15,
│ t11//x8,
│ t11//x8,
│ t11//x8,
│ x8//t15,
│ x8//t15,
│ x8//t15,
│ x8//t15,
│ x8//t15,
│ x8//t15,
│ x8//t15,
│ x8//t11,
│ x8//t11
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
┌ Info: Checking inclusion with probability 0.99
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:700
┌ Info: Inclusion checked in 4.090855623 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:703
┌ Info: Out of 1325 initial generators there are 30 indepdendent
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:708
┌ Info: The ranking of the new set of generators is 475
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:711
┌ Info: The search for identifiable functions concluded in 497.809682551 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
┌ Info: Identifiable functions are
│   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[x4, t1, x2, t8, t13, t7, t2, t9, x10, x1, t12, t4, x3, t18, x5, x6, x9, t10, t14, t19, t20, t16, x7, t5, t6, t3, t22*t17, t21*t15, t21*t11, x8*t21]
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
