⌜ # Computing specializations..  	 Time: 0:00:10[K✓ # Computing specializations..  	 Time: 0:00:11[K
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  13[K[K[A✓ # Computing specializations.. 	 Time: 0:00:02[K
┌ Info: Processing Pharm
└ @ Main /home/ademin/SI2/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
┌ Info: Averaging over 1 runs.
│ Using keyword arguments:
│ NamedTuple{(:strategy,), Tuple{Tuple{Symbol, Int64}}}
│ (strategy = (:normalforms, 3),)
│ ID: (:normalforms, 3)
└ @ Main /home/ademin/SI2/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
┌ Info: Computing IO-equations
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
┌ Info: IO-equations computed in 9.993481974 seconds
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
⌜ # Computing specializations..  	 Time: 0:00:06[K✓ # Computing specializations..  	 Time: 0:00:06[K
⌜ # Computing specializations..  	 Time: 0:00:00[K⌝ # Computing specializations..  	 Time: 0:00:00[K⌟ # Computing specializations..  	 Time: 0:00:01[K⌞ # Computing specializations..  	 Time: 0:00:01[K⌜ # Computing specializations..  	 Time: 0:00:01[K⌝ # Computing specializations..  	 Time: 0:00:01[K⌟ # Computing specializations..  	 Time: 0:00:02[K⌞ # Computing specializations..  	 Time: 0:00:02[K⌜ # Computing specializations..  	 Time: 0:00:03[K⌝ # Computing specializations..  	 Time: 0:00:03[K⌟ # Computing specializations..  	 Time: 0:00:03[K⌞ # Computing specializations..  	 Time: 0:00:04[K⌜ # Computing specializations..  	 Time: 0:00:04[K⌝ # Computing specializations..  	 Time: 0:00:05[K✓ # Computing specializations..  	 Time: 0:00:05[K
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  4[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  6[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  8[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  10[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  12[K[K[A✓ # Computing specializations.. 	 Time: 0:00:01[K
┌ Info: Simplifying identifiable functions
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:543
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 3536 functions in Rational Field(a2, ka, n, b2, kc, b1, a1)[y1, y2, y3, y4, y5, y6, y7, t]
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 34 points used.
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (0, 6)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 1, Denominator: 3
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 12 points used.
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 1 for num. and 0 for den.
│     Maximal number of interpolated terms are: 1 for num. and 1 for den.
│     
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/ademin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 15.626826255 seconds
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:355
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:360
┌ Info: Inclusion checked in 6.214050366 seconds. Result: true
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:370
┌ Info: The coefficients of the Groebner basis are presented by 8 rational functions
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:374
┌ Info: The pool of fractions:
│ -a1,
│ -b1,
│ -kc,
│ -b2,
│ -n,
│ -ka,
│ -a2
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:225
┌ Info: Computing normal forms of monomials in 7 variables up to degree 3
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:456
┌ Info: Reducing the normal forms over QQ of 119 monomials
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:469
┌ Info: Generators from normal forms
│   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[]
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:472
┌ Info: Final cleaning and simplification of generators
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:595
┌ Info: The pool of fractions:
│ a1,
│ b1,
│ kc,
│ b2,
│ n,
│ ka,
│ a2
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:225
┌ Info: Checking inclusion with probability 0.99
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:598
┌ Info: Inclusion checked in 24.405546277 seconds. Result: true
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:602
┌ Info: Out of 3535 initial generators there are 7 indepdendent
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:607
┌ Info: The search for identifiable functions concluded in 61.251168335 seconds
└ @ StructuralIdentifiability /home/ademin/SI2/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
┌ Info: Identifiable functions are
│   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[a1, b1, kc, b2, n, ka, a2]
└ @ Main /home/ademin/SI2/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
