⌜ # Computing specializations..  	 Time: 0:00:13[K✓ # Computing specializations..  	 Time: 0:00:14[K
⌜ # Computing specializations..  	 Time: 0:00:01[K✓ # Computing specializations..  	 Time: 0:00:01[K
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[A✓ # Computing specializations.. 	 Time: 0:00:03[K
┌ Info: Processing SEAIJRC Covid model
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
┌ Info: Averaging over 1 runs.
│ Using keyword arguments:
│ NamedTuple{(:strategy, :with_states), Tuple{Tuple{Symbol, Int64}, Bool}}
│ (strategy = (:normalforms, 2), with_states = true)
│ ID: (:normalforms, 2)_with_states
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
┌ Info: Computing IO-equations
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
┌ Info: IO-equations computed in 56.987012235 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
⌜ # Computing specializations..  	 Time: 0:00:13[K✓ # Computing specializations..  	 Time: 0:00:14[K
⌜ # Computing specializations..  	 Time: 0:00:01[K⌝ # Computing specializations..  	 Time: 0:00:01[K⌟ # Computing specializations..  	 Time: 0:00:02[K⌞ # Computing specializations..  	 Time: 0:00:03[K⌜ # Computing specializations..  	 Time: 0:00:03[K⌝ # Computing specializations..  	 Time: 0:00:04[K⌟ # Computing specializations..  	 Time: 0:00:04[K⌞ # Computing specializations..  	 Time: 0:00:05[K⌜ # Computing specializations..  	 Time: 0:00:05[K⌝ # Computing specializations..  	 Time: 0:00:06[K⌟ # Computing specializations..  	 Time: 0:00:07[K⌞ # Computing specializations..  	 Time: 0:00:08[K⌜ # Computing specializations..  	 Time: 0:00:09[K⌝ # Computing specializations..  	 Time: 0:00:09[K⌟ # Computing specializations..  	 Time: 0:00:10[K⌞ # Computing specializations..  	 Time: 0:00:11[K⌜ # Computing specializations..  	 Time: 0:00:12[K⌝ # Computing specializations..  	 Time: 0:00:13[K⌟ # Computing specializations..  	 Time: 0:00:14[K⌞ # Computing specializations..  	 Time: 0:00:14[K⌜ # Computing specializations..  	 Time: 0:00:15[K⌝ # Computing specializations..  	 Time: 0:00:15[K⌟ # Computing specializations..  	 Time: 0:00:16[K⌞ # Computing specializations..  	 Time: 0:00:16[K⌜ # Computing specializations..  	 Time: 0:00:17[K⌝ # Computing specializations..  	 Time: 0:00:17[K⌟ # Computing specializations..  	 Time: 0:00:17[K⌞ # Computing specializations..  	 Time: 0:00:18[K⌜ # Computing specializations..  	 Time: 0:00:18[K⌝ # Computing specializations..  	 Time: 0:00:19[K⌟ # Computing specializations..  	 Time: 0:00:20[K⌞ # Computing specializations..  	 Time: 0:00:20[K⌜ # Computing specializations..  	 Time: 0:00:21[K⌝ # Computing specializations..  	 Time: 0:00:21[K⌟ # Computing specializations..  	 Time: 0:00:21[K⌞ # Computing specializations..  	 Time: 0:00:22[K⌜ # Computing specializations..  	 Time: 0:00:22[K⌝ # Computing specializations..  	 Time: 0:00:23[K⌟ # Computing specializations..  	 Time: 0:00:23[K⌞ # Computing specializations..  	 Time: 0:00:24[K⌜ # Computing specializations..  	 Time: 0:00:24[K⌝ # Computing specializations..  	 Time: 0:00:25[K⌟ # Computing specializations..  	 Time: 0:00:25[K⌞ # Computing specializations..  	 Time: 0:00:26[K⌜ # Computing specializations..  	 Time: 0:00:26[K⌝ # Computing specializations..  	 Time: 0:00:27[K⌟ # Computing specializations..  	 Time: 0:00:28[K⌞ # Computing specializations..  	 Time: 0:00:28[K⌜ # Computing specializations..  	 Time: 0:00:28[K⌝ # Computing specializations..  	 Time: 0:00:29[K⌟ # Computing specializations..  	 Time: 0:00:29[K⌞ # Computing specializations..  	 Time: 0:00:30[K⌜ # Computing specializations..  	 Time: 0:00:30[K⌝ # Computing specializations..  	 Time: 0:00:31[K⌟ # Computing specializations..  	 Time: 0:00:32[K⌞ # Computing specializations..  	 Time: 0:00:32[K⌜ # Computing specializations..  	 Time: 0:00:32[K⌝ # Computing specializations..  	 Time: 0:00:33[K⌟ # Computing specializations..  	 Time: 0:00:34[K⌞ # Computing specializations..  	 Time: 0:00:35[K⌜ # Computing specializations..  	 Time: 0:00:35[K⌝ # Computing specializations..  	 Time: 0:00:36[K⌟ # Computing specializations..  	 Time: 0:00:37[K⌞ # Computing specializations..  	 Time: 0:00:41[K⌜ # Computing specializations..  	 Time: 0:00:41[K✓ # Computing specializations..  	 Time: 0:00:41[K
⌜ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  2[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  3[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  4[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  5[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:03[K
  Points:  6[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:04[K
  Points:  7[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:05[K
  Points:  8[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:06[K
  Points:  9[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:06[K
  Points:  10[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:07[K
  Points:  11[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:08[K
  Points:  12[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:09[K
  Points:  13[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:09[K
  Points:  14[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:10[K
  Points:  15[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:11[K
  Points:  16[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:12[K
  Points:  17[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:12[K
  Points:  18[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:12[K
  Points:  19[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:13[K
  Points:  20[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:14[K
  Points:  21[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:14[K
  Points:  22[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:15[K
  Points:  23[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:15[K
  Points:  24[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:16[K
  Points:  25[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:16[K
  Points:  26[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:17[K
  Points:  27[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:17[K
  Points:  28[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:18[K
  Points:  29[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:18[K
  Points:  30[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:19[K
  Points:  31[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:19[K
  Points:  32[K[K[A✓ # Computing specializations.. 	 Time: 0:00:19[K
┌ Info: Simplifying identifiable functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:644
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 1473 functions in Rational Field(alpha, b, g2, S, Ninv, E, A, k, g1, r, q, I, J, y, y2, C)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15, y16, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
┌ Info: Success! 66 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 1), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 1), (2, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 1), (0, 0)], [(0, 0), (2, 0)], [(0, 0), (2, 1), (2, 1)], [(0, 0), (8, 2), (9, 4), (2, 1), (5, 4), (4, 2)], [(0, 0), (1, 5), (4, 2), (2, 1), (5, 8), (2, 5), (4, 6)], [(0, 0), (0, 0), (1, 2), (1, 6), (2, 7), (1, 5)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
┌ Info: Interpolating for degrees:
│ Numerator: 3, Denominator: 3
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
┌ Info: Success! 32 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 2 for num. and 2 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
┌ Info: Groebner basis computed in 80.96994634 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
┌ Info: Inclusion checked in 19.208370968 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
┌ Info: The coefficients of the Groebner basis are presented by 22 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
┌ Info: The pool of fractions:
│ -C,
│ -J,
│ -I,
│ -g1,
│ -k,
│ -Ninv,
│ -g2,
│ -b,
│ -alpha,
│ -A*q,
│ -E*r,
│ -S*r,
│ r//(r*q - q),
│ (r*q - q)//r,
│ (-r*q + q)//r,
│ (-A*r)//(r - 1),
│ (-3*A*r)//(r - 1),
│ (A*r)//(r - 1),
│ (E*r - E)//A,
│ (S*r - S)//A
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
┌ Info: Computing normal forms of monomials in 16 variables up to degree 2
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:554
┌ Info: Reducing the normal forms of 152 monomials over QQ
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:570
┌ Info: Generators from normal forms
│   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[alpha, b, g2, Ninv, k, g1, I, J, C, alpha^2, alpha*b, alpha*g2, alpha*Ninv, alpha*k, alpha*g1, alpha*I, alpha*J, alpha*C, b^2, b*g2, b*Ninv, b*k, b*g1, b*I, b*J, b*C, g2^2, g2*Ninv, g2*k, g2*g1, g2*I, g2*J, g2*C, S*r, Ninv^2, Ninv*k, Ninv*g1, Ninv*I, Ninv*J, Ninv*C, E*r, A*q, k^2, k*g1, k*I, k*J, k*C, g1^2, g1*I, g1*J, g1*C, I^2, I*J, I*C, J^2, J*C, C^2]
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:573
┌ Info: Final cleaning and simplification of generators
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:697
┌ Info: The pool of fractions:
│ C,
│ C,
│ J,
│ J,
│ I,
│ I,
│ g1,
│ g1,
│ k,
│ k,
│ Ninv,
│ Ninv,
│ g2,
│ g2,
│ b,
│ b,
│ alpha,
│ alpha,
│ C^2,
│ J*C,
│ J^2,
│ I*C,
│ I*J,
│ I^2,
│ g1*C,
│ g1*J,
│ g1*I,
│ g1^2,
│ k*C,
│ k*J,
│ k*I,
│ k*g1,
│ k^2,
│ A*q,
│ A*q,
│ E*r,
│ E*r,
│ Ninv*C,
│ Ninv*J,
│ Ninv*I,
│ Ninv*g1,
│ Ninv*k,
│ Ninv^2,
│ S*r,
│ S*r,
│ g2*C,
│ g2*J,
│ g2*I,
│ g2*g1,
│ g2*k,
│ g2*Ninv,
│ g2^2,
│ b*C,
│ b*J,
│ b*I,
│ b*g1,
│ b*k,
│ b*Ninv,
│ b*g2,
│ b^2,
│ alpha*C,
│ alpha*J,
│ alpha*I,
│ alpha*g1,
│ alpha*k,
│ alpha*Ninv,
│ alpha*g2,
│ alpha*b,
│ alpha^2,
│ r//(r*q - q)
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
┌ Info: Checking inclusion with probability 0.99
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:700
┌ Info: Inclusion checked in 80.674552758 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:703
┌ Info: Out of 1472 initial generators there are 13 indepdendent
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:708
┌ Info: The ranking of the new set of generators is 1829
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:711
┌ Info: The search for identifiable functions concluded in 249.885323215 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
┌ Info: Identifiable functions are
│   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[C, J, I, g1, k, Ninv, g2, b, alpha, A*q, E*r, S*r, r//(r*q - q)]
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
