âŒœ # Computing specializations..  	 Time: 0:00:16[Kâœ“ # Computing specializations..  	 Time: 0:00:17[K
âŒœ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  2[K[K[Aâœ“ # Computing specializations.. 	 Time: 0:00:04[K
â”Œ Info: Processing Chemical reaction network
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
â”Œ Info: Averaging over 1 runs.
â”‚ Using keyword arguments:
â”‚ NamedTuple{(:strategy, :with_states), Tuple{Tuple{Symbol, Int64}, Bool}}
â”‚ (strategy = (:normalforms, 3), with_states = true)
â”‚ ID: (:normalforms, 3)_with_states
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
â”Œ Info: Computing IO-equations
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
â”Œ Info: IO-equations computed in 4.217675747 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
â”Œ Info: Simplifying identifiable functions
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:644
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”‚ Assess correctness: false
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
â”Œ Info: Given 81 functions in Rational Field(k5, k3, k4, k2, k6, x6, x5, x3, k1, x1, y1, x2, x4, y2)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, t]
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
â”Œ Info: Specializing at 3 points to guess the shape of the basis..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
â”Œ Info: Specializing at random points to guess the total degrees in parameters..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
â”Œ Info: Success! 18 points used.
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
â”Œ Info: The total degrees in the coefficients
â”‚   state.param_degrees = [[(0, 0), (0, 2)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)]]
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
â”Œ Info: Interpolating the exponents in parameters..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
â”Œ Info: Interpolating for degrees:
â”‚ Numerator: 1, Denominator: 2
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
â”Œ Info: Success! 20 points used.
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
â”Œ Info: Basis exponents summary:
â”‚     Maximal interpolated degrees are: 1 for num. and 2 for den.
â”‚     Maximal number of interpolated terms are: 1 for num. and 2 for den.
â”‚     
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
â”Œ Info: Recovering the coefficients..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
â”Œ Info: Groebner basis computed in 1.70059169 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
â”Œ Info: Checking two-sided inclusion modulo a prime
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
â”Œ Info: Inclusion checked in 0.014328012 seconds. Result: true
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
â”Œ Info: The coefficients of the Groebner basis are presented by 14 rational functions
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
â”Œ Info: The pool of fractions:
â”‚ -1//(k5*k3 + k5*k2),
â”‚ -x4,
â”‚ -x2,
â”‚ -x1,
â”‚ -k1,
â”‚ -x3,
â”‚ -x5,
â”‚ -x6,
â”‚ -k6,
â”‚ -k2,
â”‚ -k4,
â”‚ -k3,
â”‚ -k5
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
â”Œ Info: Computing normal forms of monomials in 14 variables up to degree 3
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:554
â”Œ Info: Reducing the normal forms of 679 monomials over QQ
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:570
â”Œ Info: Generators from normal forms
â”‚   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[k5, k3, k4, k2, k6, x6, x5, x3, k1, x1, x2, x4, k5^2, k5*k3, k5*k4, k5*k2, k5*k6, k5*x6, k5*x5, k5*x3, k5*k1, k5*x1, k5*x2, k5*x4, k3^2, k3*k4, k3*k2, k3*k6, k3*x6, k3*x5, k3*x3, k3*k1, k3*x1, k3*x2, k3*x4, k4^2, k4*k2, k4*k6, k4*x6, k4*x5, k4*x3, k4*k1, k4*x1, k4*x2, k4*x4, k2^2, k2*k6, k2*x6, k2*x5, k2*x3, k2*k1, k2*x1, k2*x2, k2*x4, k6^2, k6*x6, k6*x5, k6*x3, k6*k1, k6*x1, k6*x2, k6*x4, x6^2, x6*x5, x6*x3, x6*k1, x6*x1, x6*x2, x6*x4, x5^2, x5*x3, x5*k1, x5*x1, x5*x2, x5*x4, x3^2, x3*k1, x3*x1, x3*x2, x3*x4, k1^2, k1*x1, k1*x2, k1*x4, x1^2, x1*x2, x1*x4, x2^2, x2*x4, x4^2, k5^3, k5^2*k3, k5^2*k4, k5^2*k2, k5^2*k6, k5^2*x6, k5^2*x5, k5^2*x3, k5^2*k1, k5^2*x1, k5^2*x2, k5^2*x4, k5*k3^2, k5*k3*k4, k5*k3*k2, k5*k3*k6, k5*k3*x6, k5*k3*x5, k5*k3*x3, k5*k3*k1, k5*k3*x1, k5*k3*x2, k5*k3*x4, k5*k4^2, k5*k4*k2, k5*k4*k6, k5*k4*x6, k5*k4*x5, k5*k4*x3, k5*k4*k1, k5*k4*x1, k5*k4*x2, k5*k4*x4, k5*k2^2, k5*k2*k6, k5*k2*x6, k5*k2*x5, k5*k2*x3, k5*k2*k1, k5*k2*x1, k5*k2*x2, k5*k2*x4, k5*k6^2, k5*k6*x6, k5*k6*x5, k5*k6*x3, k5*k6*k1, k5*k6*x1, k5*k6*x2, k5*k6*x4, k5*x6^2, k5*x6*x5, k5*x6*x3, k5*x6*k1, k5*x6*x1, k5*x6*x2, k5*x6*x4, k5*x5^2, k5*x5*x3, k5*x5*k1, k5*x5*x1, k5*x5*x2, k5*x5*x4, k5*x3^2, k5*x3*k1, k5*x3*x1, k5*x3*x2, k5*x3*x4, k5*k1^2, k5*k1*x1, k5*k1*x2, k5*k1*x4, k5*x1^2, k5*x1*x2, k5*x1*x4, k5*x2^2, k5*x2*x4, k5*x4^2, k3^3, k3^2*k4, k3^2*k2, k3^2*k6, k3^2*x6, k3^2*x5, k3^2*x3, k3^2*k1, k3^2*x1, k3^2*x2, k3^2*x4, k3*k4^2, k3*k4*k2, k3*k4*k6, k3*k4*x6, k3*k4*x5, k3*k4*x3, k3*k4*k1, k3*k4*x1, k3*k4*x2, k3*k4*x4, k3*k2^2, k3*k2*k6, k3*k2*x6, k3*k2*x5, k3*k2*x3, k3*k2*k1, k3*k2*x1, k3*k2*x2, k3*k2*x4, k3*k6^2, k3*k6*x6, k3*k6*x5, k3*k6*x3, k3*k6*k1, k3*k6*x1, k3*k6*x2, k3*k6*x4, k3*x6^2, k3*x6*x5, k3*x6*x3, k3*x6*k1, k3*x6*x1, k3*x6*x2, k3*x6*x4, k3*x5^2, k3*x5*x3, k3*x5*k1, k3*x5*x1, k3*x5*x2, k3*x5*x4, k3*x3^2, k3*x3*k1, k3*x3*x1, k3*x3*x2, k3*x3*x4, k3*k1^2, k3*k1*x1, k3*k1*x2, k3*k1*x4, k3*x1^2, k3*x1*x2, k3*x1*x4, k3*x2^2, k3*x2*x4, k3*x4^2, k4^3, k4^2*k2, k4^2*k6, k4^2*x6, k4^2*x5, k4^2*x3, k4^2*k1, k4^2*x1, k4^2*x2, k4^2*x4, k4*k2^2, k4*k2*k6, k4*k2*x6, k4*k2*x5, k4*k2*x3, k4*k2*k1, k4*k2*x1, k4*k2*x2, k4*k2*x4, k4*k6^2, k4*k6*x6, k4*k6*x5, k4*k6*x3, k4*k6*k1, k4*k6*x1, k4*k6*x2, k4*k6*x4, k4*x6^2, k4*x6*x5, k4*x6*x3, k4*x6*k1, k4*x6*x1, k4*x6*x2, k4*x6*x4, k4*x5^2, k4*x5*x3, k4*x5*k1, k4*x5*x1, k4*x5*x2, k4*x5*x4, k4*x3^2, k4*x3*k1, k4*x3*x1, k4*x3*x2, k4*x3*x4, k4*k1^2, k4*k1*x1, k4*k1*x2, k4*k1*x4, k4*x1^2, k4*x1*x2, k4*x1*x4, k4*x2^2, k4*x2*x4, k4*x4^2, k2^3, k2^2*k6, k2^2*x6, k2^2*x5, k2^2*x3, k2^2*k1, k2^2*x1, k2^2*x2, k2^2*x4, k2*k6^2, k2*k6*x6, k2*k6*x5, k2*k6*x3, k2*k6*k1, k2*k6*x1, k2*k6*x2, k2*k6*x4, k2*x6^2, k2*x6*x5, k2*x6*x3, k2*x6*k1, k2*x6*x1, k2*x6*x2, k2*x6*x4, k2*x5^2, k2*x5*x3, k2*x5*k1, k2*x5*x1, k2*x5*x2, k2*x5*x4, k2*x3^2, k2*x3*k1, k2*x3*x1, k2*x3*x2, k2*x3*x4, k2*k1^2, k2*k1*x1, k2*k1*x2, k2*k1*x4, k2*x1^2, k2*x1*x2, k2*x1*x4, k2*x2^2, k2*x2*x4, k2*x4^2, k6^3, k6^2*x6, k6^2*x5, k6^2*x3, k6^2*k1, k6^2*x1, k6^2*x2, k6^2*x4, k6*x6^2, k6*x6*x5, k6*x6*x3, k6*x6*k1, k6*x6*x1, k6*x6*x2, k6*x6*x4, k6*x5^2, k6*x5*x3, k6*x5*k1, k6*x5*x1, k6*x5*x2, k6*x5*x4, k6*x3^2, k6*x3*k1, k6*x3*x1, k6*x3*x2, k6*x3*x4, k6*k1^2, k6*k1*x1, k6*k1*x2, k6*k1*x4, k6*x1^2, k6*x1*x2, k6*x1*x4, k6*x2^2, k6*x2*x4, k6*x4^2, x6^3, x6^2*x5, x6^2*x3, x6^2*k1, x6^2*x1, x6^2*x2, x6^2*x4, x6*x5^2, x6*x5*x3, x6*x5*k1, x6*x5*x1, x6*x5*x2, x6*x5*x4, x6*x3^2, x6*x3*k1, x6*x3*x1, x6*x3*x2, x6*x3*x4, x6*k1^2, x6*k1*x1, x6*k1*x2, x6*k1*x4, x6*x1^2, x6*x1*x2, x6*x1*x4, x6*x2^2, x6*x2*x4, x6*x4^2, x5^3, x5^2*x3, x5^2*k1, x5^2*x1, x5^2*x2, x5^2*x4, x5*x3^2, x5*x3*k1, x5*x3*x1, x5*x3*x2, x5*x3*x4, x5*k1^2, x5*k1*x1, x5*k1*x2, x5*k1*x4, x5*x1^2, x5*x1*x2, x5*x1*x4, x5*x2^2, x5*x2*x4, x5*x4^2, x3^3, x3^2*k1, x3^2*x1, x3^2*x2, x3^2*x4, x3*k1^2, x3*k1*x1, x3*k1*x2, x3*k1*x4, x3*x1^2, x3*x1*x2, x3*x1*x4, x3*x2^2, x3*x2*x4, x3*x4^2, k1^3, k1^2*x1, k1^2*x2, k1^2*x4, k1*x1^2, k1*x1*x2, k1*x1*x4, k1*x2^2, k1*x2*x4, k1*x4^2, x1^3, x1^2*x2, x1^2*x4, x1*x2^2, x1*x2*x4, x1*x4^2, x2^3, x2^2*x4, x2*x4^2, x4^3]
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:573
â”Œ Info: Final cleaning and simplification of generators
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:697
â”Œ Info: The pool of fractions:
â”‚ x4,
â”‚ x4,
â”‚ x2,
â”‚ x2,
â”‚ x1,
â”‚ x1,
â”‚ k1,
â”‚ k1,
â”‚ x3,
â”‚ x3,
â”‚ x5,
â”‚ x5,
â”‚ x6,
â”‚ x6,
â”‚ k6,
â”‚ k6,
â”‚ k2,
â”‚ k2,
â”‚ k4,
â”‚ k4,
â”‚ k3,
â”‚ k3,
â”‚ k5,
â”‚ x4^2,
â”‚ x2*x4,
â”‚ x2^2,
â”‚ x1*x4,
â”‚ x1*x2,
â”‚ x1^2,
â”‚ k1*x4,
â”‚ k1*x2,
â”‚ k1*x1,
â”‚ k1^2,
â”‚ x3*x4,
â”‚ x3*x2,
â”‚ x3*x1,
â”‚ x3*k1,
â”‚ x3^2,
â”‚ x5*x4,
â”‚ x5*x2,
â”‚ x5*x1,
â”‚ x5*k1,
â”‚ x5*x3,
â”‚ x5^2,
â”‚ x6*x4,
â”‚ x6*x2,
â”‚ x6*x1,
â”‚ x6*k1,
â”‚ x6*x3,
â”‚ x6*x5,
â”‚ x6^2,
â”‚ k6*x4,
â”‚ k6*x2,
â”‚ k6*x1,
â”‚ k6*k1,
â”‚ k6*x3,
â”‚ k6*x5,
â”‚ k6*x6,
â”‚ k6^2,
â”‚ k2*x4,
â”‚ k2*x2,
â”‚ k2*x1,
â”‚ k2*k1,
â”‚ k2*x3,
â”‚ k2*x5,
â”‚ k2*x6,
â”‚ k2*k6,
â”‚ k2^2,
â”‚ k4*x4,
â”‚ k4*x2,
â”‚ k4*x1,
â”‚ k4*k1,
â”‚ k4*x3,
â”‚ k4*x5,
â”‚ k4*x6,
â”‚ k4*k6,
â”‚ k4*k2,
â”‚ k4^2,
â”‚ k3*x4,
â”‚ k3*x2,
â”‚ k3*x1,
â”‚ k3*k1,
â”‚ k3*x3,
â”‚ k3*x5,
â”‚ k3*x6,
â”‚ k3*k6,
â”‚ k3*k2,
â”‚ k3*k4,
â”‚ k3^2,
â”‚ k5*x4,
â”‚ k5*x2,
â”‚ k5*x1,
â”‚ k5*k1,
â”‚ k5*x3,
â”‚ k5*x5,
â”‚ k5*x6,
â”‚ k5*k6,
â”‚ k5*k2,
â”‚ k5*k4,
â”‚ k5*k3,
â”‚ k5^2,
â”‚ x4^3,
â”‚ x2*x4^2,
â”‚ x2^2*x4,
â”‚ x2^3,
â”‚ x1*x4^2,
â”‚ x1*x2*x4,
â”‚ x1*x2^2,
â”‚ x1^2*x4,
â”‚ x1^2*x2,
â”‚ x1^3,
â”‚ k1*x4^2,
â”‚ k1*x2*x4,
â”‚ k1*x2^2,
â”‚ k1*x1*x4,
â”‚ k1*x1*x2,
â”‚ k1*x1^2,
â”‚ k1^2*x4,
â”‚ k1^2*x2,
â”‚ k1^2*x1,
â”‚ k1^3,
â”‚ x3*x4^2,
â”‚ x3*x2*x4,
â”‚ x3*x2^2,
â”‚ x3*x1*x4,
â”‚ x3*x1*x2,
â”‚ x3*x1^2,
â”‚ x3*k1*x4,
â”‚ x3*k1*x2,
â”‚ x3*k1*x1,
â”‚ x3*k1^2,
â”‚ x3^2*x4,
â”‚ x3^2*x2,
â”‚ x3^2*x1,
â”‚ x3^2*k1,
â”‚ x3^3,
â”‚ x5*x4^2,
â”‚ x5*x2*x4,
â”‚ x5*x2^2,
â”‚ x5*x1*x4,
â”‚ x5*x1*x2,
â”‚ x5*x1^2,
â”‚ x5*k1*x4,
â”‚ x5*k1*x2,
â”‚ x5*k1*x1,
â”‚ x5*k1^2,
â”‚ x5*x3*x4,
â”‚ x5*x3*x2,
â”‚ x5*x3*x1,
â”‚ x5*x3*k1,
â”‚ x5*x3^2,
â”‚ x5^2*x4,
â”‚ x5^2*x2,
â”‚ x5^2*x1,
â”‚ x5^2*k1,
â”‚ x5^2*x3,
â”‚ x5^3,
â”‚ x6*x4^2,
â”‚ x6*x2*x4,
â”‚ x6*x2^2,
â”‚ x6*x1*x4,
â”‚ x6*x1*x2,
â”‚ x6*x1^2,
â”‚ x6*k1*x4,
â”‚ x6*k1*x2,
â”‚ x6*k1*x1,
â”‚ x6*k1^2,
â”‚ x6*x3*x4,
â”‚ x6*x3*x2,
â”‚ x6*x3*x1,
â”‚ x6*x3*k1,
â”‚ x6*x3^2,
â”‚ x6*x5*x4,
â”‚ x6*x5*x2,
â”‚ x6*x5*x1,
â”‚ x6*x5*k1,
â”‚ x6*x5*x3,
â”‚ x6*x5^2,
â”‚ x6^2*x4,
â”‚ x6^2*x2,
â”‚ x6^2*x1,
â”‚ x6^2*k1,
â”‚ x6^2*x3,
â”‚ x6^2*x5,
â”‚ x6^3,
â”‚ k6*x4^2,
â”‚ k6*x2*x4,
â”‚ k6*x2^2,
â”‚ k6*x1*x4,
â”‚ k6*x1*x2,
â”‚ k6*x1^2,
â”‚ k6*k1*x4,
â”‚ k6*k1*x2,
â”‚ k6*k1*x1,
â”‚ k6*k1^2,
â”‚ k6*x3*x4,
â”‚ k6*x3*x2,
â”‚ k6*x3*x1,
â”‚ k6*x3*k1,
â”‚ k6*x3^2,
â”‚ k6*x5*x4,
â”‚ k6*x5*x2,
â”‚ k6*x5*x1,
â”‚ k6*x5*k1,
â”‚ k6*x5*x3,
â”‚ k6*x5^2,
â”‚ k6*x6*x4,
â”‚ k6*x6*x2,
â”‚ k6*x6*x1,
â”‚ k6*x6*k1,
â”‚ k6*x6*x3,
â”‚ k6*x6*x5,
â”‚ k6*x6^2,
â”‚ k6^2*x4,
â”‚ k6^2*x2,
â”‚ k6^2*x1,
â”‚ k6^2*k1,
â”‚ k6^2*x3,
â”‚ k6^2*x5,
â”‚ k6^2*x6,
â”‚ k6^3,
â”‚ k2*x4^2,
â”‚ k2*x2*x4,
â”‚ k2*x2^2,
â”‚ k2*x1*x4,
â”‚ k2*x1*x2,
â”‚ k2*x1^2,
â”‚ k2*k1*x4,
â”‚ k2*k1*x2,
â”‚ k2*k1*x1,
â”‚ k2*k1^2,
â”‚ k2*x3*x4,
â”‚ k2*x3*x2,
â”‚ k2*x3*x1,
â”‚ k2*x3*k1,
â”‚ k2*x3^2,
â”‚ k2*x5*x4,
â”‚ k2*x5*x2,
â”‚ k2*x5*x1,
â”‚ k2*x5*k1,
â”‚ k2*x5*x3,
â”‚ k2*x5^2,
â”‚ k2*x6*x4,
â”‚ k2*x6*x2,
â”‚ k2*x6*x1,
â”‚ k2*x6*k1,
â”‚ k2*x6*x3,
â”‚ k2*x6*x5,
â”‚ k2*x6^2,
â”‚ k2*k6*x4,
â”‚ k2*k6*x2,
â”‚ k2*k6*x1,
â”‚ k2*k6*k1,
â”‚ k2*k6*x3,
â”‚ k2*k6*x5,
â”‚ k2*k6*x6,
â”‚ k2*k6^2,
â”‚ k2^2*x4,
â”‚ k2^2*x2,
â”‚ k2^2*x1,
â”‚ k2^2*k1,
â”‚ k2^2*x3,
â”‚ k2^2*x5,
â”‚ k2^2*x6,
â”‚ k2^2*k6,
â”‚ k2^3,
â”‚ k4*x4^2,
â”‚ k4*x2*x4,
â”‚ k4*x2^2,
â”‚ k4*x1*x4,
â”‚ k4*x1*x2,
â”‚ k4*x1^2,
â”‚ k4*k1*x4,
â”‚ k4*k1*x2,
â”‚ k4*k1*x1,
â”‚ k4*k1^2,
â”‚ k4*x3*x4,
â”‚ k4*x3*x2,
â”‚ k4*x3*x1,
â”‚ k4*x3*k1,
â”‚ k4*x3^2,
â”‚ k4*x5*x4,
â”‚ k4*x5*x2,
â”‚ k4*x5*x1,
â”‚ k4*x5*k1,
â”‚ k4*x5*x3,
â”‚ k4*x5^2,
â”‚ k4*x6*x4,
â”‚ k4*x6*x2,
â”‚ k4*x6*x1,
â”‚ k4*x6*k1,
â”‚ k4*x6*x3,
â”‚ k4*x6*x5,
â”‚ k4*x6^2,
â”‚ k4*k6*x4,
â”‚ k4*k6*x2,
â”‚ k4*k6*x1,
â”‚ k4*k6*k1,
â”‚ k4*k6*x3,
â”‚ k4*k6*x5,
â”‚ k4*k6*x6,
â”‚ k4*k6^2,
â”‚ k4*k2*x4,
â”‚ k4*k2*x2,
â”‚ k4*k2*x1,
â”‚ k4*k2*k1,
â”‚ k4*k2*x3,
â”‚ k4*k2*x5,
â”‚ k4*k2*x6,
â”‚ k4*k2*k6,
â”‚ k4*k2^2,
â”‚ k4^2*x4,
â”‚ k4^2*x2,
â”‚ k4^2*x1,
â”‚ k4^2*k1,
â”‚ k4^2*x3,
â”‚ k4^2*x5,
â”‚ k4^2*x6,
â”‚ k4^2*k6,
â”‚ k4^2*k2,
â”‚ k4^3,
â”‚ k3*x4^2,
â”‚ k3*x2*x4,
â”‚ k3*x2^2,
â”‚ k3*x1*x4,
â”‚ k3*x1*x2,
â”‚ k3*x1^2,
â”‚ k3*k1*x4,
â”‚ k3*k1*x2,
â”‚ k3*k1*x1,
â”‚ k3*k1^2,
â”‚ k3*x3*x4,
â”‚ k3*x3*x2,
â”‚ k3*x3*x1,
â”‚ k3*x3*k1,
â”‚ k3*x3^2,
â”‚ k3*x5*x4,
â”‚ k3*x5*x2,
â”‚ k3*x5*x1,
â”‚ k3*x5*k1,
â”‚ k3*x5*x3,
â”‚ k3*x5^2,
â”‚ k3*x6*x4,
â”‚ k3*x6*x2,
â”‚ k3*x6*x1,
â”‚ k3*x6*k1,
â”‚ k3*x6*x3,
â”‚ k3*x6*x5,
â”‚ k3*x6^2,
â”‚ k3*k6*x4,
â”‚ k3*k6*x2,
â”‚ k3*k6*x1,
â”‚ k3*k6*k1,
â”‚ k3*k6*x3,
â”‚ k3*k6*x5,
â”‚ k3*k6*x6,
â”‚ k3*k6^2,
â”‚ k3*k2*x4,
â”‚ k3*k2*x2,
â”‚ k3*k2*x1,
â”‚ k3*k2*k1,
â”‚ k3*k2*x3,
â”‚ k3*k2*x5,
â”‚ k3*k2*x6,
â”‚ k3*k2*k6,
â”‚ k3*k2^2,
â”‚ k3*k4*x4,
â”‚ k3*k4*x2,
â”‚ k3*k4*x1,
â”‚ k3*k4*k1,
â”‚ k3*k4*x3,
â”‚ k3*k4*x5,
â”‚ k3*k4*x6,
â”‚ k3*k4*k6,
â”‚ k3*k4*k2,
â”‚ k3*k4^2,
â”‚ k3^2*x4,
â”‚ k3^2*x2,
â”‚ k3^2*x1,
â”‚ k3^2*k1,
â”‚ k3^2*x3,
â”‚ k3^2*x5,
â”‚ k3^2*x6,
â”‚ k3^2*k6,
â”‚ k3^2*k2,
â”‚ k3^2*k4,
â”‚ k3^3,
â”‚ k5*x4^2,
â”‚ k5*x2*x4,
â”‚ k5*x2^2,
â”‚ k5*x1*x4,
â”‚ k5*x1*x2,
â”‚ k5*x1^2,
â”‚ k5*k1*x4,
â”‚ k5*k1*x2,
â”‚ k5*k1*x1,
â”‚ k5*k1^2,
â”‚ k5*x3*x4,
â”‚ k5*x3*x2,
â”‚ k5*x3*x1,
â”‚ k5*x3*k1,
â”‚ k5*x3^2,
â”‚ k5*x5*x4,
â”‚ k5*x5*x2,
â”‚ k5*x5*x1,
â”‚ k5*x5*k1,
â”‚ k5*x5*x3,
â”‚ k5*x5^2,
â”‚ k5*x6*x4,
â”‚ k5*x6*x2,
â”‚ k5*x6*x1,
â”‚ k5*x6*k1,
â”‚ k5*x6*x3,
â”‚ k5*x6*x5,
â”‚ k5*x6^2,
â”‚ k5*k6*x4,
â”‚ k5*k6*x2,
â”‚ k5*k6*x1,
â”‚ k5*k6*k1,
â”‚ k5*k6*x3,
â”‚ k5*k6*x5,
â”‚ k5*k6*x6,
â”‚ k5*k6^2,
â”‚ k5*k2*x4,
â”‚ k5*k2*x2,
â”‚ k5*k2*x1,
â”‚ k5*k2*k1,
â”‚ k5*k2*x3,
â”‚ k5*k2*x5,
â”‚ k5*k2*x6,
â”‚ k5*k2*k6,
â”‚ k5*k2^2,
â”‚ k5*k4*x4,
â”‚ k5*k4*x2,
â”‚ k5*k4*x1,
â”‚ k5*k4*k1,
â”‚ k5*k4*x3,
â”‚ k5*k4*x5,
â”‚ k5*k4*x6,
â”‚ k5*k4*k6,
â”‚ k5*k4*k2,
â”‚ k5*k4^2,
â”‚ k5*k3*x4,
â”‚ k5*k3*x2,
â”‚ k5*k3*x1,
â”‚ k5*k3*k1,
â”‚ k5*k3*x3,
â”‚ k5*k3*x5,
â”‚ k5*k3*x6,
â”‚ k5*k3*k6,
â”‚ k5*k3*k2,
â”‚ k5*k3*k4,
â”‚ k5*k3^2,
â”‚ k5^2*x4,
â”‚ k5^2*x2,
â”‚ k5^2*x1,
â”‚ k5^2*k1,
â”‚ k5^2*x3,
â”‚ k5^2*x5,
â”‚ k5^2*x6,
â”‚ k5^2*k6,
â”‚ k5^2*k2,
â”‚ k5^2*k4,
â”‚ k5^2*k3,
â”‚ k5^3,
â”‚ k5*k3 + k5*k2
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
â”Œ Info: Checking inclusion with probability 0.99
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:700
â”Œ Info: Inclusion checked in 0.0153651 seconds. Result: true
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:703
â”Œ Info: Out of 80 initial generators there are 12 indepdendent
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:708
â”Œ Info: The ranking of the new set of generators is 78
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:711
â”Œ Info: The search for identifiable functions concluded in 10.234603702 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
â”Œ Info: Identifiable functions are
â”‚   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[x4, x2, x1, k1, x3, x5, x6, k6, k2, k4, k3, k5]
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
