┌ Info: Processing Bilirubin2_io
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
┌ Info: Averaging over 1 runs.
│ Using keyword arguments:
│ NamedTuple{(:strategy, :with_states), Tuple{Tuple{Symbol, Int64}, Bool}}
│ (strategy = (:normalforms, 3), with_states = true)
│ ID: (:normalforms, 3)_with_states
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
┌ Info: Computing IO-equations
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/global_identifiability.jl:88
┌ Info: Computed in 0.017360649 seconds
│   :ioeq_time = ioeq_time
│   ioeq_time = 0.017360649
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/global_identifiability.jl:92
┌ Info: Computing Wronskians
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/global_identifiability.jl:95
┌ Info: Computed in 0.011381164 seconds
│   :wrnsk_time = wrnsk_time
│   wrnsk_time = 0.011381164
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/global_identifiability.jl:97
┌ Info: Dimensions of the Wronskians [8]
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/global_identifiability.jl:101
┌ Info: Ranks of the Wronskians computed in 4.1668e-5 seconds
│   :rank_time = rank_time
│   rank_times = 4.1668e-5
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/global_identifiability.jl:106
⌜ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  101[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:00[K
  Points:  273[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  433[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  634[K[K[A⌜ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  807[K[K[A⌝ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  1017[K[K[A⌟ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  1219[K[K[A⌞ # Computing specializations.. 	 Time: 0:00:02[K
  Points:  1408[K[K[A✓ # Computing specializations.. 	 Time: 0:00:04[K
┌ Info: Simplifying identifiable functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:450
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 9 functions in Rational Field(k01, k31, k21, k12, k13, k14, k41, x1, x2, x3, x4)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:135
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:184
┌ Info: Success! 34 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:268
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (0, 0)], [(0, 0), (0, 0), (0, 0), (1, 0)], [(0, 0), (0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:269
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:279
┌ Info: Interpolating for degrees:
│ Numerator: 3, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:327
┌ Info: Success! 56 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:405
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 1 for num. and 0 for den.
│     Maximal number of interpolated terms are: 3 for num. and 1 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:410
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:418
┌ Info: Groebner basis computed in 0.479492201 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:328
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:333
┌ Info: Inclusion checked in 0.002396288 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:343
┌ Info: Computing parametric Groebner basis up to degrees (4, 4)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 9 functions in Rational Field(k01, k31, k21, k12, k13, k14, k41, x1, x2, x3, x4)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:135
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:184
┌ Info: Success! 34 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:268
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (0, 0)], [(0, 0), (0, 0), (0, 0), (1, 0)], [(0, 0), (0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (0, 0), (3, 2), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (4, 2)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:269
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:279
┌ Info: Interpolating for degrees:
│ Numerator: 4, Denominator: 2
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:327
┌ Info: Success! 256 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:405
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 4 for num. and 2 for den.
│     Maximal number of interpolated terms are: 12 for num. and 6 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:410
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:418
┌ Info: Groebner basis computed in 0.465249846 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:328
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:333
┌ Info: Inclusion checked in 0.006130882 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:343
┌ Info: The coefficients of the Groebner basis are presented by 25 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:347
┌ Info: The pool of fractions:
│ -k01,
│ -k12 - k13 - k14,
│ -k31 - k21 - k41,
│ (-k12^2*k13 + k12^2*k14 + k12*k13^2 - k12*k14^2 - k13^2*k14 + k13*k14^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k12^2*k13 - k12^2*k14 - k12*k13^2 + k12*k14^2 + k13^2*k14 - k13*k14^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31*k12*k13 + k31*k13*k14 + k21*k12*k13 - k21*k12*k14 + k12*k14*k41 - k13*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k12*k13 - k31*k13*k14 - k21*k12*k13 + k21*k12*k14 - k12*k14*k41 + k13*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31*k12^2 + k31*k14^2 + k21*k13^2 - k21*k14^2 + k12^2*k41 - k13^2*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31*k21*k12 + k31*k21*k13 - k31*k13*k41 + k31*k14*k41 + k21*k12*k41 - k21*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31^2*k12 + k31^2*k14 + k21^2*k13 - k21^2*k14 + k12*k41^2 - k13*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31^2*k21 - k31^2*k41 - k31*k21^2 + k31*k41^2 + k21^2*k41 - k21*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31^2*k21 + k31^2*k41 + k31*k21^2 - k31*k41^2 - k21^2*k41 + k21*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k12*k13^2 - k31*k13^2*k14 - k21*k12^2*k13 + k21*k12^2*k14 - k12*k14^2*k41 + k13*k14^2*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k12^2*k14 - k31*k12*k14^2 - k21*k13^2*k14 + k21*k13*k14^2 - k12^2*k13*k41 + k12*k13^2*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k21*k12*k14 - k31*k21*k13*k14 + k31*k12*k13*k41 - k31*k12*k14*k41 - k21*k12*k13*k41 + k21*k13*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31^2*k12*k13 - k31^2*k13*k14 - k21^2*k12*k13 + k21^2*k12*k14 - k12*k14*k41^2 + k13*k14*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31^2*k21*k14 + k31^2*k12*k41 + k31*k21^2*k14 - k31*k12*k41^2 - k21^2*k13*k41 + k21*k13*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31^2*k21*k13 + k31^2*k13*k41 + k31*k21^2*k12 - k31*k14*k41^2 - k21^2*k12*k41 + k21*k14*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31*k12^2 + k31*k12*k13 - k31*k13*k14 + k31*k14^2 - k21*k12*k13 + k21*k12*k14 + k21*k13^2 - k21*k14^2 + k12^2*k41 - k12*k14*k41 - k13^2*k41 + k13*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31^2*k12 - k31^2*k14 - k31*k21*k12 + k31*k21*k13 - k31*k13*k41 + k31*k14*k41 - k21^2*k13 + k21^2*k14 + k21*k12*k41 - k21*k14*k41 - k12*k41^2 + k13*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k12^2*k13 - k31*k12*k13^2 + k31*k13^2*k14 - k31*k13*k14^2 + k21*k12^2*k13 - k21*k12^2*k14 - k21*k12*k13^2 + k21*k12*k14^2 - k12^2*k14*k41 + k12*k14^2*k41 + k13^2*k14*k41 - k13*k14^2*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (-k31^2*k12*k13 + k31^2*k13*k14 + k31*k21*k12^2 - k31*k21*k13^2 + k31*k13^2*k41 - k31*k14^2*k41 + k21^2*k12*k13 - k21^2*k12*k14 - k21*k12^2*k41 + k21*k14^2*k41 + k12*k14*k41^2 - k13*k14*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31^2*k21*k12 + k31^2*k21*k13 - k31^2*k13*k41 - k31^2*k14*k41 - k31*k21^2*k12 - k31*k21^2*k13 + k31*k13*k41^2 + k31*k14*k41^2 + k21^2*k12*k41 + k21^2*k14*k41 - k21*k12*k41^2 - k21*k14*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41)
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:226
┌ Info: Final cleaning and simplification of generators
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:529
┌ Info: The pool of fractions:
│ k01,
│ k12 + k13 + k14,
│ k31 + k21 + k41,
│ (k12^2*k13 - k12^2*k14 - k12*k13^2 + k12*k14^2 + k13^2*k14 - k13*k14^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k12*k13 - k31*k13*k14 - k21*k12*k13 + k21*k12*k14 - k12*k14*k41 + k13*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31*k21*k12 - k31*k21*k13 + k31*k13*k41 - k31*k14*k41 - k21*k12*k41 + k21*k14*k41)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41),
│ (k31^2*k21 - k31^2*k41 - k31*k21^2 + k31*k41^2 + k21^2*k41 - k21*k41^2)//(k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41)
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:226
┌ Info: Checking inclusion with probability 0.995
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:532
┌ Info: Inclusion checked in 0.026953012 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:535
┌ Info: Out of 8 initial generators there are 7 indepdendent
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:540
┌ Info: The ranking of the new set of generators is 466840
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:543
┌ Info: Simplifying identifiable functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:450
┌ Info: Computing parametric Groebner basis up to degrees (2, 2)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 16 functions in Rational Field(k01, k31, k21, k12, k13, k14, k41, x1, x2, x3, x4)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:135
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:184
┌ Info: Success! 34 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:268
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 2), (2, 2), (3, 2)], [(0, 0), (0, 0), (2, 2), (2, 2), (3, 2)], [(0, 0), (2, 2), (0, 0), (2, 2), (3, 2)], [(0, 0), (2, 2), (2, 2), (3, 2)], [(0, 0), (1, 0)], [(0, 0), (0, 4)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 0), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 0), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 0), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:269
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:279
┌ Info: Interpolating for degrees:
│ Numerator: 3, Denominator: 3
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:327
┌ Info: Success! 128 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:405
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 2 for num. and 2 for den.
│     Maximal number of interpolated terms are: 6 for num. and 6 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:410
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:418
┌ Info: Groebner basis computed in 0.440113268 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:328
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:333
┌ Info: Inclusion checked in 0.018282346 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:343
┌ Info: Computing parametric Groebner basis up to degrees (4, 4)
│ Ordering, input / target: degrevlex / InputOrdering
│ Rational interpolator: VanDerHoevenLecerf
│ Polynomial interpolator: PrimesBenOrTiwari
│ Estimate degrees: true
│ Assess correctness: false
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
┌ Info: Given 16 functions in Rational Field(k01, k31, k21, k12, k13, k14, k41, x1, x2, x3, x4)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, t]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
┌ Info: Specializing at 3 points to guess the shape of the basis..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:135
┌ Info: Specializing at random points to guess the total degrees in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:184
┌ Info: Success! 34 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:268
┌ Info: The total degrees in the coefficients
│   state.param_degrees = [[(0, 0), (0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (2, 2), (2, 2), (3, 2)], [(0, 0), (0, 0), (2, 2), (2, 2), (3, 2)], [(0, 0), (2, 2), (0, 0), (2, 2), (3, 2)], [(0, 0), (2, 2), (2, 2), (3, 2)], [(0, 0), (1, 0)], [(0, 0), (0, 4)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (2, 4), (2, 4), (2, 4), (2, 4), (1, 0), (5, 6)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 0), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 0), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (4, 2)], [(0, 0), (3, 2), (3, 2), (3, 2), (3, 2), (4, 0), (6, 4)], [(0, 0), (3, 2), (3, 2), (4, 2)]]
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:269
┌ Info: Interpolating the exponents in parameters..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:279
┌ Info: Interpolating for degrees:
│ Numerator: 5, Denominator: 5
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:327
┌ Info: Success! 1536 points used.
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:405
┌ Info: Basis exponents summary:
│     Maximal interpolated degrees are: 4 for num. and 4 for den.
│     Maximal number of interpolated terms are: 33 for num. and 33 for den.
│     
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:410
┌ Info: Recovering the coefficients..
└ @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:418
┌ Info: Groebner basis computed in 4.890286843 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:328
┌ Info: Checking two-sided inclusion modulo a prime
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:333
┌ Info: Inclusion checked in 0.866577062 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:343
┌ Info: The coefficients of the Groebner basis are presented by 71 rational functions
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:347
┌ Info: The pool of fractions:
│ -1//(k31^2*k12^2 - 2*k31^2*k12*k14 + k31^2*k14^2 - 2*k31*k21*k12*k13 + 2*k31*k21*k12*k14 + 2*k31*k21*k13*k14 - 2*k31*k21*k14^2 - 2*k31*k12^2*k41 + 2*k31*k12*k13*k41 + 2*k31*k12*k14*k41 - 2*k31*k13*k14*k41 + k21^2*k13^2 - 2*k21^2*k13*k14 + k21^2*k14^2 + 2*k21*k12*k13*k41 - 2*k21*k12*k14*k41 - 2*k21*k13^2*k41 + 2*k21*k13*k14*k41 + k12^2*k41^2 - 2*k12*k13*k41^2 + k13^2*k41^2),
│ -x1,
│ -k01,
│ -1//3*x2 - 1//3*x3 - 1//3*x4,
│ -x2 - x3 - x4,
│ -1//3*k12 - 1//3*k13 - 1//3*k14,
│ -1//3*k31 - 1//3*k21 - 1//3*k41,
│ -1//6*k31^2*k12^2 + 1//3*k31^2*k12*k14 - 1//6*k31^2*k14^2 + 1//3*k31*k21*k12*k13 - 1//3*k31*k21*k12*k14 - 1//3*k31*k21*k13*k14 + 1//3*k31*k21*k14^2 + 1//3*k31*k12^2*k41 - 1//3*k31*k12*k13*k41 - 1//3*k31*k12*k14*k41 + 1//3*k31*k13*k14*k41 - 1//6*k21^2*k13^2 + 1//3*k21^2*k13*k14 - 1//6*k21^2*k14^2 - 1//3*k21*k12*k13*k41 + 1//3*k21*k12*k14*k41 + 1//3*k21*k13^2*k41 - 1//3*k21*k13*k14*k41 - 1//6*k12^2*k41^2 + 1//3*k12*k13*k41^2 - 1//6*k13^2*k41^2,
│ -1//6*k31*k12^2*x3 + 1//6*k31*k12^2*x4 + 1//6*k31*k12*k13*x2 - 1//6*k31*k12*k13*x4 - 1//6*k31*k12*k14*x2 + 1//3*k31*k12*k14*x3 - 1//6*k31*k12*k14*x4 - 1//6*k31*k13*k14*x2 + 1//6*k31*k13*k14*x4 + 1//6*k31*k14^2*x2 - 1//6*k31*k14^2*x3 + 1//6*k21*k12*k13*x3 - 1//6*k21*k12*k13*x4 - 1//6*k21*k12*k14*x3 + 1//6*k21*k12*k14*x4 - 1//6*k21*k13^2*x2 + 1//6*k21*k13^2*x4 + 1//3*k21*k13*k14*x2 - 1//6*k21*k13*k14*x3 - 1//6*k21*k13*k14*x4 - 1//6*k21*k14^2*x2 + 1//6*k21*k14^2*x3 + 1//6*k12^2*k41*x3 - 1//6*k12^2*k41*x4 - 1//6*k12*k13*k41*x2 - 1//6*k12*k13*k41*x3 + 1//3*k12*k13*k41*x4 + 1//6*k12*k14*k41*x2 - 1//6*k12*k14*k41*x3 + 1//6*k13^2*k41*x2 - 1//6*k13^2*k41*x4 - 1//6*k13*k14*k41*x2 + 1//6*k13*k14*k41*x3,
│ -1//6*k31^2*k12*x2 + 1//6*k31^2*k12*x4 + 1//6*k31^2*k14*x2 - 1//6*k31^2*k14*x4 + 1//6*k31*k21*k12*x3 - 1//6*k31*k21*k12*x4 + 1//6*k31*k21*k13*x2 - 1//6*k31*k21*k13*x4 - 1//6*k31*k21*k14*x2 - 1//6*k31*k21*k14*x3 + 1//3*k31*k21*k14*x4 + 1//3*k31*k12*k41*x2 - 1//6*k31*k12*k41*x3 - 1//6*k31*k12*k41*x4 - 1//6*k31*k13*k41*x2 + 1//6*k31*k13*k41*x4 - 1//6*k31*k14*k41*x2 + 1//6*k31*k14*k41*x3 - 1//6*k21^2*k13*x3 + 1//6*k21^2*k13*x4 + 1//6*k21^2*k14*x3 - 1//6*k21^2*k14*x4 - 1//6*k21*k12*k41*x3 + 1//6*k21*k12*k41*x4 - 1//6*k21*k13*k41*x2 + 1//3*k21*k13*k41*x3 - 1//6*k21*k13*k41*x4 + 1//6*k21*k14*k41*x2 - 1//6*k21*k14*k41*x3 - 1//6*k12*k41^2*x2 + 1//6*k12*k41^2*x3 + 1//6*k13*k41^2*x2 - 1//6*k13*k41^2*x3,
│ (k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k12*x3 + k12*x4 + k13*x2 - k13*x4 - k14*x2 + k14*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*x2 + k31*x4 + k21*x3 - k21*x4 + k41*x2 - k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*k12 + k31*k14 + k21*k13 - k21*k14 + k12*k41 - k13*k41)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*k12 + k31*k14 + k21*k13 - k21*k14 + k12*k41 - k13*k41)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-x2^2*x3 + x2^2*x4 + x2*x3^2 - x2*x4^2 - x3^2*x4 + x3*x4^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (x2^2*x3 - x2^2*x4 - x2*x3^2 + x2*x4^2 + x3^2*x4 - x3*x4^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (x2^2*x3 - x2^2*x4 - x2*x3^2 + x2*x4^2 + x3^2*x4 - x3*x4^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-x2^2*x3 + x2^2*x4 + x2*x3^2 - x2*x4^2 - x3^2*x4 + x3*x4^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k12*x3^2 + k12*x4^2 + k13*x2^2 - k13*x4^2 - k14*x2^2 + k14*x3^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12*x2*x3 + k12*x2*x4 + k13*x2*x3 - k13*x3*x4 - k14*x2*x4 + k14*x3*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12*k13*x2 - k12*k13*x3 - k12*k14*x2 + k12*k14*x4 + k13*k14*x3 - k13*k14*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12^2*x3 + k12^2*x4 + k13^2*x2 - k13^2*x4 - k14^2*x2 + k14^2*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12^2*k13 - k12^2*k14 - k12*k13^2 + k12*k14^2 + k13^2*k14 - k13*k14^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*x2*x3 + k31*x3*x4 + k21*x2*x3 - k21*x2*x4 + k41*x2*x4 - k41*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*x2^2 + k31*x4^2 + k21*x3^2 - k21*x4^2 + k41*x2^2 - k41*x3^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31*k12*x4 - k31*k14*x2 - k21*k13*x4 + k21*k14*x3 - k12*k41*x3 + k13*k41*x2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*k12*x4 - k31*k14*x2 - k21*k13*x4 + k21*k14*x3 - k12*k41*x3 + k13*k41*x2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*k21*x2 + k31*k21*x3 - k31*k41*x3 + k31*k41*x4 + k21*k41*x2 - k21*k41*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31^2*x2 + k31^2*x4 + k21^2*x3 - k21^2*x4 + k41^2*x2 - k41^2*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31^2*k21 - k31^2*k41 - k31*k21^2 + k31*k41^2 + k21^2*k41 - k21*k41^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k12*x3^2*x4 - k12*x3*x4^2 - k13*x2^2*x4 + k13*x2*x4^2 + k14*x2^2*x3 - k14*x2*x3^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12*k13*x2*x4 + k12*k13*x3*x4 + k12*k14*x2*x3 - k12*k14*x3*x4 - k13*k14*x2*x3 + k13*k14*x2*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12^2*k13*x4 + k12^2*k14*x3 + k12*k13^2*x4 - k12*k14^2*x3 - k13^2*k14*x2 + k13*k14^2*x2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*x2^2*x4 - k31*x2*x4^2 - k21*x3^2*x4 + k21*x3*x4^2 - k41*x2^2*x3 + k41*x2*x3^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31*k21*x2*x4 - k31*k21*x3*x4 + k31*k41*x2*x3 - k31*k41*x2*x4 - k21*k41*x2*x3 + k21*k41*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31^2*k21*x4 + k31^2*k41*x2 + k31*k21^2*x4 - k31*k41^2*x2 - k21^2*k41*x3 + k21*k41^2*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (1//3*k12*x2*x3 - 1//3*k12*x2*x4 - 2//3*k12*x3^2 + 2//3*k12*x4^2 + 2//3*k13*x2^2 - 1//3*k13*x2*x3 + 1//3*k13*x3*x4 - 2//3*k13*x4^2 - 2//3*k14*x2^2 + 1//3*k14*x2*x4 + 2//3*k14*x3^2 - 1//3*k14*x3*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-2//3*k12*x2*x3 + 2//3*k12*x2*x4 + 1//3*k12*x3^2 - 1//3*k12*x4^2 - 1//3*k13*x2^2 + 2//3*k13*x2*x3 - 2//3*k13*x3*x4 + 1//3*k13*x4^2 + 1//3*k14*x2^2 - 2//3*k14*x2*x4 - 1//3*k14*x3^2 + 2//3*k14*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k12^2*x3 + 1//3*k12^2*x4 - 2//3*k12*k13*x2 + 2//3*k12*k13*x3 + 2//3*k12*k14*x2 - 2//3*k12*k14*x4 + 1//3*k13^2*x2 - 1//3*k13^2*x4 - 2//3*k13*k14*x3 + 2//3*k13*k14*x4 - 1//3*k14^2*x2 + 1//3*k14^2*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (1//3*k31*x2^2 - 2//3*k31*x2*x3 + 2//3*k31*x3*x4 - 1//3*k31*x4^2 + 2//3*k21*x2*x3 - 2//3*k21*x2*x4 - 1//3*k21*x3^2 + 1//3*k21*x4^2 - 1//3*k41*x2^2 + 2//3*k41*x2*x4 + 1//3*k41*x3^2 - 2//3*k41*x3*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-2//3*k31*x2^2 + 1//3*k31*x2*x3 - 1//3*k31*x3*x4 + 2//3*k31*x4^2 - 1//3*k21*x2*x3 + 1//3*k21*x2*x4 + 2//3*k21*x3^2 - 2//3*k21*x4^2 + 2//3*k41*x2^2 - 1//3*k41*x2*x4 - 2//3*k41*x3^2 + 1//3*k41*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*k12*x3 + k31*k13*x2 - k31*k13*x4 + k31*k14*x3 - k21*k12*x3 + k21*k12*x4 + k21*k13*x2 - k21*k14*x2 + k12*k41*x4 - k13*k41*x4 - k14*k41*x2 + k14*k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*k12*x2 - k31*k13*x2 + k31*k13*x4 + k31*k14*x4 + k21*k12*x3 - k21*k12*x4 + k21*k13*x3 - k21*k14*x4 + k12*k41*x2 - k13*k41*x3 + k14*k41*x2 - k14*k41*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31*k12^2 + 2//3*k31*k12*k13 - 2//3*k31*k13*k14 + 1//3*k31*k14^2 - 2//3*k21*k12*k13 + 2//3*k21*k12*k14 + 1//3*k21*k13^2 - 1//3*k21*k14^2 + 1//3*k12^2*k41 - 2//3*k12*k14*k41 - 1//3*k13^2*k41 + 2//3*k13*k14*k41)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-1//3*k31^2*x2 + 1//3*k31^2*x4 + 2//3*k31*k21*x2 - 2//3*k31*k21*x3 + 2//3*k31*k41*x3 - 2//3*k31*k41*x4 + 1//3*k21^2*x3 - 1//3*k21^2*x4 - 2//3*k21*k41*x2 + 2//3*k21*k41*x4 + 1//3*k41^2*x2 - 1//3*k41^2*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31^2*k12 + 1//3*k31^2*k14 + 2//3*k31*k21*k12 - 2//3*k31*k21*k13 + 2//3*k31*k13*k41 - 2//3*k31*k14*k41 + 1//3*k21^2*k13 - 1//3*k21^2*k14 - 2//3*k21*k12*k41 + 2//3*k21*k14*k41 + 1//3*k12*k41^2 - 1//3*k13*k41^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31*k12*x3 + 1//3*k31*k12*x4 - 2//3*k31*k13*x2 + 2//3*k31*k13*x4 - 1//3*k31*k14*x2 + 1//3*k31*k14*x3 + 2//3*k21*k12*x3 - 2//3*k21*k12*x4 + 1//3*k21*k13*x2 - 1//3*k21*k13*x4 - 1//3*k21*k14*x2 + 1//3*k21*k14*x3 - 1//3*k12*k41*x3 + 1//3*k12*k41*x4 + 1//3*k13*k41*x2 - 1//3*k13*k41*x4 + 2//3*k14*k41*x2 - 2//3*k14*k41*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31*k12*x2 + 1//3*k31*k12*x4 + 2//3*k31*k13*x2 - 2//3*k31*k13*x4 - 1//3*k31*k14*x2 + 1//3*k31*k14*x4 - 2//3*k21*k12*x3 + 2//3*k21*k12*x4 + 1//3*k21*k13*x3 - 1//3*k21*k13*x4 + 1//3*k21*k14*x3 - 1//3*k21*k14*x4 + 1//3*k12*k41*x2 - 1//3*k12*k41*x3 + 1//3*k13*k41*x2 - 1//3*k13*k41*x3 - 2//3*k14*k41*x2 + 2//3*k14*k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (1//3*k31*k12*x2 - 2//3*k31*k12*x3 + 1//3*k31*k12*x4 - 1//3*k31*k14*x2 + 2//3*k31*k14*x3 - 1//3*k31*k14*x4 + 2//3*k21*k13*x2 - 1//3*k21*k13*x3 - 1//3*k21*k13*x4 - 2//3*k21*k14*x2 + 1//3*k21*k14*x3 + 1//3*k21*k14*x4 - 1//3*k12*k41*x2 - 1//3*k12*k41*x3 + 2//3*k12*k41*x4 + 1//3*k13*k41*x2 + 1//3*k13*k41*x3 - 2//3*k13*k41*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-2//3*k31*k12*x2 + 1//3*k31*k12*x3 + 1//3*k31*k12*x4 - 1//3*k31*k14*x2 - 1//3*k31*k14*x3 + 2//3*k31*k14*x4 - 1//3*k21*k13*x2 + 2//3*k21*k13*x3 - 1//3*k21*k13*x4 + 1//3*k21*k14*x2 + 1//3*k21*k14*x3 - 2//3*k21*k14*x4 + 2//3*k12*k41*x2 - 1//3*k12*k41*x3 - 1//3*k12*k41*x4 + 1//3*k13*k41*x2 - 2//3*k13*k41*x3 + 1//3*k13*k41*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (2//3*x2^2 - 2//3*x2*x3 - 2//3*x2*x4 + 2//3*x3^2 - 2//3*x3*x4 + 2//3*x4^2)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-4//3*x2^2 + 4//3*x2*x3 + 4//3*x2*x4 - 4//3*x3^2 + 4//3*x3*x4 - 4//3*x4^2)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (2//3*x2^2 - 2//3*x2*x3 - 2//3*x2*x4 + 2//3*x3^2 - 2//3*x3*x4 + 2//3*x4^2)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-4//3*x2^2 + 4//3*x2*x3 + 4//3*x2*x4 - 4//3*x3^2 + 4//3*x3*x4 - 4//3*x4^2)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-2//3*k12^2 + 2//3*k12*k13 + 2//3*k12*k14 - 2//3*k13^2 + 2//3*k13*k14 - 2//3*k14^2)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-2//3*k31^2 + 2//3*k31*k21 + 2//3*k31*k41 - 2//3*k21^2 + 2//3*k21*k41 - 2//3*k41^2)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (2//3*k12*x2 - 1//3*k12*x3 - 1//3*k12*x4 - 1//3*k13*x2 + 2//3*k13*x3 - 1//3*k13*x4 - 1//3*k14*x2 - 1//3*k14*x3 + 2//3*k14*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (4//3*k12*x2 - 2//3*k12*x3 - 2//3*k12*x4 - 2//3*k13*x2 + 4//3*k13*x3 - 2//3*k13*x4 - 2//3*k14*x2 - 2//3*k14*x3 + 4//3*k14*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-2//3*k12*x2 + 1//3*k12*x3 + 1//3*k12*x4 + 1//3*k13*x2 - 2//3*k13*x3 + 1//3*k13*x4 + 1//3*k14*x2 + 1//3*k14*x3 - 2//3*k14*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-4//3*k12*x2 + 2//3*k12*x3 + 2//3*k12*x4 + 2//3*k13*x2 - 4//3*k13*x3 + 2//3*k13*x4 + 2//3*k14*x2 + 2//3*k14*x3 - 4//3*k14*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (2//3*k31*x2 - 4//3*k31*x3 + 2//3*k31*x4 - 4//3*k21*x2 + 2//3*k21*x3 + 2//3*k21*x4 + 2//3*k41*x2 + 2//3*k41*x3 - 4//3*k41*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-1//3*k31*x2 + 2//3*k31*x3 - 1//3*k31*x4 + 2//3*k21*x2 - 1//3*k21*x3 - 1//3*k21*x4 - 1//3*k41*x2 - 1//3*k41*x3 + 2//3*k41*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-2//3*k31*x2 + 4//3*k31*x3 - 2//3*k31*x4 + 4//3*k21*x2 - 2//3*k21*x3 - 2//3*k21*x4 - 2//3*k41*x2 - 2//3*k41*x3 + 4//3*k41*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (1//3*k31*x2 - 2//3*k31*x3 + 1//3*k31*x4 - 2//3*k21*x2 + 1//3*k21*x3 + 1//3*k21*x4 + 1//3*k41*x2 + 1//3*k41*x3 - 2//3*k41*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-2//3*k31*k12 + 4//3*k31*k13 - 2//3*k31*k14 + 4//3*k21*k12 - 2//3*k21*k13 - 2//3*k21*k14 - 2//3*k12*k41 - 2//3*k13*k41 + 4//3*k14*k41)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-2//3*k31*k12 + 4//3*k31*k13 - 2//3*k31*k14 + 4//3*k21*k12 - 2//3*k21*k13 - 2//3*k21*k14 - 2//3*k12*k41 - 2//3*k13*k41 + 4//3*k14*k41)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3)
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:226
┌ Info: The pool of fractions:
│ -1//(k31^2*k12^2 - 2*k31^2*k12*k14 + k31^2*k14^2 - 2*k31*k21*k12*k13 + 2*k31*k21*k12*k14 + 2*k31*k21*k13*k14 - 2*k31*k21*k14^2 - 2*k31*k12^2*k41 + 2*k31*k12*k13*k41 + 2*k31*k12*k14*k41 - 2*k31*k13*k14*k41 + k21^2*k13^2 - 2*k21^2*k13*k14 + k21^2*k14^2 + 2*k21*k12*k13*k41 - 2*k21*k12*k14*k41 - 2*k21*k13^2*k41 + 2*k21*k13*k14*k41 + k12^2*k41^2 - 2*k12*k13*k41^2 + k13^2*k41^2),
│ -x1,
│ -k01,
│ -1//3*x2 - 1//3*x3 - 1//3*x4,
│ -x2 - x3 - x4,
│ -1//3*k12 - 1//3*k13 - 1//3*k14,
│ -1//3*k31 - 1//3*k21 - 1//3*k41,
│ -1//6*k31^2*k12^2 + 1//3*k31^2*k12*k14 - 1//6*k31^2*k14^2 + 1//3*k31*k21*k12*k13 - 1//3*k31*k21*k12*k14 - 1//3*k31*k21*k13*k14 + 1//3*k31*k21*k14^2 + 1//3*k31*k12^2*k41 - 1//3*k31*k12*k13*k41 - 1//3*k31*k12*k14*k41 + 1//3*k31*k13*k14*k41 - 1//6*k21^2*k13^2 + 1//3*k21^2*k13*k14 - 1//6*k21^2*k14^2 - 1//3*k21*k12*k13*k41 + 1//3*k21*k12*k14*k41 + 1//3*k21*k13^2*k41 - 1//3*k21*k13*k14*k41 - 1//6*k12^2*k41^2 + 1//3*k12*k13*k41^2 - 1//6*k13^2*k41^2,
│ -1//6*k31*k12^2*x3 + 1//6*k31*k12^2*x4 + 1//6*k31*k12*k13*x2 - 1//6*k31*k12*k13*x4 - 1//6*k31*k12*k14*x2 + 1//3*k31*k12*k14*x3 - 1//6*k31*k12*k14*x4 - 1//6*k31*k13*k14*x2 + 1//6*k31*k13*k14*x4 + 1//6*k31*k14^2*x2 - 1//6*k31*k14^2*x3 + 1//6*k21*k12*k13*x3 - 1//6*k21*k12*k13*x4 - 1//6*k21*k12*k14*x3 + 1//6*k21*k12*k14*x4 - 1//6*k21*k13^2*x2 + 1//6*k21*k13^2*x4 + 1//3*k21*k13*k14*x2 - 1//6*k21*k13*k14*x3 - 1//6*k21*k13*k14*x4 - 1//6*k21*k14^2*x2 + 1//6*k21*k14^2*x3 + 1//6*k12^2*k41*x3 - 1//6*k12^2*k41*x4 - 1//6*k12*k13*k41*x2 - 1//6*k12*k13*k41*x3 + 1//3*k12*k13*k41*x4 + 1//6*k12*k14*k41*x2 - 1//6*k12*k14*k41*x3 + 1//6*k13^2*k41*x2 - 1//6*k13^2*k41*x4 - 1//6*k13*k14*k41*x2 + 1//6*k13*k14*k41*x3,
│ -1//6*k31^2*k12*x2 + 1//6*k31^2*k12*x4 + 1//6*k31^2*k14*x2 - 1//6*k31^2*k14*x4 + 1//6*k31*k21*k12*x3 - 1//6*k31*k21*k12*x4 + 1//6*k31*k21*k13*x2 - 1//6*k31*k21*k13*x4 - 1//6*k31*k21*k14*x2 - 1//6*k31*k21*k14*x3 + 1//3*k31*k21*k14*x4 + 1//3*k31*k12*k41*x2 - 1//6*k31*k12*k41*x3 - 1//6*k31*k12*k41*x4 - 1//6*k31*k13*k41*x2 + 1//6*k31*k13*k41*x4 - 1//6*k31*k14*k41*x2 + 1//6*k31*k14*k41*x3 - 1//6*k21^2*k13*x3 + 1//6*k21^2*k13*x4 + 1//6*k21^2*k14*x3 - 1//6*k21^2*k14*x4 - 1//6*k21*k12*k41*x3 + 1//6*k21*k12*k41*x4 - 1//6*k21*k13*k41*x2 + 1//3*k21*k13*k41*x3 - 1//6*k21*k13*k41*x4 + 1//6*k21*k14*k41*x2 - 1//6*k21*k14*k41*x3 - 1//6*k12*k41^2*x2 + 1//6*k12*k41^2*x3 + 1//6*k13*k41^2*x2 - 1//6*k13*k41^2*x3,
│ (k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k12*x3 + k12*x4 + k13*x2 - k13*x4 - k14*x2 + k14*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*x2 + k31*x4 + k21*x3 - k21*x4 + k41*x2 - k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*k12 + k31*k14 + k21*k13 - k21*k14 + k12*k41 - k13*k41)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*k12 - k31*k14 - k21*k13 + k21*k14 - k12*k41 + k13*k41)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*k12 + k31*k14 + k21*k13 - k21*k14 + k12*k41 - k13*k41)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-x2^2*x3 + x2^2*x4 + x2*x3^2 - x2*x4^2 - x3^2*x4 + x3*x4^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (x2^2*x3 - x2^2*x4 - x2*x3^2 + x2*x4^2 + x3^2*x4 - x3*x4^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (x2^2*x3 - x2^2*x4 - x2*x3^2 + x2*x4^2 + x3^2*x4 - x3*x4^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-x2^2*x3 + x2^2*x4 + x2*x3^2 - x2*x4^2 - x3^2*x4 + x3*x4^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k12*x3^2 + k12*x4^2 + k13*x2^2 - k13*x4^2 - k14*x2^2 + k14*x3^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12*x2*x3 + k12*x2*x4 + k13*x2*x3 - k13*x3*x4 - k14*x2*x4 + k14*x3*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12*k13*x2 - k12*k13*x3 - k12*k14*x2 + k12*k14*x4 + k13*k14*x3 - k13*k14*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12^2*x3 + k12^2*x4 + k13^2*x2 - k13^2*x4 - k14^2*x2 + k14^2*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12^2*k13 - k12^2*k14 - k12*k13^2 + k12*k14^2 + k13^2*k14 - k13*k14^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*x2*x3 + k31*x3*x4 + k21*x2*x3 - k21*x2*x4 + k41*x2*x4 - k41*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*x2^2 + k31*x4^2 + k21*x3^2 - k21*x4^2 + k41*x2^2 - k41*x3^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31*k12*x4 - k31*k14*x2 - k21*k13*x4 + k21*k14*x3 - k12*k41*x3 + k13*k41*x2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*k12*x4 - k31*k14*x2 - k21*k13*x4 + k21*k14*x3 - k12*k41*x3 + k13*k41*x2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*k21*x2 + k31*k21*x3 - k31*k41*x3 + k31*k41*x4 + k21*k41*x2 - k21*k41*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31^2*x2 + k31^2*x4 + k21^2*x3 - k21^2*x4 + k41^2*x2 - k41^2*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31^2*k21 - k31^2*k41 - k31*k21^2 + k31*k41^2 + k21^2*k41 - k21*k41^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k12*x3^2*x4 - k12*x3*x4^2 - k13*x2^2*x4 + k13*x2*x4^2 + k14*x2^2*x3 - k14*x2*x3^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12*k13*x2*x4 + k12*k13*x3*x4 + k12*k14*x2*x3 - k12*k14*x3*x4 - k13*k14*x2*x3 + k13*k14*x2*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k12^2*k13*x4 + k12^2*k14*x3 + k12*k13^2*x4 - k12*k14^2*x3 - k13^2*k14*x2 + k13*k14^2*x2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k31*x2^2*x4 - k31*x2*x4^2 - k21*x3^2*x4 + k21*x3*x4^2 - k41*x2^2*x3 + k41*x2*x3^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (k31*k21*x2*x4 - k31*k21*x3*x4 + k31*k41*x2*x3 - k31*k41*x2*x4 - k21*k41*x2*x3 + k21*k41*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31^2*k21*x4 + k31^2*k41*x2 + k31*k21^2*x4 - k31*k41^2*x2 - k21^2*k41*x3 + k21*k41^2*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (1//3*k12*x2*x3 - 1//3*k12*x2*x4 - 2//3*k12*x3^2 + 2//3*k12*x4^2 + 2//3*k13*x2^2 - 1//3*k13*x2*x3 + 1//3*k13*x3*x4 - 2//3*k13*x4^2 - 2//3*k14*x2^2 + 1//3*k14*x2*x4 + 2//3*k14*x3^2 - 1//3*k14*x3*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-2//3*k12*x2*x3 + 2//3*k12*x2*x4 + 1//3*k12*x3^2 - 1//3*k12*x4^2 - 1//3*k13*x2^2 + 2//3*k13*x2*x3 - 2//3*k13*x3*x4 + 1//3*k13*x4^2 + 1//3*k14*x2^2 - 2//3*k14*x2*x4 - 1//3*k14*x3^2 + 2//3*k14*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k12^2*x3 + 1//3*k12^2*x4 - 2//3*k12*k13*x2 + 2//3*k12*k13*x3 + 2//3*k12*k14*x2 - 2//3*k12*k14*x4 + 1//3*k13^2*x2 - 1//3*k13^2*x4 - 2//3*k13*k14*x3 + 2//3*k13*k14*x4 - 1//3*k14^2*x2 + 1//3*k14^2*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (1//3*k31*x2^2 - 2//3*k31*x2*x3 + 2//3*k31*x3*x4 - 1//3*k31*x4^2 + 2//3*k21*x2*x3 - 2//3*k21*x2*x4 - 1//3*k21*x3^2 + 1//3*k21*x4^2 - 1//3*k41*x2^2 + 2//3*k41*x2*x4 + 1//3*k41*x3^2 - 2//3*k41*x3*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-2//3*k31*x2^2 + 1//3*k31*x2*x3 - 1//3*k31*x3*x4 + 2//3*k31*x4^2 - 1//3*k21*x2*x3 + 1//3*k21*x2*x4 + 2//3*k21*x3^2 - 2//3*k21*x4^2 + 2//3*k41*x2^2 - 1//3*k41*x2*x4 - 2//3*k41*x3^2 + 1//3*k41*x3*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-k31*k12*x3 + k31*k13*x2 - k31*k13*x4 + k31*k14*x3 - k21*k12*x3 + k21*k12*x4 + k21*k13*x2 - k21*k14*x2 + k12*k41*x4 - k13*k41*x4 - k14*k41*x2 + k14*k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-k31*k12*x2 - k31*k13*x2 + k31*k13*x4 + k31*k14*x4 + k21*k12*x3 - k21*k12*x4 + k21*k13*x3 - k21*k14*x4 + k12*k41*x2 - k13*k41*x3 + k14*k41*x2 - k14*k41*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31*k12^2 + 2//3*k31*k12*k13 - 2//3*k31*k13*k14 + 1//3*k31*k14^2 - 2//3*k21*k12*k13 + 2//3*k21*k12*k14 + 1//3*k21*k13^2 - 1//3*k21*k14^2 + 1//3*k12^2*k41 - 2//3*k12*k14*k41 - 1//3*k13^2*k41 + 2//3*k13*k14*k41)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-1//3*k31^2*x2 + 1//3*k31^2*x4 + 2//3*k31*k21*x2 - 2//3*k31*k21*x3 + 2//3*k31*k41*x3 - 2//3*k31*k41*x4 + 1//3*k21^2*x3 - 1//3*k21^2*x4 - 2//3*k21*k41*x2 + 2//3*k21*k41*x4 + 1//3*k41^2*x2 - 1//3*k41^2*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31^2*k12 + 1//3*k31^2*k14 + 2//3*k31*k21*k12 - 2//3*k31*k21*k13 + 2//3*k31*k13*k41 - 2//3*k31*k14*k41 + 1//3*k21^2*k13 - 1//3*k21^2*k14 - 2//3*k21*k12*k41 + 2//3*k21*k14*k41 + 1//3*k12*k41^2 - 1//3*k13*k41^2)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31*k12*x3 + 1//3*k31*k12*x4 - 2//3*k31*k13*x2 + 2//3*k31*k13*x4 - 1//3*k31*k14*x2 + 1//3*k31*k14*x3 + 2//3*k21*k12*x3 - 2//3*k21*k12*x4 + 1//3*k21*k13*x2 - 1//3*k21*k13*x4 - 1//3*k21*k14*x2 + 1//3*k21*k14*x3 - 1//3*k12*k41*x3 + 1//3*k12*k41*x4 + 1//3*k13*k41*x2 - 1//3*k13*k41*x4 + 2//3*k14*k41*x2 - 2//3*k14*k41*x3)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (-1//3*k31*k12*x2 + 1//3*k31*k12*x4 + 2//3*k31*k13*x2 - 2//3*k31*k13*x4 - 1//3*k31*k14*x2 + 1//3*k31*k14*x4 - 2//3*k21*k12*x3 + 2//3*k21*k12*x4 + 1//3*k21*k13*x3 - 1//3*k21*k13*x4 + 1//3*k21*k14*x3 - 1//3*k21*k14*x4 + 1//3*k12*k41*x2 - 1//3*k12*k41*x3 + 1//3*k13*k41*x2 - 1//3*k13*k41*x3 - 2//3*k14*k41*x2 + 2//3*k14*k41*x3)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (1//3*k31*k12*x2 - 2//3*k31*k12*x3 + 1//3*k31*k12*x4 - 1//3*k31*k14*x2 + 2//3*k31*k14*x3 - 1//3*k31*k14*x4 + 2//3*k21*k13*x2 - 1//3*k21*k13*x3 - 1//3*k21*k13*x4 - 2//3*k21*k14*x2 + 1//3*k21*k14*x3 + 1//3*k21*k14*x4 - 1//3*k12*k41*x2 - 1//3*k12*k41*x3 + 2//3*k12*k41*x4 + 1//3*k13*k41*x2 + 1//3*k13*k41*x3 - 2//3*k13*k41*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (-2//3*k31*k12*x2 + 1//3*k31*k12*x3 + 1//3*k31*k12*x4 - 1//3*k31*k14*x2 - 1//3*k31*k14*x3 + 2//3*k31*k14*x4 - 1//3*k21*k13*x2 + 2//3*k21*k13*x3 - 1//3*k21*k13*x4 + 1//3*k21*k14*x2 + 1//3*k21*k14*x3 - 2//3*k21*k14*x4 + 2//3*k12*k41*x2 - 1//3*k12*k41*x3 - 1//3*k12*k41*x4 + 1//3*k13*k41*x2 - 2//3*k13*k41*x3 + 1//3*k13*k41*x4)//(k31*x2 - k31*x4 - k21*x3 + k21*x4 - k41*x2 + k41*x3),
│ (2//3*x2^2 - 2//3*x2*x3 - 2//3*x2*x4 + 2//3*x3^2 - 2//3*x3*x4 + 2//3*x4^2)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-4//3*x2^2 + 4//3*x2*x3 + 4//3*x2*x4 - 4//3*x3^2 + 4//3*x3*x4 - 4//3*x4^2)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (2//3*x2^2 - 2//3*x2*x3 - 2//3*x2*x4 + 2//3*x3^2 - 2//3*x3*x4 + 2//3*x4^2)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-4//3*x2^2 + 4//3*x2*x3 + 4//3*x2*x4 - 4//3*x3^2 + 4//3*x3*x4 - 4//3*x4^2)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-2//3*k12^2 + 2//3*k12*k13 + 2//3*k12*k14 - 2//3*k13^2 + 2//3*k13*k14 - 2//3*k14^2)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-2//3*k31^2 + 2//3*k31*k21 + 2//3*k31*k41 - 2//3*k21^2 + 2//3*k21*k41 - 2//3*k41^2)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (2//3*k12*x2 - 1//3*k12*x3 - 1//3*k12*x4 - 1//3*k13*x2 + 2//3*k13*x3 - 1//3*k13*x4 - 1//3*k14*x2 - 1//3*k14*x3 + 2//3*k14*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (4//3*k12*x2 - 2//3*k12*x3 - 2//3*k12*x4 - 2//3*k13*x2 + 4//3*k13*x3 - 2//3*k13*x4 - 2//3*k14*x2 - 2//3*k14*x3 + 4//3*k14*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-2//3*k12*x2 + 1//3*k12*x3 + 1//3*k12*x4 + 1//3*k13*x2 - 2//3*k13*x3 + 1//3*k13*x4 + 1//3*k14*x2 + 1//3*k14*x3 - 2//3*k14*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-4//3*k12*x2 + 2//3*k12*x3 + 2//3*k12*x4 + 2//3*k13*x2 - 4//3*k13*x3 + 2//3*k13*x4 + 2//3*k14*x2 + 2//3*k14*x3 - 4//3*k14*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (2//3*k31*x2 - 4//3*k31*x3 + 2//3*k31*x4 - 4//3*k21*x2 + 2//3*k21*x3 + 2//3*k21*x4 + 2//3*k41*x2 + 2//3*k41*x3 - 4//3*k41*x4)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-1//3*k31*x2 + 2//3*k31*x3 - 1//3*k31*x4 + 2//3*k21*x2 - 1//3*k21*x3 - 1//3*k21*x4 - 1//3*k41*x2 - 1//3*k41*x3 + 2//3*k41*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-2//3*k31*x2 + 4//3*k31*x3 - 2//3*k31*x4 + 4//3*k21*x2 - 2//3*k21*x3 - 2//3*k21*x4 - 2//3*k41*x2 - 2//3*k41*x3 + 4//3*k41*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (1//3*k31*x2 - 2//3*k31*x3 + 1//3*k31*x4 - 2//3*k21*x2 + 1//3*k21*x3 + 1//3*k21*x4 + 1//3*k41*x2 + 1//3*k41*x3 - 2//3*k41*x4)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3),
│ (-2//3*k31*k12 + 4//3*k31*k13 - 2//3*k31*k14 + 4//3*k21*k12 - 2//3*k21*k13 - 2//3*k21*k14 - 2//3*k12*k41 - 2//3*k13*k41 + 4//3*k14*k41)//(k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3),
│ (-2//3*k31*k12 + 4//3*k31*k13 - 2//3*k31*k14 + 4//3*k21*k12 - 2//3*k21*k13 - 2//3*k21*k14 - 2//3*k12*k41 - 2//3*k13*k41 + 4//3*k14*k41)//(k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3)
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:226
┌ Info: Computing normal forms (probabilistic)
│ Parameters (11 in total): Nemo.fmpq_mpoly[k01, k31, k21, k12, k13, k14, k41, x1, x2, x3, x4]
│ Up to degree: 3
│ Modulo: Galois field with characteristic 1073741827
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:135
┌ Info: Specializing at the 1-th random point: Nemo.gfp_elem[16089800, 1033632690, 262827581, 857126218, 988870169, 974464925, 914407372, 862019090, 1028001175, 458378001, 643212231]
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:145
┌ Info: Computing relations of 363 normal forms
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:178
┌ Info: Obtained 146 local relations over FF
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:181
┌ Info: Specializing at the 2-th random point: Nemo.gfp_elem[61224848, 533964203, 336575716, 131506128, 834832727, 680250398, 479402426, 634231578, 169010399, 437069471, 114359177]
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:145
┌ Info: Computing relations of 363 normal forms
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:178
┌ Info: Obtained 146 local relations over FF
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:181
┌ Info: There are 13 relations in the intersection
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:189
┌ Info: Specializing at the 3-th random point: Nemo.gfp_elem[193421994, 296175002, 879996247, 268001214, 777319677, 988785125, 13717339, 275086997, 34530595, 784190347, 867135862]
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:145
┌ Info: Computing relations of 363 normal forms
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:178
┌ Info: Obtained 146 local relations over FF
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:181
┌ Info: There are 13 relations in the intersection
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:189
┌ Info: Reconstructing relations to rationals
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/normalforms.jl:195
┌ Info: Final cleaning and simplification of generators
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:529
┌ Info: The pool of fractions:
│ x1,
│ x1,
│ k01,
│ k01,
│ x1^2,
│ k01*x1,
│ k01^2,
│ x2*x3*x4,
│ x1^3,
│ k12*k13*k14,
│ k31*k21*k41,
│ k01*x1^2,
│ k01^2*x1,
│ k01^3,
│ x2 + x3 + x4,
│ k12 + k13 + k14,
│ k31 + k21 + k41,
│ x1^2*x2 + x1^2*x3 + x1^2*x4,
│ k31^2*k12^2 - 2*k31^2*k12*k14 + k31^2*k14^2 - 2*k31*k21*k12*k13 + 2*k31*k21*k12*k14 + 2*k31*k21*k13*k14 - 2*k31*k21*k14^2 - 2*k31*k12^2*k41 + 2*k31*k12*k13*k41 + 2*k31*k12*k14*k41 - 2*k31*k13*k14*k41 + k21^2*k13^2 - 2*k21^2*k13*k14 + k21^2*k14^2 + 2*k21*k12*k13*k41 - 2*k21*k12*k14*k41 - 2*k21*k13^2*k41 + 2*k21*k13*k14*k41 + k12^2*k41^2 - 2*k12*k13*k41^2 + k13^2*k41^2,
│ k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3,
│ k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3,
│ (x2^2*x3 - x2^2*x4 - x2*x3^2 + x2*x4^2 + x3^2*x4 - x3*x4^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12*x3^2 - k12*x4^2 - k13*x2^2 + k13*x4^2 + k14*x2^2 - k14*x3^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12*k13*x2 - k12*k13*x3 - k12*k14*x2 + k12*k14*x4 + k13*k14*x3 - k13*k14*x4)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3),
│ (k12^2*k13 - k12^2*k14 - k12*k13^2 + k12*k14^2 + k13^2*k14 - k13*k14^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3)
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:226
┌ Info: Checking inclusion with probability 0.995
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:532
┌ Info: Inclusion checked in 0.201567557 seconds. Result: true
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:535
┌ Info: Out of 15 initial generators there are 12 indepdendent
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:540
┌ Info: The ranking of the new set of generators is 47969
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:543
┌ Info: The search for identifiable functions concluded in 9.682746925 seconds
└ @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:75
┌ Info: Identifiable functions are
│   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[x1, k01, x2*x3*x4, k12*k13*k14, k31*k21*k41, x2 + x3 + x4, k12 + k13 + k14, k31 + k21 + k41, k31^2*k12^2 - 2*k31^2*k12*k14 + k31^2*k14^2 - 2*k31*k21*k12*k13 + 2*k31*k21*k12*k14 + 2*k31*k21*k13*k14 - 2*k31*k21*k14^2 - 2*k31*k12^2*k41 + 2*k31*k12*k13*k41 + 2*k31*k12*k14*k41 - 2*k31*k13*k14*k41 + k21^2*k13^2 - 2*k21^2*k13*k14 + k21^2*k14^2 + 2*k21*k12*k13*k41 - 2*k21*k12*k14*k41 - 2*k21*k13^2*k41 + 2*k21*k13*k14*k41 + k12^2*k41^2 - 2*k12*k13*k41^2 + k13^2*k41^2, k31*k12^2*x3 - k31*k12^2*x4 - k31*k12*k13*x2 + k31*k12*k13*x4 + k31*k12*k14*x2 - 2*k31*k12*k14*x3 + k31*k12*k14*x4 + k31*k13*k14*x2 - k31*k13*k14*x4 - k31*k14^2*x2 + k31*k14^2*x3 - k21*k12*k13*x3 + k21*k12*k13*x4 + k21*k12*k14*x3 - k21*k12*k14*x4 + k21*k13^2*x2 - k21*k13^2*x4 - 2*k21*k13*k14*x2 + k21*k13*k14*x3 + k21*k13*k14*x4 + k21*k14^2*x2 - k21*k14^2*x3 - k12^2*k41*x3 + k12^2*k41*x4 + k12*k13*k41*x2 + k12*k13*k41*x3 - 2*k12*k13*k41*x4 - k12*k14*k41*x2 + k12*k14*k41*x3 - k13^2*k41*x2 + k13^2*k41*x4 + k13*k14*k41*x2 - k13*k14*k41*x3, k31^2*k12*x2 - k31^2*k12*x4 - k31^2*k14*x2 + k31^2*k14*x4 - k31*k21*k12*x3 + k31*k21*k12*x4 - k31*k21*k13*x2 + k31*k21*k13*x4 + k31*k21*k14*x2 + k31*k21*k14*x3 - 2*k31*k21*k14*x4 - 2*k31*k12*k41*x2 + k31*k12*k41*x3 + k31*k12*k41*x4 + k31*k13*k41*x2 - k31*k13*k41*x4 + k31*k14*k41*x2 - k31*k14*k41*x3 + k21^2*k13*x3 - k21^2*k13*x4 - k21^2*k14*x3 + k21^2*k14*x4 + k21*k12*k41*x3 - k21*k12*k41*x4 + k21*k13*k41*x2 - 2*k21*k13*k41*x3 + k21*k13*k41*x4 - k21*k14*k41*x2 + k21*k14*k41*x3 + k12*k41^2*x2 - k12*k41^2*x3 - k13*k41^2*x2 + k13*k41^2*x3, (x2^2*x3 - x2^2*x4 - x2*x3^2 + x2*x4^2 + x3^2*x4 - x3*x4^2)//(k12*x3 - k12*x4 - k13*x2 + k13*x4 + k14*x2 - k14*x3)]
└ @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
