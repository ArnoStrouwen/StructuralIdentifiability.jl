âŒœ # Computing specializations..  	 Time: 0:00:16[Kâœ“ # Computing specializations..  	 Time: 0:00:21[K
âŒœ # Computing specializations.. 	 Time: 0:00:01[K
  Points:  2[K[K[Aâœ“ # Computing specializations.. 	 Time: 0:00:05[K
â”Œ Info: Processing Goodwin oscillator
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:40
â”Œ Info: Averaging over 1 runs.
â”‚ Using keyword arguments:
â”‚ NamedTuple{(:strategy, :with_states), Tuple{Tuple{Symbol, Int64}, Bool}}
â”‚ (strategy = (:normalforms, 2), with_states = true)
â”‚ ID: (:normalforms, 2)_with_states
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:41
â”Œ Info: Computing IO-equations
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:160
â”Œ Info: IO-equations computed in 0.706887575 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:162
â”Œ Info: Simplifying identifiable functions
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:644
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”‚ Assess correctness: false
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:63
â”Œ Info: Given 96 functions in Rational Field(b, alpha, c, gama, delta, sigma, x3, x1, beta, y, x2, x4)[y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, t]
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/groebnerstate.jl:25
â”Œ Info: Specializing at 3 points to guess the shape of the basis..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:140
â”Œ Info: Specializing at random points to guess the total degrees in parameters..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:189
â”Œ Info: Success! 34 points used.
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:273
â”Œ Info: The total degrees in the coefficients
â”‚   state.param_degrees = [[(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (1, 0)], [(0, 0), (3, 2), (2, 1)], [(0, 0), (1, 0), (2, 0)], [(0, 0), (0, 0), (2, 1)], [(0, 0), (2, 1), (2, 1)], [(0, 0), (2, 1)], [(0, 0), (3, 3), (3, 3)], [(0, 0), (3, 2), (2, 1)], [(0, 0), (0, 6)], [(0, 0), (0, 6), (2, 7)]]
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:274
â”Œ Info: Interpolating the exponents in parameters..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:284
â”Œ Info: Interpolating for degrees:
â”‚ Numerator: 3, Denominator: 3
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:333
â”Œ Info: Success! 64 points used.
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:411
â”Œ Info: Basis exponents summary:
â”‚     Maximal interpolated degrees are: 2 for num. and 1 for den.
â”‚     Maximal number of interpolated terms are: 3 for num. and 1 for den.
â”‚     
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:416
â”Œ Info: Recovering the coefficients..
â”” @ ParamPunPam /home/demin/ParamPunPam.jl/src/groebner/paramgb.jl:424
â”Œ Info: Groebner basis computed in 1.947298727 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:363
â”Œ Info: Checking two-sided inclusion modulo a prime
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:368
â”Œ Info: Inclusion checked in 0.031747793 seconds. Result: true
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:378
â”Œ Info: The coefficients of the Groebner basis are presented by 13 rational functions
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:382
â”Œ Info: The pool of fractions:
â”‚ -x4,
â”‚ -x1,
â”‚ -sigma,
â”‚ -c,
â”‚ -b,
â”‚ delta*beta,
â”‚ -delta - beta,
â”‚ (alpha*gama)//x3,
â”‚ (-alpha*gama)//x3,
â”‚ (-gama*x2 - x3*beta)//x3,
â”‚ (gama*x2 - delta*x3)//x3,
â”‚ (-2*gama*x2 + delta*x3 - x3*beta)//x3
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
â”Œ Info: Computing normal forms of monomials in 12 variables up to degree 2
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:554
â”Œ Info: Reducing the normal forms of 90 monomials over QQ
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:570
â”Œ Info: Generators from normal forms
â”‚   generators = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[b, c, sigma, x1, x4, b^2, b*c, b*sigma, b*x1, b*x4, c^2, c*sigma, c*x1, c*x4, delta*beta, sigma^2, sigma*x1, sigma*x4, x1^2, x1*x4, x4^2, delta + beta, b*delta + b*beta, c*delta + c*beta, delta*sigma + sigma*beta, delta*x1 + x1*beta, delta^2 + beta^2, delta*x4 + beta*x4]
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:573
â”Œ Info: Final cleaning and simplification of generators
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:697
â”Œ Info: The pool of fractions:
â”‚ x4,
â”‚ x4,
â”‚ x1,
â”‚ x1,
â”‚ sigma,
â”‚ sigma,
â”‚ c,
â”‚ c,
â”‚ b,
â”‚ b,
â”‚ x4^2,
â”‚ x1*x4,
â”‚ x1^2,
â”‚ sigma*x4,
â”‚ sigma*x1,
â”‚ sigma^2,
â”‚ delta*beta,
â”‚ delta*beta,
â”‚ c*x4,
â”‚ c*x1,
â”‚ c*sigma,
â”‚ c^2,
â”‚ b*x4,
â”‚ b*x1,
â”‚ b*sigma,
â”‚ b*c,
â”‚ b^2,
â”‚ delta + beta,
â”‚ delta + beta,
â”‚ delta*x4 + beta*x4,
â”‚ delta*x1 + x1*beta,
â”‚ delta*sigma + sigma*beta,
â”‚ delta^2 + beta^2,
â”‚ c*delta + c*beta,
â”‚ b*delta + b*beta,
â”‚ (alpha*gama)//x3,
â”‚ (gama*x2 + x3*beta)//x3
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:261
â”Œ Info: Checking inclusion with probability 0.99
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:700
â”Œ Info: Inclusion checked in 0.043827193 seconds. Result: true
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:703
â”Œ Info: Out of 95 initial generators there are 9 indepdendent
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:708
â”Œ Info: The ranking of the new set of generators is 138
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/RationalFunctionFields/RationalFunctionField.jl:711
â”Œ Info: The search for identifiable functions concluded in 6.069336719 seconds
â”” @ StructuralIdentifiability /home/demin/StructuralIdentifiability.jl/src/identifiable_functions.jl:77
â”Œ Info: Identifiable functions are
â”‚   funcs = AbstractAlgebra.Generic.Frac{Nemo.fmpq_mpoly}[x4, x1, sigma, c, b, delta*beta, delta + beta, (alpha*gama)//x3, (gama*x2 + x3*beta)//x3]
â”” @ Main /home/demin/StructuralIdentifiability.jl/benchmarking/IdentifiableFunctions/run_single_benchmark.jl:53
